# 批次（Batch / Lot）相关
valueObjects:
  BffLotDto:
    metadata:
      JpaProjectionInterfaceName: BffLotProjection
      #JpaProjectionPropertyAliases:
      #  ExpirationDate: ExpirationDateInstant
      JpaProjectionPropertyTypes:
        ExpirationDate: java.time.Instant
        HarvestDate: java.time.Instant
        PackDate: java.time.Instant
      JakartaValidationEnabled: true
    properties:
      LotId:
        type: id
      Gs1Batch:
        description: "GS1 BATCH (AI=10)"
        type: id
        constraints:
          - Gs1Batch
      Quantity:
        type: fixed-point
      ExpirationDate:
        type: date-time
      Active:
        type: indicator
      InternalId:
        type: id
      Gtin:
        type: id
        # description: "AI (01) Case GTIN"
      # CaseBatch:
      #   type: KdeBatch
      #   description: "AI (10) Case Batch/Lot"
      #   # Use for Traceability Lot Code (TLC)
      SourceFacilityId:
        type: id
        description: "The facility (location) where TLC was assigned during initial packing or transformation"
      # ---------------------------------------------------------------------
      PalletSscc:
        type: SSCC
        # description: "AI (00) Pallet SSCC"
        # use for Traceability Lot Code (TLC)
      PackDate:
        type: date-time
        # description: "AI (13) Pack Date"
        # use for Traceability Lot Code (TLC)
      HarvestDate:
        type: date-time
        # description: "AI (13) Harvest Date"
        # use for Traceability Lot Code (TLC)
      SerialNumber:
        type: id-long
        # description: "AI (21) Serial Number"
        # use for Traceability Lot Code (TLC)

services:
  BffLotService:
    restfulResourceName: "BffLots"
    methods:
      GetLots:
        metadata:
          IsPageable: true
          ReturnPageEnvelope: true
        isQuery: true
        #httpMethod: GET
        parameters:
          Active:
            type: indicator
          Keyword:
            type: id
        result:
          itemType: BffLotDto

      GetLot:
        metadata:
          RestfulPathVariable: LotId
        isQuery: true
        result:
          type: BffLotDto
        parameters:
          LotId:
            type: id

      CreateLot:
        # 新增 Lot
        httpMethod: POST
        metadata:
          HttpRequestBody: Lot
        parameters:
          Lot:
            type: BffLotDto
        result:
          type: id # LotId

      UpdateLot:
        metadata:
          RestfulPathVariable: LotId
          HttpRequestBody: Lot
        httpMethod: PUT
        parameters:
          LotId:
            type: id
            optional: false # is required
          Lot:
            type: BffLotDto

      ActivateLot:
        # 禁用 / 激活指定 Id 的 Lot
        restfulResourceName: "{LotId}/active"
        metadata:
          RestfulPathVariable: LotId
          HttpRequestBody: Active
        httpMethod: PUT
        parameters:
          LotId:
            type: id
            optional: false # is required
          Active:
            # 禁用传入 false；激活传入 true。
            type: boolean

      BatchAddLots:
        # 批量添加 Lot
        httpMethod: POST
        restfulResourceName: "batchAddLots"
        metadata:
          HttpRequestBody: Lots
        parameters:
          Lots:
            itemType: BffLotDto
 
      # -----------------------------------------------------------------------------
      # 对于同样的 Case GTIN 和 Case Batch 组合，可以存在多条 Lot 记录。
      # 但其中有一种“特殊记录”，对于每个 GTIN+Batch 组合只能存在一条。
      # 这种特殊记录的 GTIN 和 Batch 是必填的，且 SourceFacilityId 一般情况下也应该有值。
      # （除此以外的其他属性一般情况下应为 null。）
      # 基于这个业务场景，我们将这种记录称为 "Primary" TLC (Traceability Lot Code)。
      # 它的主要作用之一是用于确定赋予 TLC GTIN/Batch 的“源头设施”。
      # -----------------------------------------------------------------------------
      GetPrimaryTlc:
        isQuery: true
        restfulResourceName: "getPrimaryTlc"
        parameters:
          Gtin:
            type: id
            optional: false # is required
          Gs1Batch:
            type: id
            optional: false # is required
        result:
          type: BffLotDto

      CreatePrimaryTlc:
        # 创建“特殊”的 Primary Traceability Lot Code (TLC)
        httpMethod: POST
        restfulResourceName: "createPrimaryTlc"
        metadata:
          HttpRequestBody: PrimaryTlc
        parameters:
          PrimaryTlc:
            type: BffLotDto
        result:
          type: id # LotId of created Primary TLC

      ConvertToPrimaryTlc:
        # 将一条“普通”的 Lot 记录转换为 Primary TLC
        httpMethod: POST
        restfulResourceName: "{LotId}/convertToPrimaryTlc"
        metadata:
          RestfulPathVariable: LotId
          HttpRequestBody: PrimaryTlc
        parameters:
          LotId:
            type: id
          PrimaryTlc:
            type: BffLotDto


