valueObjects:
  BffQaInspectionDto:
    metadata:
      JpaProjectionInterfaceName: BffQaInspectionProjection
      JpaProjectionPropertyTypes:
        InspectedAt: java.time.Instant
        CreatedAt: java.time.Instant
        UpdatedAt: java.time.Instant
    properties:
      QaInspectionId:
        type: id-long
      ReceiptId:
        type: id-long
        # 关联的收货记录 Id
      StatusId:
        type: id
        # Approved / Rejected / On-hold ?
        # `resultId`: 检验结果（合格/不合格/部分合格）?
      InspectionTypeId:
        type: id
      ProductId:
        type: id
      LotId:
        type: id
      SupplierId:
        type: id
      Comments:
        type: comment
      InspectionFacilityId:
        type: id
      # SampleUomId:
      #   type: id
      # SampleSize:
      #   type: fixed-point
      # QualityLevelId:
      #   # 质量等级 Id
      #   type: id
      #
      # - `referenceDocs`: 相关单据号。
      # **也许暂时不需要。如果需要，可以考虑使用一个（聚合内）实体来记录关联的单据。**
      #
      InspectedBy: 
        # 检验员ID
        type: id-vlong
         # inspectedBy 和 createdBy 是一回事？
      CreatedBy:
        type: id-long
      InspectedAt: 
        # 检验日期时间
        type: date-time
        # inspectedAt 和 createdAt 是一回事？
      CreatedAt:
        # 创建时间
        type: date-time
      UpdatedAt:
        # 更新时间
        type: date-time


services:
  BffQaInspectionService:
    restfulResourceName: BffQaInspections
    methods:
      GetQaInspections:
        # metadata:
        #   IsPageable: true
        #   ReturnPageEnvelope: true
        isQuery: true
        #httpMethod: GET
        parameters:
          ReceivingDocumentId:
            type: id
            optional: false # is required
          ReceiptId:
            type: id-long
        result:
          itemType: BffQaInspectionDto

      GetQaInspection:
        #根据 Id 查询产品的详细信息
        metadata:
          RestfulPathVariable: QaInspectionId
        isQuery: true
        result:
          type: BffQaInspectionDto
        parameters:
          QaInspectionId:
            type: id-long

      CreateQaInspection:
        # NOTE: 当 `ReceiptId` 不为空时，要求 `QaInspectionId` 要么为 null，要么必须等于 `ReceiptId`。
        # 后端会直接使用 `ReceiptId` 作为 `QaInspectionId` 来创建 QA Inspection。
        # （按照当前的场景，这样做可以简化后续的处理逻辑）
        httpMethod: POST
        metadata:
          HttpRequestBody: QaInspection
        parameters:
          QaInspection:
            type: BffQaInspectionDto
        result:
          type: id-long # QaInspectionId

      UpdateQaInspection:
        # 更新指定的 Item 的信息。
        # NOTE: 不允许修改 `ReceiptId`。
        metadata:
          RestfulPathVariable: QaInspectionId
          HttpRequestBody: QaInspection
        httpMethod: PUT
        parameters:
          QaInspectionId:
            type: id-long
            optional: false # is required
          QaInspection:
            type: BffQaInspectionDto

      BatchAddQaInspections:
        # 批量添加 QA Inspection
        httpMethod: POST
        restfulResourceName: "batchAddQaInspections"
        metadata:
          HttpRequestBody: QaInspections
        parameters:
          QaInspections:
            itemType: BffQaInspectionDto

      BatchAddOrUpdateQaInspections:
        # 批量添加或更新 QA Inspection
        httpMethod: POST
        restfulResourceName: "batchAddOrUpdateQaInspections"
        metadata:
          HttpRequestBody: QaInspections
        parameters:
          QaInspections:
            itemType: BffQaInspectionDto
            # 使用 `QaInspectionId` 来查询 QA Inspection。
            # （一般情况情况下，`QaInspectionId` 应该等于 `ReceiptId`。因为目前没有“不经过收货”就直接检验的场景）
            # 如果查询不到 QA Inspection，则创建新的 QA Inspection；
            # 否则更新 QA Inspection。
