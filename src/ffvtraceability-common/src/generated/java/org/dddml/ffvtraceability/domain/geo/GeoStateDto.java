// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.geo;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class GeoStateDto {

    private String geoId;

    public String getGeoId()
    {
        return this.geoId;
    }

    public void setGeoId(String geoId)
    {
        this.geoId = geoId;
    }

    private String geoTypeId;

    public String getGeoTypeId()
    {
        return this.geoTypeId;
    }

    public void setGeoTypeId(String geoTypeId)
    {
        this.geoTypeId = geoTypeId;
    }

    private String geoName;

    public String getGeoName()
    {
        return this.geoName;
    }

    public void setGeoName(String geoName)
    {
        this.geoName = geoName;
    }

    private String geoCode;

    public String getGeoCode()
    {
        return this.geoCode;
    }

    public void setGeoCode(String geoCode)
    {
        this.geoCode = geoCode;
    }

    private String geoSecCode;

    public String getGeoSecCode()
    {
        return this.geoSecCode;
    }

    public void setGeoSecCode(String geoSecCode)
    {
        this.geoSecCode = geoSecCode;
    }

    private String abbreviation;

    public String getAbbreviation()
    {
        return this.abbreviation;
    }

    public void setAbbreviation(String abbreviation)
    {
        this.abbreviation = abbreviation;
    }

    private String wellKnownText;

    public String getWellKnownText()
    {
        return this.wellKnownText;
    }

    public void setWellKnownText(String wellKnownText)
    {
        this.wellKnownText = wellKnownText;
    }

    private Long sequenceNumber;

    public Long getSequenceNumber()
    {
        return this.sequenceNumber;
    }

    public void setSequenceNumber(Long sequenceNumber)
    {
        this.sequenceNumber = sequenceNumber;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public GeoStateDto[] toGeoStateDtoArray(Iterable<GeoState> states) {
            return toGeoStateDtoList(states).toArray(new GeoStateDto[0]);
        }

        public List<GeoStateDto> toGeoStateDtoList(Iterable<GeoState> states) {
            ArrayList<GeoStateDto> stateDtos = new ArrayList();
            for (GeoState s : states) {
                GeoStateDto dto = toGeoStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public GeoStateDto toGeoStateDto(GeoState state)
        {
            if(state == null) {
                return null;
            }
            GeoStateDto dto = new GeoStateDto();
            if (returnedFieldsContains("GeoId")) {
                dto.setGeoId(state.getGeoId());
            }
            if (returnedFieldsContains("GeoTypeId")) {
                dto.setGeoTypeId(state.getGeoTypeId());
            }
            if (returnedFieldsContains("GeoName")) {
                dto.setGeoName(state.getGeoName());
            }
            if (returnedFieldsContains("GeoCode")) {
                dto.setGeoCode(state.getGeoCode());
            }
            if (returnedFieldsContains("GeoSecCode")) {
                dto.setGeoSecCode(state.getGeoSecCode());
            }
            if (returnedFieldsContains("Abbreviation")) {
                dto.setAbbreviation(state.getAbbreviation());
            }
            if (returnedFieldsContains("WellKnownText")) {
                dto.setWellKnownText(state.getWellKnownText());
            }
            if (returnedFieldsContains("SequenceNumber")) {
                dto.setSequenceNumber(state.getSequenceNumber());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

