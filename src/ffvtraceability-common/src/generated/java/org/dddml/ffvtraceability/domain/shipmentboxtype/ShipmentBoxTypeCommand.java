// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.shipmentboxtype;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface ShipmentBoxTypeCommand extends Command {

    String getShipmentBoxTypeId();

    void setShipmentBoxTypeId(String shipmentBoxTypeId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(ShipmentBoxTypeState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((ShipmentBoxTypeCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (isCreationCommand((ShipmentBoxTypeCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(ShipmentBoxTypeCommand c) {
        if ((c instanceof ShipmentBoxTypeCommand.CreateShipmentBoxType) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(ShipmentBoxTypeState.VERSION_NULL)))
            return true;
        if ((c instanceof ShipmentBoxTypeCommand.MergePatchShipmentBoxType))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(ShipmentBoxTypeState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchShipmentBoxType extends ShipmentBoxTypeCommand {
        String getDescription();

        void setDescription(String description);

        String getDimensionUomId();

        void setDimensionUomId(String dimensionUomId);

        java.math.BigDecimal getBoxLength();

        void setBoxLength(java.math.BigDecimal boxLength);

        java.math.BigDecimal getBoxWidth();

        void setBoxWidth(java.math.BigDecimal boxWidth);

        java.math.BigDecimal getBoxHeight();

        void setBoxHeight(java.math.BigDecimal boxHeight);

        String getWeightUomId();

        void setWeightUomId(String weightUomId);

        java.math.BigDecimal getBoxWeight();

        void setBoxWeight(java.math.BigDecimal boxWeight);

        String getBoxTypeName();

        void setBoxTypeName(String boxTypeName);

    }

    interface CreateShipmentBoxType extends CreateOrMergePatchShipmentBoxType {
    }

    interface MergePatchShipmentBoxType extends CreateOrMergePatchShipmentBoxType {
        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyDimensionUomIdRemoved();

        void setIsPropertyDimensionUomIdRemoved(Boolean removed);

        Boolean getIsPropertyBoxLengthRemoved();

        void setIsPropertyBoxLengthRemoved(Boolean removed);

        Boolean getIsPropertyBoxWidthRemoved();

        void setIsPropertyBoxWidthRemoved(Boolean removed);

        Boolean getIsPropertyBoxHeightRemoved();

        void setIsPropertyBoxHeightRemoved(Boolean removed);

        Boolean getIsPropertyWeightUomIdRemoved();

        void setIsPropertyWeightUomIdRemoved(Boolean removed);

        Boolean getIsPropertyBoxWeightRemoved();

        void setIsPropertyBoxWeightRemoved(Boolean removed);

        Boolean getIsPropertyBoxTypeNameRemoved();

        void setIsPropertyBoxTypeNameRemoved(Boolean removed);


    }

    interface DeleteShipmentBoxType extends ShipmentBoxTypeCommand {
    }

}

