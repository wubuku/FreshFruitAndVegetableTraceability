// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.partycontactmech;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;

public interface PartyContactMechEvent extends Event {

    interface SqlPartyContactMechEvent extends PartyContactMechEvent {
        PartyContactMechEventId getPartyContactMechEventId();

        boolean getEventReadOnly();

        void setEventReadOnly(boolean readOnly);
    }

    OffsetDateTime getFromDate();

    //void setFromDate(OffsetDateTime fromDate);

    String getCreatedBy();

    void setCreatedBy(String createdBy);

    OffsetDateTime getCreatedAt();

    void setCreatedAt(OffsetDateTime createdAt);

    String getCommandId();

    void setCommandId(String commandId);

    interface PartyContactMechStateEvent extends PartyContactMechEvent {
        Long getVersion();

        void setVersion(Long version);

        OffsetDateTime getThruDate();

        void setThruDate(OffsetDateTime thruDate);

        String getRoleTypeId();

        void setRoleTypeId(String roleTypeId);

        String getAllowSolicitation();

        void setAllowSolicitation(String allowSolicitation);

        String getExtension();

        void setExtension(String extension);

        String getVerified();

        void setVerified(String verified);

        String getComments();

        void setComments(String comments);

        Long getYearsWithContactMech();

        void setYearsWithContactMech(Long yearsWithContactMech);

        Long getMonthsWithContactMech();

        void setMonthsWithContactMech(Long monthsWithContactMech);

    }

    interface PartyContactMechStateCreated extends PartyContactMechStateEvent
    {
        Iterable<PartyContactMechPurposeEvent.PartyContactMechPurposeStateCreated> getPartyContactMechPurposeEvents();
        
        void addPartyContactMechPurposeEvent(PartyContactMechPurposeEvent.PartyContactMechPurposeStateCreated e);

        PartyContactMechPurposeEvent.PartyContactMechPurposeStateCreated newPartyContactMechPurposeStateCreated(String contactMechPurposeTypeId);

    
    }


    interface PartyContactMechStateMergePatched extends PartyContactMechStateEvent
    {
        Boolean getIsPropertyThruDateRemoved();

        void setIsPropertyThruDateRemoved(Boolean removed);

        Boolean getIsPropertyRoleTypeIdRemoved();

        void setIsPropertyRoleTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyAllowSolicitationRemoved();

        void setIsPropertyAllowSolicitationRemoved(Boolean removed);

        Boolean getIsPropertyExtensionRemoved();

        void setIsPropertyExtensionRemoved(Boolean removed);

        Boolean getIsPropertyVerifiedRemoved();

        void setIsPropertyVerifiedRemoved(Boolean removed);

        Boolean getIsPropertyCommentsRemoved();

        void setIsPropertyCommentsRemoved(Boolean removed);

        Boolean getIsPropertyYearsWithContactMechRemoved();

        void setIsPropertyYearsWithContactMechRemoved(Boolean removed);

        Boolean getIsPropertyMonthsWithContactMechRemoved();

        void setIsPropertyMonthsWithContactMechRemoved(Boolean removed);


        Iterable<PartyContactMechPurposeEvent> getPartyContactMechPurposeEvents();
        
        void addPartyContactMechPurposeEvent(PartyContactMechPurposeEvent e);

        PartyContactMechPurposeEvent.PartyContactMechPurposeStateCreated newPartyContactMechPurposeStateCreated(String contactMechPurposeTypeId);

        PartyContactMechPurposeEvent.PartyContactMechPurposeStateMergePatched newPartyContactMechPurposeStateMergePatched(String contactMechPurposeTypeId);


    }


}

