// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.workeffortgoodstandard;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractWorkEffortGoodStandardEvent extends AbstractEvent implements WorkEffortGoodStandardEvent.SqlWorkEffortGoodStandardEvent {
    private WorkEffortGoodStandardEventId workEffortGoodStandardEventId = new WorkEffortGoodStandardEventId();

    public WorkEffortGoodStandardEventId getWorkEffortGoodStandardEventId() {
        return this.workEffortGoodStandardEventId;
    }

    public void setWorkEffortGoodStandardEventId(WorkEffortGoodStandardEventId eventId) {
        this.workEffortGoodStandardEventId = eventId;
    }
    
    public WorkEffortGoodStandardId getWorkEffortGoodStandardId() {
        return getWorkEffortGoodStandardEventId().getWorkEffortGoodStandardId();
    }

    public void setWorkEffortGoodStandardId(WorkEffortGoodStandardId workEffortGoodStandardId) {
        getWorkEffortGoodStandardEventId().setWorkEffortGoodStandardId(workEffortGoodStandardId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getWorkEffortGoodStandardEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getWorkEffortGoodStandardEventId().setVersion(version);
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractWorkEffortGoodStandardEvent() {
    }

    protected AbstractWorkEffortGoodStandardEvent(WorkEffortGoodStandardEventId eventId) {
        this.workEffortGoodStandardEventId = eventId;
    }


    public abstract String getEventType();

    public static class WorkEffortGoodStandardLobEvent extends AbstractWorkEffortGoodStandardEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "WorkEffortGoodStandardLobEvent";
        }

    }


    public static abstract class AbstractWorkEffortGoodStandardStateEvent extends AbstractWorkEffortGoodStandardEvent implements WorkEffortGoodStandardEvent.WorkEffortGoodStandardStateEvent {
        private OffsetDateTime thruDate;

        public OffsetDateTime getThruDate()
        {
            return this.thruDate;
        }

        public void setThruDate(OffsetDateTime thruDate)
        {
            this.thruDate = thruDate;
        }

        private String statusId;

        public String getStatusId()
        {
            return this.statusId;
        }

        public void setStatusId(String statusId)
        {
            this.statusId = statusId;
        }

        private java.math.BigDecimal estimatedQuantity;

        public java.math.BigDecimal getEstimatedQuantity()
        {
            return this.estimatedQuantity;
        }

        public void setEstimatedQuantity(java.math.BigDecimal estimatedQuantity)
        {
            this.estimatedQuantity = estimatedQuantity;
        }

        private java.math.BigDecimal estimatedCost;

        public java.math.BigDecimal getEstimatedCost()
        {
            return this.estimatedCost;
        }

        public void setEstimatedCost(java.math.BigDecimal estimatedCost)
        {
            this.estimatedCost = estimatedCost;
        }

        protected AbstractWorkEffortGoodStandardStateEvent(WorkEffortGoodStandardEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractWorkEffortGoodStandardStateCreated extends AbstractWorkEffortGoodStandardStateEvent implements WorkEffortGoodStandardEvent.WorkEffortGoodStandardStateCreated
    {
        public AbstractWorkEffortGoodStandardStateCreated() {
            this(new WorkEffortGoodStandardEventId());
        }

        public AbstractWorkEffortGoodStandardStateCreated(WorkEffortGoodStandardEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractWorkEffortGoodStandardStateMergePatched extends AbstractWorkEffortGoodStandardStateEvent implements WorkEffortGoodStandardEvent.WorkEffortGoodStandardStateMergePatched
    {
        public AbstractWorkEffortGoodStandardStateMergePatched() {
            this(new WorkEffortGoodStandardEventId());
        }

        public AbstractWorkEffortGoodStandardStateMergePatched(WorkEffortGoodStandardEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyThruDateRemoved;

        public Boolean getIsPropertyThruDateRemoved() {
            return this.isPropertyThruDateRemoved;
        }

        public void setIsPropertyThruDateRemoved(Boolean removed) {
            this.isPropertyThruDateRemoved = removed;
        }

        private Boolean isPropertyStatusIdRemoved;

        public Boolean getIsPropertyStatusIdRemoved() {
            return this.isPropertyStatusIdRemoved;
        }

        public void setIsPropertyStatusIdRemoved(Boolean removed) {
            this.isPropertyStatusIdRemoved = removed;
        }

        private Boolean isPropertyEstimatedQuantityRemoved;

        public Boolean getIsPropertyEstimatedQuantityRemoved() {
            return this.isPropertyEstimatedQuantityRemoved;
        }

        public void setIsPropertyEstimatedQuantityRemoved(Boolean removed) {
            this.isPropertyEstimatedQuantityRemoved = removed;
        }

        private Boolean isPropertyEstimatedCostRemoved;

        public Boolean getIsPropertyEstimatedCostRemoved() {
            return this.isPropertyEstimatedCostRemoved;
        }

        public void setIsPropertyEstimatedCostRemoved(Boolean removed) {
            this.isPropertyEstimatedCostRemoved = removed;
        }


    }



    public static class SimpleWorkEffortGoodStandardStateCreated extends AbstractWorkEffortGoodStandardStateCreated
    {
        public SimpleWorkEffortGoodStandardStateCreated() {
        }

        public SimpleWorkEffortGoodStandardStateCreated(WorkEffortGoodStandardEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleWorkEffortGoodStandardStateMergePatched extends AbstractWorkEffortGoodStandardStateMergePatched
    {
        public SimpleWorkEffortGoodStandardStateMergePatched() {
        }

        public SimpleWorkEffortGoodStandardStateMergePatched(WorkEffortGoodStandardEventId eventId) {
            super(eventId);
        }
    }

}

