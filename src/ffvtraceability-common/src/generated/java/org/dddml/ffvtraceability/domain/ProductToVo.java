// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain;

import java.io.Serializable;
import org.dddml.ffvtraceability.domain.*;

public class ProductToVo implements Serializable {
    private String productId;

    public String getProductId()
    {
        return this.productId;
    }

    public void setProductId(String productId)
    {
        this.productId = productId;
    }

    private java.math.BigDecimal quantity;

    public java.math.BigDecimal getQuantity()
    {
        return this.quantity;
    }

    public void setQuantity(java.math.BigDecimal quantity)
    {
        this.quantity = quantity;
    }

    private java.math.BigDecimal scrapFactor;

    public java.math.BigDecimal getScrapFactor()
    {
        return this.scrapFactor;
    }

    public void setScrapFactor(java.math.BigDecimal scrapFactor)
    {
        this.scrapFactor = scrapFactor;
    }

    public ProductToVo()
    {
    }

    public ProductToVo(String productId, java.math.BigDecimal quantity, java.math.BigDecimal scrapFactor)
    {
        this.productId = productId;
        this.quantity = quantity;
        this.scrapFactor = scrapFactor;
    }

    @Override
    public boolean equals(Object obj)
    {
        if (obj == this) {
            return true;
        }
        if (obj == null || obj.getClass() != this.getClass()) {
            return false;
        }

        ProductToVo other = (ProductToVo)obj;
        return true 
            && (productId == other.productId || (productId != null && productId.equals(other.productId)))
            && (quantity == other.quantity || (quantity != null && quantity.equals(other.quantity)))
            && (scrapFactor == other.scrapFactor || (scrapFactor != null && scrapFactor.equals(other.scrapFactor)))
            ;
    }

    @Override
    public int hashCode()
    {
        int hash = 0;
        if (this.productId != null) {
            hash += 13 * this.productId.hashCode();
        }
        if (this.quantity != null) {
            hash += 13 * this.quantity.hashCode();
        }
        if (this.scrapFactor != null) {
            hash += 13 * this.scrapFactor.hashCode();
        }
        return hash;
    }

    @Override
    public String toString() {
        return "ProductToVo{" +
                "productId=" + '\'' + productId + '\'' +
                ", quantity=" + quantity +
                ", scrapFactor=" + scrapFactor +
                '}';
    }


}

