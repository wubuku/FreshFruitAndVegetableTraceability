// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.qainspection;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface QaInspectionCommand extends Command {

    String getQaInspectionId();

    void setQaInspectionId(String qaInspectionId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(QaInspectionState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((QaInspectionCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (isCreationCommand((QaInspectionCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(QaInspectionCommand c) {
        if ((c instanceof QaInspectionCommand.CreateQaInspection) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(QaInspectionState.VERSION_NULL)))
            return true;
        if ((c instanceof QaInspectionCommand.MergePatchQaInspection))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
            if (commandType.equals("QaInspectionAction"))
                return false;
        }

        if (c.getVersion().equals(QaInspectionState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchQaInspection extends QaInspectionCommand {
        String getQaInspectionAction();

        void setQaInspectionAction(String qaInspectionAction);
                
        String getReceiptId();

        void setReceiptId(String receiptId);

        String getInspectionTypeId();

        void setInspectionTypeId(String inspectionTypeId);

        String getComments();

        void setComments(String comments);

        String getInspectionFacilityId();

        void setInspectionFacilityId(String inspectionFacilityId);

        String getInspectedBy();

        void setInspectedBy(String inspectedBy);

        OffsetDateTime getInspectedAt();

        void setInspectedAt(OffsetDateTime inspectedAt);

    }

    interface CreateQaInspection extends CreateOrMergePatchQaInspection {
    }

    interface MergePatchQaInspection extends CreateOrMergePatchQaInspection {
        Boolean getIsPropertyReceiptIdRemoved();

        void setIsPropertyReceiptIdRemoved(Boolean removed);

        Boolean getIsPropertyInspectionTypeIdRemoved();

        void setIsPropertyInspectionTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyCommentsRemoved();

        void setIsPropertyCommentsRemoved(Boolean removed);

        Boolean getIsPropertyInspectionFacilityIdRemoved();

        void setIsPropertyInspectionFacilityIdRemoved(Boolean removed);

        Boolean getIsPropertyInspectedByRemoved();

        void setIsPropertyInspectedByRemoved(Boolean removed);

        Boolean getIsPropertyInspectedAtRemoved();

        void setIsPropertyInspectedAtRemoved(Boolean removed);


    }

    interface DeleteQaInspection extends QaInspectionCommand {
    }

}

