// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.partycontactmech;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractPartyContactMechPurposeEvent extends AbstractEvent implements PartyContactMechPurposeEvent.SqlPartyContactMechPurposeEvent {
    private PartyContactMechPurposeEventId partyContactMechPurposeEventId = new PartyContactMechPurposeEventId();

    public PartyContactMechPurposeEventId getPartyContactMechPurposeEventId() {
        return this.partyContactMechPurposeEventId;
    }

    public void setPartyContactMechPurposeEventId(PartyContactMechPurposeEventId eventId) {
        this.partyContactMechPurposeEventId = eventId;
    }
    
    public String getContactMechPurposeTypeId() {
        return getPartyContactMechPurposeEventId().getContactMechPurposeTypeId();
    }

    public void setContactMechPurposeTypeId(String contactMechPurposeTypeId) {
        getPartyContactMechPurposeEventId().setContactMechPurposeTypeId(contactMechPurposeTypeId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    protected AbstractPartyContactMechPurposeEvent() {
    }

    protected AbstractPartyContactMechPurposeEvent(PartyContactMechPurposeEventId eventId) {
        this.partyContactMechPurposeEventId = eventId;
    }


    public abstract String getEventType();


    public static abstract class AbstractPartyContactMechPurposeStateEvent extends AbstractPartyContactMechPurposeEvent implements PartyContactMechPurposeEvent.PartyContactMechPurposeStateEvent {
        private Long version;

        public Long getVersion()
        {
            return this.version;
        }

        public void setVersion(Long version)
        {
            this.version = version;
        }

        private OffsetDateTime thruDate;

        public OffsetDateTime getThruDate()
        {
            return this.thruDate;
        }

        public void setThruDate(OffsetDateTime thruDate)
        {
            this.thruDate = thruDate;
        }

        protected AbstractPartyContactMechPurposeStateEvent(PartyContactMechPurposeEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractPartyContactMechPurposeStateCreated extends AbstractPartyContactMechPurposeStateEvent implements PartyContactMechPurposeEvent.PartyContactMechPurposeStateCreated
    {
        public AbstractPartyContactMechPurposeStateCreated() {
            this(new PartyContactMechPurposeEventId());
        }

        public AbstractPartyContactMechPurposeStateCreated(PartyContactMechPurposeEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractPartyContactMechPurposeStateMergePatched extends AbstractPartyContactMechPurposeStateEvent implements PartyContactMechPurposeEvent.PartyContactMechPurposeStateMergePatched
    {
        public AbstractPartyContactMechPurposeStateMergePatched() {
            this(new PartyContactMechPurposeEventId());
        }

        public AbstractPartyContactMechPurposeStateMergePatched(PartyContactMechPurposeEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyThruDateRemoved;

        public Boolean getIsPropertyThruDateRemoved() {
            return this.isPropertyThruDateRemoved;
        }

        public void setIsPropertyThruDateRemoved(Boolean removed) {
            this.isPropertyThruDateRemoved = removed;
        }


    }



    public static class SimplePartyContactMechPurposeStateCreated extends AbstractPartyContactMechPurposeStateCreated
    {
        public SimplePartyContactMechPurposeStateCreated() {
        }

        public SimplePartyContactMechPurposeStateCreated(PartyContactMechPurposeEventId eventId) {
            super(eventId);
        }
    }

    public static class SimplePartyContactMechPurposeStateMergePatched extends AbstractPartyContactMechPurposeStateMergePatched
    {
        public SimplePartyContactMechPurposeStateMergePatched() {
        }

        public SimplePartyContactMechPurposeStateMergePatched(PartyContactMechPurposeEventId eventId) {
            super(eventId);
        }
    }

}

