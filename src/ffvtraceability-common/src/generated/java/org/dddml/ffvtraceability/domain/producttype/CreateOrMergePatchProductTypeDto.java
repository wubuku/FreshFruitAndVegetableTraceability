// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.producttype;

import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchProductTypeDto extends AbstractProductTypeCommandDto implements ProductTypeCommand.CreateOrMergePatchProductType {

    /**
     * Parent Type Id
     */
    private String parentTypeId;

    public String getParentTypeId()
    {
        return this.parentTypeId;
    }

    public void setParentTypeId(String parentTypeId)
    {
        this.parentTypeId = parentTypeId;
    }

    /**
     * Is Physical
     */
    private String isPhysical;

    public String getIsPhysical()
    {
        return this.isPhysical;
    }

    public void setIsPhysical(String isPhysical)
    {
        this.isPhysical = isPhysical;
    }

    /**
     * Is Digital
     */
    private String isDigital;

    public String getIsDigital()
    {
        return this.isDigital;
    }

    public void setIsDigital(String isDigital)
    {
        this.isDigital = isDigital;
    }

    /**
     * Has Table
     */
    private String hasTable;

    public String getHasTable()
    {
        return this.hasTable;
    }

    public void setHasTable(String hasTable)
    {
        this.hasTable = hasTable;
    }

    /**
     * Description
     */
    private String description;

    public String getDescription()
    {
        return this.description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    /**
     * Active
     */
    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }


    private Boolean isPropertyParentTypeIdRemoved;

    public Boolean getIsPropertyParentTypeIdRemoved()
    {
        return this.isPropertyParentTypeIdRemoved;
    }

    public void setIsPropertyParentTypeIdRemoved(Boolean removed)
    {
        this.isPropertyParentTypeIdRemoved = removed;
    }

    private Boolean isPropertyIsPhysicalRemoved;

    public Boolean getIsPropertyIsPhysicalRemoved()
    {
        return this.isPropertyIsPhysicalRemoved;
    }

    public void setIsPropertyIsPhysicalRemoved(Boolean removed)
    {
        this.isPropertyIsPhysicalRemoved = removed;
    }

    private Boolean isPropertyIsDigitalRemoved;

    public Boolean getIsPropertyIsDigitalRemoved()
    {
        return this.isPropertyIsDigitalRemoved;
    }

    public void setIsPropertyIsDigitalRemoved(Boolean removed)
    {
        this.isPropertyIsDigitalRemoved = removed;
    }

    private Boolean isPropertyHasTableRemoved;

    public Boolean getIsPropertyHasTableRemoved()
    {
        return this.isPropertyHasTableRemoved;
    }

    public void setIsPropertyHasTableRemoved(Boolean removed)
    {
        this.isPropertyHasTableRemoved = removed;
    }

    private Boolean isPropertyDescriptionRemoved;

    public Boolean getIsPropertyDescriptionRemoved()
    {
        return this.isPropertyDescriptionRemoved;
    }

    public void setIsPropertyDescriptionRemoved(Boolean removed)
    {
        this.isPropertyDescriptionRemoved = removed;
    }

    private Boolean isPropertyActiveRemoved;

    public Boolean getIsPropertyActiveRemoved()
    {
        return this.isPropertyActiveRemoved;
    }

    public void setIsPropertyActiveRemoved(Boolean removed)
    {
        this.isPropertyActiveRemoved = removed;
    }

    public ProductTypeCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            return toCreateProductType();
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            return toMergePatchProductType();
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public ProductTypeCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            return toCreateProductType();
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            return toMergePatchProductType();
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    protected ProductTypeCommand.CreateProductType toCreateProductType() {
        return new ProductTypeCommand.CreateProductType() {
            @Override
            public String getProductTypeId() {
                return CreateOrMergePatchProductTypeDto.this.getProductTypeId();
            }

            @Override
            public void setProductTypeId(String p) {
                CreateOrMergePatchProductTypeDto.this.setProductTypeId(p);
            }

            @Override
            public Long getVersion() {
                return CreateOrMergePatchProductTypeDto.this.getVersion();
            }

            @Override
            public void setVersion(Long p) {
                CreateOrMergePatchProductTypeDto.this.setVersion(p);
            }

            @Override
            public String getCommandType() {
                return CreateOrMergePatchProductTypeDto.this.getCommandType();
            }

            @Override
            public void setCommandType(String commandType) {
                 CreateOrMergePatchProductTypeDto.this.setCommandType(commandType);
            }

            @Override
            public String getCommandId() {
                return CreateOrMergePatchProductTypeDto.this.getCommandId();
            }

            @Override
            public void setCommandId(String commandId) {
                CreateOrMergePatchProductTypeDto.this.setCommandId(commandId);
            }

            @Override
            public String getRequesterId() {
                return CreateOrMergePatchProductTypeDto.this.getRequesterId();
            }

            @Override
            public void setRequesterId(String requesterId) {
                CreateOrMergePatchProductTypeDto.this.setRequesterId(requesterId);
            }

            @Override
            public java.util.Map<String, Object> getCommandContext() {
                return CreateOrMergePatchProductTypeDto.this.getCommandContext();
            }

            @Override
            public String getParentTypeId() {
                return CreateOrMergePatchProductTypeDto.this.getParentTypeId();
            }

            @Override
            public void setParentTypeId(String p) {
                CreateOrMergePatchProductTypeDto.this.setParentTypeId(p);
            }

            @Override
            public String getIsPhysical() {
                return CreateOrMergePatchProductTypeDto.this.getIsPhysical();
            }

            @Override
            public void setIsPhysical(String p) {
                CreateOrMergePatchProductTypeDto.this.setIsPhysical(p);
            }

            @Override
            public String getIsDigital() {
                return CreateOrMergePatchProductTypeDto.this.getIsDigital();
            }

            @Override
            public void setIsDigital(String p) {
                CreateOrMergePatchProductTypeDto.this.setIsDigital(p);
            }

            @Override
            public String getHasTable() {
                return CreateOrMergePatchProductTypeDto.this.getHasTable();
            }

            @Override
            public void setHasTable(String p) {
                CreateOrMergePatchProductTypeDto.this.setHasTable(p);
            }

            @Override
            public String getDescription() {
                return CreateOrMergePatchProductTypeDto.this.getDescription();
            }

            @Override
            public void setDescription(String p) {
                CreateOrMergePatchProductTypeDto.this.setDescription(p);
            }

            @Override
            public Boolean getActive() {
                return CreateOrMergePatchProductTypeDto.this.getActive();
            }

            @Override
            public void setActive(Boolean p) {
                CreateOrMergePatchProductTypeDto.this.setActive(p);
            }


        };
    }

    protected ProductTypeCommand.MergePatchProductType toMergePatchProductType() {
        return new ProductTypeCommand.MergePatchProductType() {
            @Override
            public String getProductTypeId() {
                return CreateOrMergePatchProductTypeDto.this.getProductTypeId();
            }

            @Override
            public void setProductTypeId(String p) {
                CreateOrMergePatchProductTypeDto.this.setProductTypeId(p);
            }

            @Override
            public Long getVersion() {
                return CreateOrMergePatchProductTypeDto.this.getVersion();
            }

            @Override
            public void setVersion(Long p) {
                CreateOrMergePatchProductTypeDto.this.setVersion(p);
            }

            @Override
            public String getCommandType() {
                return CreateOrMergePatchProductTypeDto.this.getCommandType();
            }

            @Override
            public void setCommandType(String commandType) {
                 CreateOrMergePatchProductTypeDto.this.setCommandType(commandType);
            }

            @Override
            public String getCommandId() {
                return CreateOrMergePatchProductTypeDto.this.getCommandId();
            }

            @Override
            public void setCommandId(String commandId) {
                CreateOrMergePatchProductTypeDto.this.setCommandId(commandId);
            }

            @Override
            public String getRequesterId() {
                return CreateOrMergePatchProductTypeDto.this.getRequesterId();
            }

            @Override
            public void setRequesterId(String requesterId) {
                CreateOrMergePatchProductTypeDto.this.setRequesterId(requesterId);
            }

            @Override
            public java.util.Map<String, Object> getCommandContext() {
                return CreateOrMergePatchProductTypeDto.this.getCommandContext();
            }

            @Override
            public String getParentTypeId() {
                return CreateOrMergePatchProductTypeDto.this.getParentTypeId();
            }

            @Override
            public void setParentTypeId(String p) {
                CreateOrMergePatchProductTypeDto.this.setParentTypeId(p);
            }

            @Override
            public String getIsPhysical() {
                return CreateOrMergePatchProductTypeDto.this.getIsPhysical();
            }

            @Override
            public void setIsPhysical(String p) {
                CreateOrMergePatchProductTypeDto.this.setIsPhysical(p);
            }

            @Override
            public String getIsDigital() {
                return CreateOrMergePatchProductTypeDto.this.getIsDigital();
            }

            @Override
            public void setIsDigital(String p) {
                CreateOrMergePatchProductTypeDto.this.setIsDigital(p);
            }

            @Override
            public String getHasTable() {
                return CreateOrMergePatchProductTypeDto.this.getHasTable();
            }

            @Override
            public void setHasTable(String p) {
                CreateOrMergePatchProductTypeDto.this.setHasTable(p);
            }

            @Override
            public String getDescription() {
                return CreateOrMergePatchProductTypeDto.this.getDescription();
            }

            @Override
            public void setDescription(String p) {
                CreateOrMergePatchProductTypeDto.this.setDescription(p);
            }

            @Override
            public Boolean getActive() {
                return CreateOrMergePatchProductTypeDto.this.getActive();
            }

            @Override
            public void setActive(Boolean p) {
                CreateOrMergePatchProductTypeDto.this.setActive(p);
            }

            @Override
            public Boolean getIsPropertyParentTypeIdRemoved() {
                return CreateOrMergePatchProductTypeDto.this.getIsPropertyParentTypeIdRemoved();
            }

            @Override
            public void setIsPropertyParentTypeIdRemoved(Boolean removed) {
                CreateOrMergePatchProductTypeDto.this.setIsPropertyParentTypeIdRemoved(removed);
            }

            @Override
            public Boolean getIsPropertyIsPhysicalRemoved() {
                return CreateOrMergePatchProductTypeDto.this.getIsPropertyIsPhysicalRemoved();
            }

            @Override
            public void setIsPropertyIsPhysicalRemoved(Boolean removed) {
                CreateOrMergePatchProductTypeDto.this.setIsPropertyIsPhysicalRemoved(removed);
            }

            @Override
            public Boolean getIsPropertyIsDigitalRemoved() {
                return CreateOrMergePatchProductTypeDto.this.getIsPropertyIsDigitalRemoved();
            }

            @Override
            public void setIsPropertyIsDigitalRemoved(Boolean removed) {
                CreateOrMergePatchProductTypeDto.this.setIsPropertyIsDigitalRemoved(removed);
            }

            @Override
            public Boolean getIsPropertyHasTableRemoved() {
                return CreateOrMergePatchProductTypeDto.this.getIsPropertyHasTableRemoved();
            }

            @Override
            public void setIsPropertyHasTableRemoved(Boolean removed) {
                CreateOrMergePatchProductTypeDto.this.setIsPropertyHasTableRemoved(removed);
            }

            @Override
            public Boolean getIsPropertyDescriptionRemoved() {
                return CreateOrMergePatchProductTypeDto.this.getIsPropertyDescriptionRemoved();
            }

            @Override
            public void setIsPropertyDescriptionRemoved(Boolean removed) {
                CreateOrMergePatchProductTypeDto.this.setIsPropertyDescriptionRemoved(removed);
            }

            @Override
            public Boolean getIsPropertyActiveRemoved() {
                return CreateOrMergePatchProductTypeDto.this.getIsPropertyActiveRemoved();
            }

            @Override
            public void setIsPropertyActiveRemoved(Boolean removed) {
                CreateOrMergePatchProductTypeDto.this.setIsPropertyActiveRemoved(removed);
            }


        };
    }

    public static class CreateProductTypeDto extends CreateOrMergePatchProductTypeDto implements ProductTypeCommand.CreateProductType
    {
        public CreateProductTypeDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public ProductTypeCommand.CreateProductType toCreateProductType()
        {
            return super.toCreateProductType();
        }

    }

    public static class MergePatchProductTypeDto extends CreateOrMergePatchProductTypeDto implements ProductTypeCommand.MergePatchProductType
    {
        public MergePatchProductTypeDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public ProductTypeCommand.MergePatchProductType toMergePatchProductType()
        {
            return super.toMergePatchProductType();
        }

    }

}

