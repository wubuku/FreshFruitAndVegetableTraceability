// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.facilitycontactmech;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.AbstractCommand;

public abstract class AbstractFacilityContactMechCommand extends AbstractCommand implements FacilityContactMechCommand {

    private FacilityContactMechId facilityContactMechId;

    public FacilityContactMechId getFacilityContactMechId()
    {
        return this.facilityContactMechId;
    }

    public void setFacilityContactMechId(FacilityContactMechId facilityContactMechId)
    {
        this.facilityContactMechId = facilityContactMechId;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }


    public static abstract class AbstractCreateOrMergePatchFacilityContactMech extends AbstractFacilityContactMechCommand implements CreateOrMergePatchFacilityContactMech
    {
        private OffsetDateTime thruDate;

        public OffsetDateTime getThruDate()
        {
            return this.thruDate;
        }

        public void setThruDate(OffsetDateTime thruDate)
        {
            this.thruDate = thruDate;
        }

        private String extension;

        public String getExtension()
        {
            return this.extension;
        }

        public void setExtension(String extension)
        {
            this.extension = extension;
        }

        private String comments;

        public String getComments()
        {
            return this.comments;
        }

        public void setComments(String comments)
        {
            this.comments = comments;
        }

        public FacilityContactMechPurposeCommand.CreateFacilityContactMechPurpose newCreateFacilityContactMechPurpose()
        {
            AbstractFacilityContactMechPurposeCommand.SimpleCreateFacilityContactMechPurpose c = new AbstractFacilityContactMechPurposeCommand.SimpleCreateFacilityContactMechPurpose();
            c.setFacilityContactMechId(this.getFacilityContactMechId());

            return c;
        }

        public FacilityContactMechPurposeCommand.MergePatchFacilityContactMechPurpose newMergePatchFacilityContactMechPurpose()
        {
            AbstractFacilityContactMechPurposeCommand.SimpleMergePatchFacilityContactMechPurpose c = new AbstractFacilityContactMechPurposeCommand.SimpleMergePatchFacilityContactMechPurpose();
            c.setFacilityContactMechId(this.getFacilityContactMechId());

            return c;
        }

        public FacilityContactMechPurposeCommand.RemoveFacilityContactMechPurpose newRemoveFacilityContactMechPurpose()
        {
            AbstractFacilityContactMechPurposeCommand.SimpleRemoveFacilityContactMechPurpose c = new AbstractFacilityContactMechPurposeCommand.SimpleRemoveFacilityContactMechPurpose();
            c.setFacilityContactMechId(this.getFacilityContactMechId());

            return c;
        }

    }

    public static abstract class AbstractCreateFacilityContactMech extends AbstractCreateOrMergePatchFacilityContactMech implements CreateFacilityContactMech
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }

        private CreateFacilityContactMechPurposeCommandCollection createFacilityContactMechPurposeCommands = new SimpleCreateFacilityContactMechPurposeCommandCollection();

        public CreateFacilityContactMechPurposeCommandCollection getCreateFacilityContactMechPurposeCommands() {
            return this.createFacilityContactMechPurposeCommands;
        }

        public CreateFacilityContactMechPurposeCommandCollection getFacilityContactMechPurposes() {
            return this.createFacilityContactMechPurposeCommands; //facilityContactMechPurposes;
        }

    }

    public static abstract class AbstractMergePatchFacilityContactMech extends AbstractCreateOrMergePatchFacilityContactMech implements MergePatchFacilityContactMech
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }

        private Boolean isPropertyThruDateRemoved;

        public Boolean getIsPropertyThruDateRemoved()
        {
            return this.isPropertyThruDateRemoved;
        }

        public void setIsPropertyThruDateRemoved(Boolean removed)
        {
            this.isPropertyThruDateRemoved = removed;
        }

        private Boolean isPropertyExtensionRemoved;

        public Boolean getIsPropertyExtensionRemoved()
        {
            return this.isPropertyExtensionRemoved;
        }

        public void setIsPropertyExtensionRemoved(Boolean removed)
        {
            this.isPropertyExtensionRemoved = removed;
        }

        private Boolean isPropertyCommentsRemoved;

        public Boolean getIsPropertyCommentsRemoved()
        {
            return this.isPropertyCommentsRemoved;
        }

        public void setIsPropertyCommentsRemoved(Boolean removed)
        {
            this.isPropertyCommentsRemoved = removed;
        }


        private FacilityContactMechPurposeCommandCollection facilityContactMechPurposeCommands = new SimpleFacilityContactMechPurposeCommandCollection();

        public FacilityContactMechPurposeCommandCollection getFacilityContactMechPurposeCommands()
        {
            return this.facilityContactMechPurposeCommands;
        }

    }

    public static class SimpleCreateFacilityContactMech extends AbstractCreateFacilityContactMech
    {
    }

    
    public static class SimpleMergePatchFacilityContactMech extends AbstractMergePatchFacilityContactMech
    {
    }

    
    public static class SimpleDeleteFacilityContactMech extends AbstractFacilityContactMechCommand implements DeleteFacilityContactMech
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_DELETE;
        }
    }

    
    public static class SimpleCreateFacilityContactMechPurposeCommandCollection implements CreateFacilityContactMechPurposeCommandCollection {
        private List<FacilityContactMechPurposeCommand.CreateFacilityContactMechPurpose> innerCommands = new ArrayList<FacilityContactMechPurposeCommand.CreateFacilityContactMechPurpose>();

        public void add(FacilityContactMechPurposeCommand.CreateFacilityContactMechPurpose c) {
            innerCommands.add(c);
        }

        public void remove(FacilityContactMechPurposeCommand.CreateFacilityContactMechPurpose c) {
            innerCommands.remove(c);
        }

        public void clear() {
            innerCommands.clear();
        }

        @Override
        public Iterator<FacilityContactMechPurposeCommand.CreateFacilityContactMechPurpose> iterator() {
            return innerCommands.iterator();
        }
    }

    public static class SimpleFacilityContactMechPurposeCommandCollection implements FacilityContactMechPurposeCommandCollection {
        private List<FacilityContactMechPurposeCommand> innerCommands = new ArrayList<FacilityContactMechPurposeCommand>();

        public void add(FacilityContactMechPurposeCommand c) {
            innerCommands.add(c);
        }

        public void remove(FacilityContactMechPurposeCommand c) {
            innerCommands.remove(c);
        }

        public void clear() {
            innerCommands.clear();
        }

        @Override
        public Iterator<FacilityContactMechPurposeCommand> iterator() {
            return innerCommands.iterator();
        }
    }


}

