// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.enumeration;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface EnumerationCommand extends Command {

    String getEnumId();

    void setEnumId(String enumId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(EnumerationState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((EnumerationCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (isCreationCommand((EnumerationCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(EnumerationCommand c) {
        if ((c instanceof EnumerationCommand.CreateEnumeration) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(EnumerationState.VERSION_NULL)))
            return true;
        if ((c instanceof EnumerationCommand.MergePatchEnumeration))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(EnumerationState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchEnumeration extends EnumerationCommand {
        String getEnumTypeId();

        void setEnumTypeId(String enumTypeId);

        String getEnumCode();

        void setEnumCode(String enumCode);

        String getSequenceId();

        void setSequenceId(String sequenceId);

        String getDescription();

        void setDescription(String description);

    }

    interface CreateEnumeration extends CreateOrMergePatchEnumeration {
    }

    interface MergePatchEnumeration extends CreateOrMergePatchEnumeration {
        Boolean getIsPropertyEnumTypeIdRemoved();

        void setIsPropertyEnumTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyEnumCodeRemoved();

        void setIsPropertyEnumCodeRemoved(Boolean removed);

        Boolean getIsPropertySequenceIdRemoved();

        void setIsPropertySequenceIdRemoved(Boolean removed);

        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);


    }

    interface DeleteEnumeration extends EnumerationCommand {
    }

}

