// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.physicalinventory;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.AbstractCommand;

public abstract class AbstractInventoryItemVarianceCommand extends AbstractCommand implements InventoryItemVarianceCommand {

    private String inventoryItemId;

    public String getInventoryItemId()
    {
        return this.inventoryItemId;
    }

    public void setInventoryItemId(String inventoryItemId)
    {
        this.inventoryItemId = inventoryItemId;
    }

    private String physicalInventoryId;

    public String getPhysicalInventoryId()
    {
        return this.physicalInventoryId;
    }

    public void setPhysicalInventoryId(String physicalInventoryId)
    {
        this.physicalInventoryId = physicalInventoryId;
    }


    public static abstract class AbstractCreateOrMergePatchInventoryItemVariance extends AbstractInventoryItemVarianceCommand implements CreateOrMergePatchInventoryItemVariance
    {
        private String varianceReasonId;

        public String getVarianceReasonId()
        {
            return this.varianceReasonId;
        }

        public void setVarianceReasonId(String varianceReasonId)
        {
            this.varianceReasonId = varianceReasonId;
        }

        private java.math.BigDecimal availableToPromiseVar;

        public java.math.BigDecimal getAvailableToPromiseVar()
        {
            return this.availableToPromiseVar;
        }

        public void setAvailableToPromiseVar(java.math.BigDecimal availableToPromiseVar)
        {
            this.availableToPromiseVar = availableToPromiseVar;
        }

        private java.math.BigDecimal quantityOnHandVar;

        public java.math.BigDecimal getQuantityOnHandVar()
        {
            return this.quantityOnHandVar;
        }

        public void setQuantityOnHandVar(java.math.BigDecimal quantityOnHandVar)
        {
            this.quantityOnHandVar = quantityOnHandVar;
        }

        private String comments;

        public String getComments()
        {
            return this.comments;
        }

        public void setComments(String comments)
        {
            this.comments = comments;
        }

    }

    public static abstract class AbstractCreateInventoryItemVariance extends AbstractCreateOrMergePatchInventoryItemVariance implements CreateInventoryItemVariance
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }

    }

    public static abstract class AbstractMergePatchInventoryItemVariance extends AbstractCreateOrMergePatchInventoryItemVariance implements MergePatchInventoryItemVariance
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }

        private Boolean isPropertyVarianceReasonIdRemoved;

        public Boolean getIsPropertyVarianceReasonIdRemoved()
        {
            return this.isPropertyVarianceReasonIdRemoved;
        }

        public void setIsPropertyVarianceReasonIdRemoved(Boolean removed)
        {
            this.isPropertyVarianceReasonIdRemoved = removed;
        }

        private Boolean isPropertyAvailableToPromiseVarRemoved;

        public Boolean getIsPropertyAvailableToPromiseVarRemoved()
        {
            return this.isPropertyAvailableToPromiseVarRemoved;
        }

        public void setIsPropertyAvailableToPromiseVarRemoved(Boolean removed)
        {
            this.isPropertyAvailableToPromiseVarRemoved = removed;
        }

        private Boolean isPropertyQuantityOnHandVarRemoved;

        public Boolean getIsPropertyQuantityOnHandVarRemoved()
        {
            return this.isPropertyQuantityOnHandVarRemoved;
        }

        public void setIsPropertyQuantityOnHandVarRemoved(Boolean removed)
        {
            this.isPropertyQuantityOnHandVarRemoved = removed;
        }

        private Boolean isPropertyCommentsRemoved;

        public Boolean getIsPropertyCommentsRemoved()
        {
            return this.isPropertyCommentsRemoved;
        }

        public void setIsPropertyCommentsRemoved(Boolean removed)
        {
            this.isPropertyCommentsRemoved = removed;
        }


    }

    public static class SimpleCreateInventoryItemVariance extends AbstractCreateInventoryItemVariance
    {
    }

    
    public static class SimpleMergePatchInventoryItemVariance extends AbstractMergePatchInventoryItemVariance
    {
    }

    
    public static class SimpleRemoveInventoryItemVariance extends AbstractInventoryItemVarianceCommand implements RemoveInventoryItemVariance
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_REMOVE;
        }
    }

    

}

