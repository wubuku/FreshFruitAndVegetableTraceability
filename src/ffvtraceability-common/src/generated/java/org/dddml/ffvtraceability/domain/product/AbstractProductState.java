// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.product;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.product.ProductEvent.*;

public abstract class AbstractProductState implements ProductState.SqlProductState, Saveable {

    private String productId;

    public String getProductId() {
        return this.productId;
    }

    public void setProductId(String productId) {
        this.productId = productId;
    }

    private String productTypeId;

    public String getProductTypeId() {
        return this.productTypeId;
    }

    public void setProductTypeId(String productTypeId) {
        this.productTypeId = productTypeId;
    }

    private String primaryProductCategoryId;

    public String getPrimaryProductCategoryId() {
        return this.primaryProductCategoryId;
    }

    public void setPrimaryProductCategoryId(String primaryProductCategoryId) {
        this.primaryProductCategoryId = primaryProductCategoryId;
    }

    private String manufacturerPartyId;

    public String getManufacturerPartyId() {
        return this.manufacturerPartyId;
    }

    public void setManufacturerPartyId(String manufacturerPartyId) {
        this.manufacturerPartyId = manufacturerPartyId;
    }

    private String facilityId;

    public String getFacilityId() {
        return this.facilityId;
    }

    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }

    private OffsetDateTime introductionDate;

    public OffsetDateTime getIntroductionDate() {
        return this.introductionDate;
    }

    public void setIntroductionDate(OffsetDateTime introductionDate) {
        this.introductionDate = introductionDate;
    }

    private OffsetDateTime releaseDate;

    public OffsetDateTime getReleaseDate() {
        return this.releaseDate;
    }

    public void setReleaseDate(OffsetDateTime releaseDate) {
        this.releaseDate = releaseDate;
    }

    private OffsetDateTime supportDiscontinuationDate;

    public OffsetDateTime getSupportDiscontinuationDate() {
        return this.supportDiscontinuationDate;
    }

    public void setSupportDiscontinuationDate(OffsetDateTime supportDiscontinuationDate) {
        this.supportDiscontinuationDate = supportDiscontinuationDate;
    }

    private OffsetDateTime salesDiscontinuationDate;

    public OffsetDateTime getSalesDiscontinuationDate() {
        return this.salesDiscontinuationDate;
    }

    public void setSalesDiscontinuationDate(OffsetDateTime salesDiscontinuationDate) {
        this.salesDiscontinuationDate = salesDiscontinuationDate;
    }

    private String salesDiscWhenNotAvail;

    public String getSalesDiscWhenNotAvail() {
        return this.salesDiscWhenNotAvail;
    }

    public void setSalesDiscWhenNotAvail(String salesDiscWhenNotAvail) {
        this.salesDiscWhenNotAvail = salesDiscWhenNotAvail;
    }

    private String internalName;

    public String getInternalName() {
        return this.internalName;
    }

    public void setInternalName(String internalName) {
        this.internalName = internalName;
    }

    private String brandName;

    public String getBrandName() {
        return this.brandName;
    }

    public void setBrandName(String brandName) {
        this.brandName = brandName;
    }

    private String comments;

    public String getComments() {
        return this.comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    private String productName;

    public String getProductName() {
        return this.productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    private String description;

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    private String longDescription;

    public String getLongDescription() {
        return this.longDescription;
    }

    public void setLongDescription(String longDescription) {
        this.longDescription = longDescription;
    }

    private String priceDetailText;

    public String getPriceDetailText() {
        return this.priceDetailText;
    }

    public void setPriceDetailText(String priceDetailText) {
        this.priceDetailText = priceDetailText;
    }

    private String smallImageUrl;

    public String getSmallImageUrl() {
        return this.smallImageUrl;
    }

    public void setSmallImageUrl(String smallImageUrl) {
        this.smallImageUrl = smallImageUrl;
    }

    private String mediumImageUrl;

    public String getMediumImageUrl() {
        return this.mediumImageUrl;
    }

    public void setMediumImageUrl(String mediumImageUrl) {
        this.mediumImageUrl = mediumImageUrl;
    }

    private String largeImageUrl;

    public String getLargeImageUrl() {
        return this.largeImageUrl;
    }

    public void setLargeImageUrl(String largeImageUrl) {
        this.largeImageUrl = largeImageUrl;
    }

    private String detailImageUrl;

    public String getDetailImageUrl() {
        return this.detailImageUrl;
    }

    public void setDetailImageUrl(String detailImageUrl) {
        this.detailImageUrl = detailImageUrl;
    }

    private String originalImageUrl;

    public String getOriginalImageUrl() {
        return this.originalImageUrl;
    }

    public void setOriginalImageUrl(String originalImageUrl) {
        this.originalImageUrl = originalImageUrl;
    }

    private String detailScreen;

    public String getDetailScreen() {
        return this.detailScreen;
    }

    public void setDetailScreen(String detailScreen) {
        this.detailScreen = detailScreen;
    }

    private String inventoryMessage;

    public String getInventoryMessage() {
        return this.inventoryMessage;
    }

    public void setInventoryMessage(String inventoryMessage) {
        this.inventoryMessage = inventoryMessage;
    }

    private String quantityUomId;

    public String getQuantityUomId() {
        return this.quantityUomId;
    }

    public void setQuantityUomId(String quantityUomId) {
        this.quantityUomId = quantityUomId;
    }

    private java.math.BigDecimal quantityIncluded;

    public java.math.BigDecimal getQuantityIncluded() {
        return this.quantityIncluded;
    }

    public void setQuantityIncluded(java.math.BigDecimal quantityIncluded) {
        this.quantityIncluded = quantityIncluded;
    }

    private Long piecesIncluded;

    public Long getPiecesIncluded() {
        return this.piecesIncluded;
    }

    public void setPiecesIncluded(Long piecesIncluded) {
        this.piecesIncluded = piecesIncluded;
    }

    private String requireAmount;

    public String getRequireAmount() {
        return this.requireAmount;
    }

    public void setRequireAmount(String requireAmount) {
        this.requireAmount = requireAmount;
    }

    private java.math.BigDecimal fixedAmount;

    public java.math.BigDecimal getFixedAmount() {
        return this.fixedAmount;
    }

    public void setFixedAmount(java.math.BigDecimal fixedAmount) {
        this.fixedAmount = fixedAmount;
    }

    private String amountUomTypeId;

    public String getAmountUomTypeId() {
        return this.amountUomTypeId;
    }

    public void setAmountUomTypeId(String amountUomTypeId) {
        this.amountUomTypeId = amountUomTypeId;
    }

    private String weightUomId;

    public String getWeightUomId() {
        return this.weightUomId;
    }

    public void setWeightUomId(String weightUomId) {
        this.weightUomId = weightUomId;
    }

    private java.math.BigDecimal shippingWeight;

    public java.math.BigDecimal getShippingWeight() {
        return this.shippingWeight;
    }

    public void setShippingWeight(java.math.BigDecimal shippingWeight) {
        this.shippingWeight = shippingWeight;
    }

    private java.math.BigDecimal productWeight;

    public java.math.BigDecimal getProductWeight() {
        return this.productWeight;
    }

    public void setProductWeight(java.math.BigDecimal productWeight) {
        this.productWeight = productWeight;
    }

    private String heightUomId;

    public String getHeightUomId() {
        return this.heightUomId;
    }

    public void setHeightUomId(String heightUomId) {
        this.heightUomId = heightUomId;
    }

    private java.math.BigDecimal productHeight;

    public java.math.BigDecimal getProductHeight() {
        return this.productHeight;
    }

    public void setProductHeight(java.math.BigDecimal productHeight) {
        this.productHeight = productHeight;
    }

    private java.math.BigDecimal shippingHeight;

    public java.math.BigDecimal getShippingHeight() {
        return this.shippingHeight;
    }

    public void setShippingHeight(java.math.BigDecimal shippingHeight) {
        this.shippingHeight = shippingHeight;
    }

    private String widthUomId;

    public String getWidthUomId() {
        return this.widthUomId;
    }

    public void setWidthUomId(String widthUomId) {
        this.widthUomId = widthUomId;
    }

    private java.math.BigDecimal productWidth;

    public java.math.BigDecimal getProductWidth() {
        return this.productWidth;
    }

    public void setProductWidth(java.math.BigDecimal productWidth) {
        this.productWidth = productWidth;
    }

    private java.math.BigDecimal shippingWidth;

    public java.math.BigDecimal getShippingWidth() {
        return this.shippingWidth;
    }

    public void setShippingWidth(java.math.BigDecimal shippingWidth) {
        this.shippingWidth = shippingWidth;
    }

    private String depthUomId;

    public String getDepthUomId() {
        return this.depthUomId;
    }

    public void setDepthUomId(String depthUomId) {
        this.depthUomId = depthUomId;
    }

    private java.math.BigDecimal productDepth;

    public java.math.BigDecimal getProductDepth() {
        return this.productDepth;
    }

    public void setProductDepth(java.math.BigDecimal productDepth) {
        this.productDepth = productDepth;
    }

    private java.math.BigDecimal shippingDepth;

    public java.math.BigDecimal getShippingDepth() {
        return this.shippingDepth;
    }

    public void setShippingDepth(java.math.BigDecimal shippingDepth) {
        this.shippingDepth = shippingDepth;
    }

    private String diameterUomId;

    public String getDiameterUomId() {
        return this.diameterUomId;
    }

    public void setDiameterUomId(String diameterUomId) {
        this.diameterUomId = diameterUomId;
    }

    private java.math.BigDecimal productDiameter;

    public java.math.BigDecimal getProductDiameter() {
        return this.productDiameter;
    }

    public void setProductDiameter(java.math.BigDecimal productDiameter) {
        this.productDiameter = productDiameter;
    }

    private java.math.BigDecimal productRating;

    public java.math.BigDecimal getProductRating() {
        return this.productRating;
    }

    public void setProductRating(java.math.BigDecimal productRating) {
        this.productRating = productRating;
    }

    private String ratingTypeEnum;

    public String getRatingTypeEnum() {
        return this.ratingTypeEnum;
    }

    public void setRatingTypeEnum(String ratingTypeEnum) {
        this.ratingTypeEnum = ratingTypeEnum;
    }

    private String returnable;

    public String getReturnable() {
        return this.returnable;
    }

    public void setReturnable(String returnable) {
        this.returnable = returnable;
    }

    private String taxable;

    public String getTaxable() {
        return this.taxable;
    }

    public void setTaxable(String taxable) {
        this.taxable = taxable;
    }

    private String chargeShipping;

    public String getChargeShipping() {
        return this.chargeShipping;
    }

    public void setChargeShipping(String chargeShipping) {
        this.chargeShipping = chargeShipping;
    }

    private String autoCreateKeywords;

    public String getAutoCreateKeywords() {
        return this.autoCreateKeywords;
    }

    public void setAutoCreateKeywords(String autoCreateKeywords) {
        this.autoCreateKeywords = autoCreateKeywords;
    }

    private String includeInPromotions;

    public String getIncludeInPromotions() {
        return this.includeInPromotions;
    }

    public void setIncludeInPromotions(String includeInPromotions) {
        this.includeInPromotions = includeInPromotions;
    }

    private String isVirtual;

    public String getIsVirtual() {
        return this.isVirtual;
    }

    public void setIsVirtual(String isVirtual) {
        this.isVirtual = isVirtual;
    }

    private String isVariant;

    public String getIsVariant() {
        return this.isVariant;
    }

    public void setIsVariant(String isVariant) {
        this.isVariant = isVariant;
    }

    private String virtualVariantMethodEnum;

    public String getVirtualVariantMethodEnum() {
        return this.virtualVariantMethodEnum;
    }

    public void setVirtualVariantMethodEnum(String virtualVariantMethodEnum) {
        this.virtualVariantMethodEnum = virtualVariantMethodEnum;
    }

    private String originGeoId;

    public String getOriginGeoId() {
        return this.originGeoId;
    }

    public void setOriginGeoId(String originGeoId) {
        this.originGeoId = originGeoId;
    }

    private String requirementMethodEnumId;

    public String getRequirementMethodEnumId() {
        return this.requirementMethodEnumId;
    }

    public void setRequirementMethodEnumId(String requirementMethodEnumId) {
        this.requirementMethodEnumId = requirementMethodEnumId;
    }

    private Long billOfMaterialLevel;

    public Long getBillOfMaterialLevel() {
        return this.billOfMaterialLevel;
    }

    public void setBillOfMaterialLevel(Long billOfMaterialLevel) {
        this.billOfMaterialLevel = billOfMaterialLevel;
    }

    private String inShippingBox;

    public String getInShippingBox() {
        return this.inShippingBox;
    }

    public void setInShippingBox(String inShippingBox) {
        this.inShippingBox = inShippingBox;
    }

    private String defaultShipmentBoxTypeId;

    public String getDefaultShipmentBoxTypeId() {
        return this.defaultShipmentBoxTypeId;
    }

    public void setDefaultShipmentBoxTypeId(String defaultShipmentBoxTypeId) {
        this.defaultShipmentBoxTypeId = defaultShipmentBoxTypeId;
    }

    private String lotIdFilledIn;

    public String getLotIdFilledIn() {
        return this.lotIdFilledIn;
    }

    public void setLotIdFilledIn(String lotIdFilledIn) {
        this.lotIdFilledIn = lotIdFilledIn;
    }

    private String orderDecimalQuantity;

    public String getOrderDecimalQuantity() {
        return this.orderDecimalQuantity;
    }

    public void setOrderDecimalQuantity(String orderDecimalQuantity) {
        this.orderDecimalQuantity = orderDecimalQuantity;
    }

    private Long version;

    public Long getVersion() {
        return this.version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public boolean isStateUnsaved() {
        return this.getVersion() == null;
    }

    private Set<GoodIdentificationState> protectedGoodIdentifications = new HashSet<>();

    protected Set<GoodIdentificationState> getProtectedGoodIdentifications() {
        return this.protectedGoodIdentifications;
    }

    protected void setProtectedGoodIdentifications(Set<GoodIdentificationState> protectedGoodIdentifications) {
        this.protectedGoodIdentifications = protectedGoodIdentifications;
    }

    private EntityStateCollection<String, GoodIdentificationState> goodIdentifications;

    public EntityStateCollection<String, GoodIdentificationState> getGoodIdentifications() {
        return this.goodIdentifications;
    }

    public void setGoodIdentifications(EntityStateCollection<String, GoodIdentificationState> goodIdentifications) {
        this.goodIdentifications = goodIdentifications;
    }

    private Boolean stateReadOnly;

    public Boolean getStateReadOnly() { return this.stateReadOnly; }

    public void setStateReadOnly(Boolean readOnly) { this.stateReadOnly = readOnly; }

    private boolean forReapplying;

    public boolean getForReapplying() {
        return forReapplying;
    }

    public void setForReapplying(boolean forReapplying) {
        this.forReapplying = forReapplying;
    }

    public AbstractProductState(List<Event> events) {
        initializeForReapplying();
        if (events != null && events.size() > 0) {
            this.setProductId(((ProductEvent.SqlProductEvent) events.get(0)).getProductEventId().getProductId());
            for (Event e : events) {
                mutate(e);
                this.setVersion((this.getVersion() == null ? ProductState.VERSION_NULL : this.getVersion()) + 1);
            }
        }
    }


    public AbstractProductState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        this.forReapplying = true;

        initializeProperties();
    }
    
    protected void initializeProperties() {
        goodIdentifications = new SimpleGoodIdentificationStateCollection();
    }

    @Override
    public int hashCode() {
        return getProductId().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) { return true; }
        if (obj instanceof ProductState) {
            return Objects.equals(this.getProductId(), ((ProductState)obj).getProductId());
        }
        return false;
    }


    public void mutate(Event e) {
        setStateReadOnly(false);
        if (e instanceof ProductStateCreated) {
            when((ProductStateCreated) e);
        } else if (e instanceof ProductStateMergePatched) {
            when((ProductStateMergePatched) e);
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void when(ProductStateCreated e) {
        throwOnWrongEvent(e);

        this.setProductTypeId(e.getProductTypeId());
        this.setPrimaryProductCategoryId(e.getPrimaryProductCategoryId());
        this.setManufacturerPartyId(e.getManufacturerPartyId());
        this.setFacilityId(e.getFacilityId());
        this.setIntroductionDate(e.getIntroductionDate());
        this.setReleaseDate(e.getReleaseDate());
        this.setSupportDiscontinuationDate(e.getSupportDiscontinuationDate());
        this.setSalesDiscontinuationDate(e.getSalesDiscontinuationDate());
        this.setSalesDiscWhenNotAvail(e.getSalesDiscWhenNotAvail());
        this.setInternalName(e.getInternalName());
        this.setBrandName(e.getBrandName());
        this.setComments(e.getComments());
        this.setProductName(e.getProductName());
        this.setDescription(e.getDescription());
        this.setLongDescription(e.getLongDescription());
        this.setPriceDetailText(e.getPriceDetailText());
        this.setSmallImageUrl(e.getSmallImageUrl());
        this.setMediumImageUrl(e.getMediumImageUrl());
        this.setLargeImageUrl(e.getLargeImageUrl());
        this.setDetailImageUrl(e.getDetailImageUrl());
        this.setOriginalImageUrl(e.getOriginalImageUrl());
        this.setDetailScreen(e.getDetailScreen());
        this.setInventoryMessage(e.getInventoryMessage());
        this.setQuantityUomId(e.getQuantityUomId());
        this.setQuantityIncluded(e.getQuantityIncluded());
        this.setPiecesIncluded(e.getPiecesIncluded());
        this.setRequireAmount(e.getRequireAmount());
        this.setFixedAmount(e.getFixedAmount());
        this.setAmountUomTypeId(e.getAmountUomTypeId());
        this.setWeightUomId(e.getWeightUomId());
        this.setShippingWeight(e.getShippingWeight());
        this.setProductWeight(e.getProductWeight());
        this.setHeightUomId(e.getHeightUomId());
        this.setProductHeight(e.getProductHeight());
        this.setShippingHeight(e.getShippingHeight());
        this.setWidthUomId(e.getWidthUomId());
        this.setProductWidth(e.getProductWidth());
        this.setShippingWidth(e.getShippingWidth());
        this.setDepthUomId(e.getDepthUomId());
        this.setProductDepth(e.getProductDepth());
        this.setShippingDepth(e.getShippingDepth());
        this.setDiameterUomId(e.getDiameterUomId());
        this.setProductDiameter(e.getProductDiameter());
        this.setProductRating(e.getProductRating());
        this.setRatingTypeEnum(e.getRatingTypeEnum());
        this.setReturnable(e.getReturnable());
        this.setTaxable(e.getTaxable());
        this.setChargeShipping(e.getChargeShipping());
        this.setAutoCreateKeywords(e.getAutoCreateKeywords());
        this.setIncludeInPromotions(e.getIncludeInPromotions());
        this.setIsVirtual(e.getIsVirtual());
        this.setIsVariant(e.getIsVariant());
        this.setVirtualVariantMethodEnum(e.getVirtualVariantMethodEnum());
        this.setOriginGeoId(e.getOriginGeoId());
        this.setRequirementMethodEnumId(e.getRequirementMethodEnumId());
        this.setBillOfMaterialLevel(e.getBillOfMaterialLevel());
        this.setInShippingBox(e.getInShippingBox());
        this.setDefaultShipmentBoxTypeId(e.getDefaultShipmentBoxTypeId());
        this.setLotIdFilledIn(e.getLotIdFilledIn());
        this.setOrderDecimalQuantity(e.getOrderDecimalQuantity());

        this.setCreatedBy(e.getCreatedBy());
        this.setCreatedAt(e.getCreatedAt());

        for (GoodIdentificationEvent.GoodIdentificationStateCreated innerEvent : e.getGoodIdentificationEvents()) {
            GoodIdentificationState innerState = ((EntityStateCollection.ModifiableEntityStateCollection<String, GoodIdentificationState>)this.getGoodIdentifications()).getOrAddDefault(((GoodIdentificationEvent.SqlGoodIdentificationEvent)innerEvent).getGoodIdentificationEventId().getGoodIdentificationTypeId());
            ((GoodIdentificationState.SqlGoodIdentificationState)innerState).mutate(innerEvent);
        }
    }

    public void merge(ProductState s) {
        if (s == this) {
            return;
        }
        this.setProductTypeId(s.getProductTypeId());
        this.setPrimaryProductCategoryId(s.getPrimaryProductCategoryId());
        this.setManufacturerPartyId(s.getManufacturerPartyId());
        this.setFacilityId(s.getFacilityId());
        this.setIntroductionDate(s.getIntroductionDate());
        this.setReleaseDate(s.getReleaseDate());
        this.setSupportDiscontinuationDate(s.getSupportDiscontinuationDate());
        this.setSalesDiscontinuationDate(s.getSalesDiscontinuationDate());
        this.setSalesDiscWhenNotAvail(s.getSalesDiscWhenNotAvail());
        this.setInternalName(s.getInternalName());
        this.setBrandName(s.getBrandName());
        this.setComments(s.getComments());
        this.setProductName(s.getProductName());
        this.setDescription(s.getDescription());
        this.setLongDescription(s.getLongDescription());
        this.setPriceDetailText(s.getPriceDetailText());
        this.setSmallImageUrl(s.getSmallImageUrl());
        this.setMediumImageUrl(s.getMediumImageUrl());
        this.setLargeImageUrl(s.getLargeImageUrl());
        this.setDetailImageUrl(s.getDetailImageUrl());
        this.setOriginalImageUrl(s.getOriginalImageUrl());
        this.setDetailScreen(s.getDetailScreen());
        this.setInventoryMessage(s.getInventoryMessage());
        this.setQuantityUomId(s.getQuantityUomId());
        this.setQuantityIncluded(s.getQuantityIncluded());
        this.setPiecesIncluded(s.getPiecesIncluded());
        this.setRequireAmount(s.getRequireAmount());
        this.setFixedAmount(s.getFixedAmount());
        this.setAmountUomTypeId(s.getAmountUomTypeId());
        this.setWeightUomId(s.getWeightUomId());
        this.setShippingWeight(s.getShippingWeight());
        this.setProductWeight(s.getProductWeight());
        this.setHeightUomId(s.getHeightUomId());
        this.setProductHeight(s.getProductHeight());
        this.setShippingHeight(s.getShippingHeight());
        this.setWidthUomId(s.getWidthUomId());
        this.setProductWidth(s.getProductWidth());
        this.setShippingWidth(s.getShippingWidth());
        this.setDepthUomId(s.getDepthUomId());
        this.setProductDepth(s.getProductDepth());
        this.setShippingDepth(s.getShippingDepth());
        this.setDiameterUomId(s.getDiameterUomId());
        this.setProductDiameter(s.getProductDiameter());
        this.setProductRating(s.getProductRating());
        this.setRatingTypeEnum(s.getRatingTypeEnum());
        this.setReturnable(s.getReturnable());
        this.setTaxable(s.getTaxable());
        this.setChargeShipping(s.getChargeShipping());
        this.setAutoCreateKeywords(s.getAutoCreateKeywords());
        this.setIncludeInPromotions(s.getIncludeInPromotions());
        this.setIsVirtual(s.getIsVirtual());
        this.setIsVariant(s.getIsVariant());
        this.setVirtualVariantMethodEnum(s.getVirtualVariantMethodEnum());
        this.setOriginGeoId(s.getOriginGeoId());
        this.setRequirementMethodEnumId(s.getRequirementMethodEnumId());
        this.setBillOfMaterialLevel(s.getBillOfMaterialLevel());
        this.setInShippingBox(s.getInShippingBox());
        this.setDefaultShipmentBoxTypeId(s.getDefaultShipmentBoxTypeId());
        this.setLotIdFilledIn(s.getLotIdFilledIn());
        this.setOrderDecimalQuantity(s.getOrderDecimalQuantity());

        if (s.getGoodIdentifications() != null) {
            Iterable<GoodIdentificationState> iterable;
            if (s.getGoodIdentifications().isLazy()) {
                iterable = s.getGoodIdentifications().getLoadedStates();
            } else {
                iterable = s.getGoodIdentifications();
            }
            if (iterable != null) {
                for (GoodIdentificationState ss : iterable) {
                    GoodIdentificationState thisInnerState = ((EntityStateCollection.ModifiableEntityStateCollection<String, GoodIdentificationState>)this.getGoodIdentifications()).getOrAddDefault(ss.getGoodIdentificationTypeId());
                    ((AbstractGoodIdentificationState) thisInnerState).merge(ss);
                }
            }
        }
        if (s.getGoodIdentifications() != null) {
            if (s.getGoodIdentifications() instanceof EntityStateCollection.RemovalLoggedEntityStateCollection) {
                if (((EntityStateCollection.RemovalLoggedEntityStateCollection)s.getGoodIdentifications()).getRemovedStates() != null) {
                    for (GoodIdentificationState ss : ((EntityStateCollection.RemovalLoggedEntityStateCollection<String, GoodIdentificationState>)s.getGoodIdentifications()).getRemovedStates()) {
                        GoodIdentificationState thisInnerState = ((EntityStateCollection.ModifiableEntityStateCollection<String, GoodIdentificationState>)this.getGoodIdentifications()).getOrAddDefault(ss.getGoodIdentificationTypeId());
                        ((EntityStateCollection.ModifiableEntityStateCollection)this.getGoodIdentifications()).removeState(thisInnerState);
                    }
                }
            } else {
                if (s.getGoodIdentifications().isAllLoaded()) {
                    Set<String> removedStateIds = new HashSet<>(this.getGoodIdentifications().stream().map(i -> i.getGoodIdentificationTypeId()).collect(java.util.stream.Collectors.toList()));
                    s.getGoodIdentifications().forEach(i -> removedStateIds.remove(i.getGoodIdentificationTypeId()));
                    for (String i : removedStateIds) {
                        GoodIdentificationState thisInnerState = ((EntityStateCollection.ModifiableEntityStateCollection<String, GoodIdentificationState>)this.getGoodIdentifications()).getOrAddDefault(i);
                        ((EntityStateCollection.ModifiableEntityStateCollection)this.getGoodIdentifications()).removeState(thisInnerState);
                    }
                } else {
                    throw new UnsupportedOperationException();
                }
            }
        }
    }

    public void when(ProductStateMergePatched e) {
        throwOnWrongEvent(e);

        if (e.getProductTypeId() == null) {
            if (e.getIsPropertyProductTypeIdRemoved() != null && e.getIsPropertyProductTypeIdRemoved()) {
                this.setProductTypeId(null);
            }
        } else {
            this.setProductTypeId(e.getProductTypeId());
        }
        if (e.getPrimaryProductCategoryId() == null) {
            if (e.getIsPropertyPrimaryProductCategoryIdRemoved() != null && e.getIsPropertyPrimaryProductCategoryIdRemoved()) {
                this.setPrimaryProductCategoryId(null);
            }
        } else {
            this.setPrimaryProductCategoryId(e.getPrimaryProductCategoryId());
        }
        if (e.getManufacturerPartyId() == null) {
            if (e.getIsPropertyManufacturerPartyIdRemoved() != null && e.getIsPropertyManufacturerPartyIdRemoved()) {
                this.setManufacturerPartyId(null);
            }
        } else {
            this.setManufacturerPartyId(e.getManufacturerPartyId());
        }
        if (e.getFacilityId() == null) {
            if (e.getIsPropertyFacilityIdRemoved() != null && e.getIsPropertyFacilityIdRemoved()) {
                this.setFacilityId(null);
            }
        } else {
            this.setFacilityId(e.getFacilityId());
        }
        if (e.getIntroductionDate() == null) {
            if (e.getIsPropertyIntroductionDateRemoved() != null && e.getIsPropertyIntroductionDateRemoved()) {
                this.setIntroductionDate(null);
            }
        } else {
            this.setIntroductionDate(e.getIntroductionDate());
        }
        if (e.getReleaseDate() == null) {
            if (e.getIsPropertyReleaseDateRemoved() != null && e.getIsPropertyReleaseDateRemoved()) {
                this.setReleaseDate(null);
            }
        } else {
            this.setReleaseDate(e.getReleaseDate());
        }
        if (e.getSupportDiscontinuationDate() == null) {
            if (e.getIsPropertySupportDiscontinuationDateRemoved() != null && e.getIsPropertySupportDiscontinuationDateRemoved()) {
                this.setSupportDiscontinuationDate(null);
            }
        } else {
            this.setSupportDiscontinuationDate(e.getSupportDiscontinuationDate());
        }
        if (e.getSalesDiscontinuationDate() == null) {
            if (e.getIsPropertySalesDiscontinuationDateRemoved() != null && e.getIsPropertySalesDiscontinuationDateRemoved()) {
                this.setSalesDiscontinuationDate(null);
            }
        } else {
            this.setSalesDiscontinuationDate(e.getSalesDiscontinuationDate());
        }
        if (e.getSalesDiscWhenNotAvail() == null) {
            if (e.getIsPropertySalesDiscWhenNotAvailRemoved() != null && e.getIsPropertySalesDiscWhenNotAvailRemoved()) {
                this.setSalesDiscWhenNotAvail(null);
            }
        } else {
            this.setSalesDiscWhenNotAvail(e.getSalesDiscWhenNotAvail());
        }
        if (e.getInternalName() == null) {
            if (e.getIsPropertyInternalNameRemoved() != null && e.getIsPropertyInternalNameRemoved()) {
                this.setInternalName(null);
            }
        } else {
            this.setInternalName(e.getInternalName());
        }
        if (e.getBrandName() == null) {
            if (e.getIsPropertyBrandNameRemoved() != null && e.getIsPropertyBrandNameRemoved()) {
                this.setBrandName(null);
            }
        } else {
            this.setBrandName(e.getBrandName());
        }
        if (e.getComments() == null) {
            if (e.getIsPropertyCommentsRemoved() != null && e.getIsPropertyCommentsRemoved()) {
                this.setComments(null);
            }
        } else {
            this.setComments(e.getComments());
        }
        if (e.getProductName() == null) {
            if (e.getIsPropertyProductNameRemoved() != null && e.getIsPropertyProductNameRemoved()) {
                this.setProductName(null);
            }
        } else {
            this.setProductName(e.getProductName());
        }
        if (e.getDescription() == null) {
            if (e.getIsPropertyDescriptionRemoved() != null && e.getIsPropertyDescriptionRemoved()) {
                this.setDescription(null);
            }
        } else {
            this.setDescription(e.getDescription());
        }
        if (e.getLongDescription() == null) {
            if (e.getIsPropertyLongDescriptionRemoved() != null && e.getIsPropertyLongDescriptionRemoved()) {
                this.setLongDescription(null);
            }
        } else {
            this.setLongDescription(e.getLongDescription());
        }
        if (e.getPriceDetailText() == null) {
            if (e.getIsPropertyPriceDetailTextRemoved() != null && e.getIsPropertyPriceDetailTextRemoved()) {
                this.setPriceDetailText(null);
            }
        } else {
            this.setPriceDetailText(e.getPriceDetailText());
        }
        if (e.getSmallImageUrl() == null) {
            if (e.getIsPropertySmallImageUrlRemoved() != null && e.getIsPropertySmallImageUrlRemoved()) {
                this.setSmallImageUrl(null);
            }
        } else {
            this.setSmallImageUrl(e.getSmallImageUrl());
        }
        if (e.getMediumImageUrl() == null) {
            if (e.getIsPropertyMediumImageUrlRemoved() != null && e.getIsPropertyMediumImageUrlRemoved()) {
                this.setMediumImageUrl(null);
            }
        } else {
            this.setMediumImageUrl(e.getMediumImageUrl());
        }
        if (e.getLargeImageUrl() == null) {
            if (e.getIsPropertyLargeImageUrlRemoved() != null && e.getIsPropertyLargeImageUrlRemoved()) {
                this.setLargeImageUrl(null);
            }
        } else {
            this.setLargeImageUrl(e.getLargeImageUrl());
        }
        if (e.getDetailImageUrl() == null) {
            if (e.getIsPropertyDetailImageUrlRemoved() != null && e.getIsPropertyDetailImageUrlRemoved()) {
                this.setDetailImageUrl(null);
            }
        } else {
            this.setDetailImageUrl(e.getDetailImageUrl());
        }
        if (e.getOriginalImageUrl() == null) {
            if (e.getIsPropertyOriginalImageUrlRemoved() != null && e.getIsPropertyOriginalImageUrlRemoved()) {
                this.setOriginalImageUrl(null);
            }
        } else {
            this.setOriginalImageUrl(e.getOriginalImageUrl());
        }
        if (e.getDetailScreen() == null) {
            if (e.getIsPropertyDetailScreenRemoved() != null && e.getIsPropertyDetailScreenRemoved()) {
                this.setDetailScreen(null);
            }
        } else {
            this.setDetailScreen(e.getDetailScreen());
        }
        if (e.getInventoryMessage() == null) {
            if (e.getIsPropertyInventoryMessageRemoved() != null && e.getIsPropertyInventoryMessageRemoved()) {
                this.setInventoryMessage(null);
            }
        } else {
            this.setInventoryMessage(e.getInventoryMessage());
        }
        if (e.getQuantityUomId() == null) {
            if (e.getIsPropertyQuantityUomIdRemoved() != null && e.getIsPropertyQuantityUomIdRemoved()) {
                this.setQuantityUomId(null);
            }
        } else {
            this.setQuantityUomId(e.getQuantityUomId());
        }
        if (e.getQuantityIncluded() == null) {
            if (e.getIsPropertyQuantityIncludedRemoved() != null && e.getIsPropertyQuantityIncludedRemoved()) {
                this.setQuantityIncluded(null);
            }
        } else {
            this.setQuantityIncluded(e.getQuantityIncluded());
        }
        if (e.getPiecesIncluded() == null) {
            if (e.getIsPropertyPiecesIncludedRemoved() != null && e.getIsPropertyPiecesIncludedRemoved()) {
                this.setPiecesIncluded(null);
            }
        } else {
            this.setPiecesIncluded(e.getPiecesIncluded());
        }
        if (e.getRequireAmount() == null) {
            if (e.getIsPropertyRequireAmountRemoved() != null && e.getIsPropertyRequireAmountRemoved()) {
                this.setRequireAmount(null);
            }
        } else {
            this.setRequireAmount(e.getRequireAmount());
        }
        if (e.getFixedAmount() == null) {
            if (e.getIsPropertyFixedAmountRemoved() != null && e.getIsPropertyFixedAmountRemoved()) {
                this.setFixedAmount(null);
            }
        } else {
            this.setFixedAmount(e.getFixedAmount());
        }
        if (e.getAmountUomTypeId() == null) {
            if (e.getIsPropertyAmountUomTypeIdRemoved() != null && e.getIsPropertyAmountUomTypeIdRemoved()) {
                this.setAmountUomTypeId(null);
            }
        } else {
            this.setAmountUomTypeId(e.getAmountUomTypeId());
        }
        if (e.getWeightUomId() == null) {
            if (e.getIsPropertyWeightUomIdRemoved() != null && e.getIsPropertyWeightUomIdRemoved()) {
                this.setWeightUomId(null);
            }
        } else {
            this.setWeightUomId(e.getWeightUomId());
        }
        if (e.getShippingWeight() == null) {
            if (e.getIsPropertyShippingWeightRemoved() != null && e.getIsPropertyShippingWeightRemoved()) {
                this.setShippingWeight(null);
            }
        } else {
            this.setShippingWeight(e.getShippingWeight());
        }
        if (e.getProductWeight() == null) {
            if (e.getIsPropertyProductWeightRemoved() != null && e.getIsPropertyProductWeightRemoved()) {
                this.setProductWeight(null);
            }
        } else {
            this.setProductWeight(e.getProductWeight());
        }
        if (e.getHeightUomId() == null) {
            if (e.getIsPropertyHeightUomIdRemoved() != null && e.getIsPropertyHeightUomIdRemoved()) {
                this.setHeightUomId(null);
            }
        } else {
            this.setHeightUomId(e.getHeightUomId());
        }
        if (e.getProductHeight() == null) {
            if (e.getIsPropertyProductHeightRemoved() != null && e.getIsPropertyProductHeightRemoved()) {
                this.setProductHeight(null);
            }
        } else {
            this.setProductHeight(e.getProductHeight());
        }
        if (e.getShippingHeight() == null) {
            if (e.getIsPropertyShippingHeightRemoved() != null && e.getIsPropertyShippingHeightRemoved()) {
                this.setShippingHeight(null);
            }
        } else {
            this.setShippingHeight(e.getShippingHeight());
        }
        if (e.getWidthUomId() == null) {
            if (e.getIsPropertyWidthUomIdRemoved() != null && e.getIsPropertyWidthUomIdRemoved()) {
                this.setWidthUomId(null);
            }
        } else {
            this.setWidthUomId(e.getWidthUomId());
        }
        if (e.getProductWidth() == null) {
            if (e.getIsPropertyProductWidthRemoved() != null && e.getIsPropertyProductWidthRemoved()) {
                this.setProductWidth(null);
            }
        } else {
            this.setProductWidth(e.getProductWidth());
        }
        if (e.getShippingWidth() == null) {
            if (e.getIsPropertyShippingWidthRemoved() != null && e.getIsPropertyShippingWidthRemoved()) {
                this.setShippingWidth(null);
            }
        } else {
            this.setShippingWidth(e.getShippingWidth());
        }
        if (e.getDepthUomId() == null) {
            if (e.getIsPropertyDepthUomIdRemoved() != null && e.getIsPropertyDepthUomIdRemoved()) {
                this.setDepthUomId(null);
            }
        } else {
            this.setDepthUomId(e.getDepthUomId());
        }
        if (e.getProductDepth() == null) {
            if (e.getIsPropertyProductDepthRemoved() != null && e.getIsPropertyProductDepthRemoved()) {
                this.setProductDepth(null);
            }
        } else {
            this.setProductDepth(e.getProductDepth());
        }
        if (e.getShippingDepth() == null) {
            if (e.getIsPropertyShippingDepthRemoved() != null && e.getIsPropertyShippingDepthRemoved()) {
                this.setShippingDepth(null);
            }
        } else {
            this.setShippingDepth(e.getShippingDepth());
        }
        if (e.getDiameterUomId() == null) {
            if (e.getIsPropertyDiameterUomIdRemoved() != null && e.getIsPropertyDiameterUomIdRemoved()) {
                this.setDiameterUomId(null);
            }
        } else {
            this.setDiameterUomId(e.getDiameterUomId());
        }
        if (e.getProductDiameter() == null) {
            if (e.getIsPropertyProductDiameterRemoved() != null && e.getIsPropertyProductDiameterRemoved()) {
                this.setProductDiameter(null);
            }
        } else {
            this.setProductDiameter(e.getProductDiameter());
        }
        if (e.getProductRating() == null) {
            if (e.getIsPropertyProductRatingRemoved() != null && e.getIsPropertyProductRatingRemoved()) {
                this.setProductRating(null);
            }
        } else {
            this.setProductRating(e.getProductRating());
        }
        if (e.getRatingTypeEnum() == null) {
            if (e.getIsPropertyRatingTypeEnumRemoved() != null && e.getIsPropertyRatingTypeEnumRemoved()) {
                this.setRatingTypeEnum(null);
            }
        } else {
            this.setRatingTypeEnum(e.getRatingTypeEnum());
        }
        if (e.getReturnable() == null) {
            if (e.getIsPropertyReturnableRemoved() != null && e.getIsPropertyReturnableRemoved()) {
                this.setReturnable(null);
            }
        } else {
            this.setReturnable(e.getReturnable());
        }
        if (e.getTaxable() == null) {
            if (e.getIsPropertyTaxableRemoved() != null && e.getIsPropertyTaxableRemoved()) {
                this.setTaxable(null);
            }
        } else {
            this.setTaxable(e.getTaxable());
        }
        if (e.getChargeShipping() == null) {
            if (e.getIsPropertyChargeShippingRemoved() != null && e.getIsPropertyChargeShippingRemoved()) {
                this.setChargeShipping(null);
            }
        } else {
            this.setChargeShipping(e.getChargeShipping());
        }
        if (e.getAutoCreateKeywords() == null) {
            if (e.getIsPropertyAutoCreateKeywordsRemoved() != null && e.getIsPropertyAutoCreateKeywordsRemoved()) {
                this.setAutoCreateKeywords(null);
            }
        } else {
            this.setAutoCreateKeywords(e.getAutoCreateKeywords());
        }
        if (e.getIncludeInPromotions() == null) {
            if (e.getIsPropertyIncludeInPromotionsRemoved() != null && e.getIsPropertyIncludeInPromotionsRemoved()) {
                this.setIncludeInPromotions(null);
            }
        } else {
            this.setIncludeInPromotions(e.getIncludeInPromotions());
        }
        if (e.getIsVirtual() == null) {
            if (e.getIsPropertyIsVirtualRemoved() != null && e.getIsPropertyIsVirtualRemoved()) {
                this.setIsVirtual(null);
            }
        } else {
            this.setIsVirtual(e.getIsVirtual());
        }
        if (e.getIsVariant() == null) {
            if (e.getIsPropertyIsVariantRemoved() != null && e.getIsPropertyIsVariantRemoved()) {
                this.setIsVariant(null);
            }
        } else {
            this.setIsVariant(e.getIsVariant());
        }
        if (e.getVirtualVariantMethodEnum() == null) {
            if (e.getIsPropertyVirtualVariantMethodEnumRemoved() != null && e.getIsPropertyVirtualVariantMethodEnumRemoved()) {
                this.setVirtualVariantMethodEnum(null);
            }
        } else {
            this.setVirtualVariantMethodEnum(e.getVirtualVariantMethodEnum());
        }
        if (e.getOriginGeoId() == null) {
            if (e.getIsPropertyOriginGeoIdRemoved() != null && e.getIsPropertyOriginGeoIdRemoved()) {
                this.setOriginGeoId(null);
            }
        } else {
            this.setOriginGeoId(e.getOriginGeoId());
        }
        if (e.getRequirementMethodEnumId() == null) {
            if (e.getIsPropertyRequirementMethodEnumIdRemoved() != null && e.getIsPropertyRequirementMethodEnumIdRemoved()) {
                this.setRequirementMethodEnumId(null);
            }
        } else {
            this.setRequirementMethodEnumId(e.getRequirementMethodEnumId());
        }
        if (e.getBillOfMaterialLevel() == null) {
            if (e.getIsPropertyBillOfMaterialLevelRemoved() != null && e.getIsPropertyBillOfMaterialLevelRemoved()) {
                this.setBillOfMaterialLevel(null);
            }
        } else {
            this.setBillOfMaterialLevel(e.getBillOfMaterialLevel());
        }
        if (e.getInShippingBox() == null) {
            if (e.getIsPropertyInShippingBoxRemoved() != null && e.getIsPropertyInShippingBoxRemoved()) {
                this.setInShippingBox(null);
            }
        } else {
            this.setInShippingBox(e.getInShippingBox());
        }
        if (e.getDefaultShipmentBoxTypeId() == null) {
            if (e.getIsPropertyDefaultShipmentBoxTypeIdRemoved() != null && e.getIsPropertyDefaultShipmentBoxTypeIdRemoved()) {
                this.setDefaultShipmentBoxTypeId(null);
            }
        } else {
            this.setDefaultShipmentBoxTypeId(e.getDefaultShipmentBoxTypeId());
        }
        if (e.getLotIdFilledIn() == null) {
            if (e.getIsPropertyLotIdFilledInRemoved() != null && e.getIsPropertyLotIdFilledInRemoved()) {
                this.setLotIdFilledIn(null);
            }
        } else {
            this.setLotIdFilledIn(e.getLotIdFilledIn());
        }
        if (e.getOrderDecimalQuantity() == null) {
            if (e.getIsPropertyOrderDecimalQuantityRemoved() != null && e.getIsPropertyOrderDecimalQuantityRemoved()) {
                this.setOrderDecimalQuantity(null);
            }
        } else {
            this.setOrderDecimalQuantity(e.getOrderDecimalQuantity());
        }

        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

        for (GoodIdentificationEvent innerEvent : e.getGoodIdentificationEvents()) {
            GoodIdentificationState innerState = ((EntityStateCollection.ModifiableEntityStateCollection<String, GoodIdentificationState>)this.getGoodIdentifications()).getOrAddDefault(((GoodIdentificationEvent.SqlGoodIdentificationEvent)innerEvent).getGoodIdentificationEventId().getGoodIdentificationTypeId());
            ((GoodIdentificationState.SqlGoodIdentificationState)innerState).mutate(innerEvent);
            if (innerEvent instanceof GoodIdentificationEvent.GoodIdentificationStateRemoved) {
                //GoodIdentificationEvent.GoodIdentificationStateRemoved removed = (GoodIdentificationEvent.GoodIdentificationStateRemoved)innerEvent;
                ((EntityStateCollection.ModifiableEntityStateCollection)this.getGoodIdentifications()).removeState(innerState);
            }
        }
    }

    public void save() {
        if (goodIdentifications instanceof Saveable) {
            ((Saveable)goodIdentifications).save();
        }
    }

    protected void throwOnWrongEvent(ProductEvent event) {
        String stateEntityId = this.getProductId(); // Aggregate Id
        String eventEntityId = ((ProductEvent.SqlProductEvent)event).getProductEventId().getProductId(); // EntityBase.Aggregate.GetEventIdPropertyIdName();
        if (!stateEntityId.equals(eventEntityId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id %1$s in state but entity id %2$s in event", stateEntityId, eventEntityId);
        }


        Long stateVersion = this.getVersion();
        Long eventVersion = ((ProductEvent.SqlProductEvent)event).getProductEventId().getVersion();// Event Version
        if (eventVersion == null) {
            throw new NullPointerException("event.getProductEventId().getVersion() == null");
        }
        if (!(stateVersion == null && eventVersion.equals(VERSION_NULL)) && !eventVersion.equals(stateVersion)) {
            throw DomainError.named("concurrencyConflict", "Conflict between state version (%1$s) and event version (%2$s)", stateVersion, eventVersion == VERSION_NULL ? "NULL" : eventVersion + "");
        }

    }


    public static class SimpleProductState extends AbstractProductState {

        public SimpleProductState() {
        }

        public SimpleProductState(List<Event> events) {
            super(events);
        }

        public static SimpleProductState newForReapplying() {
            SimpleProductState s = new SimpleProductState();
            s.initializeForReapplying();
            return s;
        }

    }


    class SimpleGoodIdentificationStateCollection implements EntityStateCollection.ModifiableEntityStateCollection<String, GoodIdentificationState>, Collection<GoodIdentificationState> {

        @Override
        public GoodIdentificationState get(String goodIdentificationTypeId) {
            return protectedGoodIdentifications.stream().filter(
                            e -> e.getGoodIdentificationTypeId().equals(goodIdentificationTypeId))
                    .findFirst().orElse(null);
        }

        @Override
        public boolean isLazy() {
            return false;
        }

        @Override
        public boolean isAllLoaded() {
            return true;
        }

        @Override
        public Collection<GoodIdentificationState> getLoadedStates() {
            return protectedGoodIdentifications;
        }

        @Override
        public GoodIdentificationState getOrAddDefault(String goodIdentificationTypeId) {
            GoodIdentificationState s = get(goodIdentificationTypeId);
            if (s == null) {
                ProductGoodIdentificationId globalId = new ProductGoodIdentificationId(getProductId(), goodIdentificationTypeId);
                AbstractGoodIdentificationState state = new AbstractGoodIdentificationState.SimpleGoodIdentificationState();
                state.setProductGoodIdentificationId(globalId);
                add(state);
                s = state;
            }
            return s;
        }

        @Override
        public int size() {
            return protectedGoodIdentifications.size();
        }

        @Override
        public boolean isEmpty() {
            return protectedGoodIdentifications.isEmpty();
        }

        @Override
        public boolean contains(Object o) {
            return protectedGoodIdentifications.contains(o);
        }

        @Override
        public Iterator<GoodIdentificationState> iterator() {
            return protectedGoodIdentifications.iterator();
        }

        @Override
        public java.util.stream.Stream<GoodIdentificationState> stream() {
            return protectedGoodIdentifications.stream();
        }

        @Override
        public Object[] toArray() {
            return protectedGoodIdentifications.toArray();
        }

        @Override
        public <T> T[] toArray(T[] a) {
            return protectedGoodIdentifications.toArray(a);
        }

        @Override
        public boolean add(GoodIdentificationState s) {
            if (s instanceof AbstractGoodIdentificationState) {
                AbstractGoodIdentificationState state = (AbstractGoodIdentificationState) s;
                state.setProtectedProductState(AbstractProductState.this);
            }
            return protectedGoodIdentifications.add(s);
        }

        @Override
        public boolean remove(Object o) {
            if (o instanceof AbstractGoodIdentificationState) {
                AbstractGoodIdentificationState s = (AbstractGoodIdentificationState) o;
                s.setProtectedProductState(null);
            }
            return protectedGoodIdentifications.remove(o);
        }

        @Override
        public boolean removeState(GoodIdentificationState s) {
            return remove(s);
        }

        @Override
        public boolean containsAll(Collection<?> c) {
            return protectedGoodIdentifications.contains(c);
        }

        @Override
        public boolean addAll(Collection<? extends GoodIdentificationState> c) {
            return protectedGoodIdentifications.addAll(c);
        }

        @Override
        public boolean removeAll(Collection<?> c) {
            return protectedGoodIdentifications.removeAll(c);
        }

        @Override
        public boolean retainAll(Collection<?> c) {
            return protectedGoodIdentifications.retainAll(c);
        }

        @Override
        public void clear() {
            protectedGoodIdentifications.clear();
        }
    }


}

