// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.uomtype;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractUomTypeEvent extends AbstractEvent implements UomTypeEvent.SqlUomTypeEvent {
    private UomTypeEventId uomTypeEventId = new UomTypeEventId();

    public UomTypeEventId getUomTypeEventId() {
        return this.uomTypeEventId;
    }

    public void setUomTypeEventId(UomTypeEventId eventId) {
        this.uomTypeEventId = eventId;
    }
    
    public String getUomTypeId() {
        return getUomTypeEventId().getUomTypeId();
    }

    public void setUomTypeId(String uomTypeId) {
        getUomTypeEventId().setUomTypeId(uomTypeId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getUomTypeEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getUomTypeEventId().setVersion(version);
    }

    private String tenantId;

    public String getTenantId() {
        return this.tenantId;
    }

    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractUomTypeEvent() {
    }

    protected AbstractUomTypeEvent(UomTypeEventId eventId) {
        this.uomTypeEventId = eventId;
    }


    public abstract String getEventType();

    public static class UomTypeLobEvent extends AbstractUomTypeEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "UomTypeLobEvent";
        }

    }


    public static abstract class AbstractUomTypeStateEvent extends AbstractUomTypeEvent implements UomTypeEvent.UomTypeStateEvent {
        private String parentTypeId;

        public String getParentTypeId()
        {
            return this.parentTypeId;
        }

        public void setParentTypeId(String parentTypeId)
        {
            this.parentTypeId = parentTypeId;
        }

        private String hasTable;

        public String getHasTable()
        {
            return this.hasTable;
        }

        public void setHasTable(String hasTable)
        {
            this.hasTable = hasTable;
        }

        private String description;

        public String getDescription()
        {
            return this.description;
        }

        public void setDescription(String description)
        {
            this.description = description;
        }

        protected AbstractUomTypeStateEvent(UomTypeEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractUomTypeStateCreated extends AbstractUomTypeStateEvent implements UomTypeEvent.UomTypeStateCreated
    {
        public AbstractUomTypeStateCreated() {
            this(new UomTypeEventId());
        }

        public AbstractUomTypeStateCreated(UomTypeEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractUomTypeStateMergePatched extends AbstractUomTypeStateEvent implements UomTypeEvent.UomTypeStateMergePatched
    {
        public AbstractUomTypeStateMergePatched() {
            this(new UomTypeEventId());
        }

        public AbstractUomTypeStateMergePatched(UomTypeEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyParentTypeIdRemoved;

        public Boolean getIsPropertyParentTypeIdRemoved() {
            return this.isPropertyParentTypeIdRemoved;
        }

        public void setIsPropertyParentTypeIdRemoved(Boolean removed) {
            this.isPropertyParentTypeIdRemoved = removed;
        }

        private Boolean isPropertyHasTableRemoved;

        public Boolean getIsPropertyHasTableRemoved() {
            return this.isPropertyHasTableRemoved;
        }

        public void setIsPropertyHasTableRemoved(Boolean removed) {
            this.isPropertyHasTableRemoved = removed;
        }

        private Boolean isPropertyDescriptionRemoved;

        public Boolean getIsPropertyDescriptionRemoved() {
            return this.isPropertyDescriptionRemoved;
        }

        public void setIsPropertyDescriptionRemoved(Boolean removed) {
            this.isPropertyDescriptionRemoved = removed;
        }


    }



    public static class SimpleUomTypeStateCreated extends AbstractUomTypeStateCreated
    {
        public SimpleUomTypeStateCreated() {
        }

        public SimpleUomTypeStateCreated(UomTypeEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleUomTypeStateMergePatched extends AbstractUomTypeStateMergePatched
    {
        public SimpleUomTypeStateMergePatched() {
        }

        public SimpleUomTypeStateMergePatched(UomTypeEventId eventId) {
            super(eventId);
        }
    }

}

