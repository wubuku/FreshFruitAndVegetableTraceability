// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain;

import org.dddml.ffvtraceability.specialization.ReflectUtils;
import org.dddml.ffvtraceability.specialization.MutationContext;
import org.dddml.ffvtraceability.specialization.VerificationContext;
import org.dddml.ffvtraceability.domain.shippingevent.*;
import org.dddml.ffvtraceability.domain.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.receivingevent.*;
import org.dddml.ffvtraceability.domain.transformationevent.*;
import org.dddml.ffvtraceability.domain.gs1applicationidentifier.*;
import org.dddml.ffvtraceability.domain.attributesetinstance.*;
import org.dddml.ffvtraceability.domain.statusitem.*;
import org.dddml.ffvtraceability.domain.uomtype.*;
import org.dddml.ffvtraceability.domain.article.*;
import org.dddml.ffvtraceability.domain.supplierproduct.*;

public class StaticMethodConstraints {

    public static void assertStaticVerificationAndMutationMethods() {

        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.dddml.ffvtraceability.domain.supplierproduct.UpdateAvailableThruDateLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, SupplierProductState.class, OffsetDateTime.class, VerificationContext.class},
                    new String[]{"_", "_", "availableThruDate"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.dddml.ffvtraceability.domain.supplierproduct.DisableLogic",
                    "verify",
                    new Class[]{java.util.function.Supplier.class, SupplierProductState.class, VerificationContext.class},
                    new String[]{"_", "_"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.dddml.ffvtraceability.domain.supplierproduct.UpdateAvailableThruDateLogic",
                    "mutate",
                    new Class[]{SupplierProductState.class, OffsetDateTime.class, MutationContext.class},
                    new String[]{"_", "availableThruDate"}
            );


        ReflectUtils.assertStaticMethodIfClassExists(
                    "org.dddml.ffvtraceability.domain.supplierproduct.DisableLogic",
                    "mutate",
                    new Class[]{SupplierProductState.class, MutationContext.class},
                    new String[]{"_"}
            );



    }

}


