// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.document;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractDocumentEvent extends AbstractEvent implements DocumentEvent.SqlDocumentEvent {
    private DocumentEventId documentEventId = new DocumentEventId();

    public DocumentEventId getDocumentEventId() {
        return this.documentEventId;
    }

    public void setDocumentEventId(DocumentEventId eventId) {
        this.documentEventId = eventId;
    }
    
    public String getDocumentId() {
        return getDocumentEventId().getDocumentId();
    }

    public void setDocumentId(String documentId) {
        getDocumentEventId().setDocumentId(documentId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getDocumentEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getDocumentEventId().setVersion(version);
    }

    private String tenantId;

    public String getTenantId() {
        return this.tenantId;
    }

    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractDocumentEvent() {
    }

    protected AbstractDocumentEvent(DocumentEventId eventId) {
        this.documentEventId = eventId;
    }


    public abstract String getEventType();

    public static class DocumentLobEvent extends AbstractDocumentEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "DocumentLobEvent";
        }

    }


    public static abstract class AbstractDocumentStateEvent extends AbstractDocumentEvent implements DocumentEvent.DocumentStateEvent {
        private String documentTypeId;

        public String getDocumentTypeId()
        {
            return this.documentTypeId;
        }

        public void setDocumentTypeId(String documentTypeId)
        {
            this.documentTypeId = documentTypeId;
        }

        private String comments;

        public String getComments()
        {
            return this.comments;
        }

        public void setComments(String comments)
        {
            this.comments = comments;
        }

        private String documentLocation;

        public String getDocumentLocation()
        {
            return this.documentLocation;
        }

        public void setDocumentLocation(String documentLocation)
        {
            this.documentLocation = documentLocation;
        }

        private String documentText;

        public String getDocumentText()
        {
            return this.documentText;
        }

        public void setDocumentText(String documentText)
        {
            this.documentText = documentText;
        }

        private String contentType;

        public String getContentType()
        {
            return this.contentType;
        }

        public void setContentType(String contentType)
        {
            this.contentType = contentType;
        }

        protected AbstractDocumentStateEvent(DocumentEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractDocumentStateCreated extends AbstractDocumentStateEvent implements DocumentEvent.DocumentStateCreated
    {
        public AbstractDocumentStateCreated() {
            this(new DocumentEventId());
        }

        public AbstractDocumentStateCreated(DocumentEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractDocumentStateMergePatched extends AbstractDocumentStateEvent implements DocumentEvent.DocumentStateMergePatched
    {
        public AbstractDocumentStateMergePatched() {
            this(new DocumentEventId());
        }

        public AbstractDocumentStateMergePatched(DocumentEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyDocumentTypeIdRemoved;

        public Boolean getIsPropertyDocumentTypeIdRemoved() {
            return this.isPropertyDocumentTypeIdRemoved;
        }

        public void setIsPropertyDocumentTypeIdRemoved(Boolean removed) {
            this.isPropertyDocumentTypeIdRemoved = removed;
        }

        private Boolean isPropertyCommentsRemoved;

        public Boolean getIsPropertyCommentsRemoved() {
            return this.isPropertyCommentsRemoved;
        }

        public void setIsPropertyCommentsRemoved(Boolean removed) {
            this.isPropertyCommentsRemoved = removed;
        }

        private Boolean isPropertyDocumentLocationRemoved;

        public Boolean getIsPropertyDocumentLocationRemoved() {
            return this.isPropertyDocumentLocationRemoved;
        }

        public void setIsPropertyDocumentLocationRemoved(Boolean removed) {
            this.isPropertyDocumentLocationRemoved = removed;
        }

        private Boolean isPropertyDocumentTextRemoved;

        public Boolean getIsPropertyDocumentTextRemoved() {
            return this.isPropertyDocumentTextRemoved;
        }

        public void setIsPropertyDocumentTextRemoved(Boolean removed) {
            this.isPropertyDocumentTextRemoved = removed;
        }

        private Boolean isPropertyContentTypeRemoved;

        public Boolean getIsPropertyContentTypeRemoved() {
            return this.isPropertyContentTypeRemoved;
        }

        public void setIsPropertyContentTypeRemoved(Boolean removed) {
            this.isPropertyContentTypeRemoved = removed;
        }


    }



    public static class SimpleDocumentStateCreated extends AbstractDocumentStateCreated
    {
        public SimpleDocumentStateCreated() {
        }

        public SimpleDocumentStateCreated(DocumentEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleDocumentStateMergePatched extends AbstractDocumentStateMergePatched
    {
        public SimpleDocumentStateMergePatched() {
        }

        public SimpleDocumentStateMergePatched(DocumentEventId eventId) {
            super(eventId);
        }
    }

}

