// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.shipmentreceipt;

import java.util.*;
import java.math.*;
import org.dddml.ffvtraceability.domain.order.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class ShipmentReceiptOrderAllocationStateDto {

    private OrderItemId orderItemId;

    public OrderItemId getOrderItemId()
    {
        return this.orderItemId;
    }

    public void setOrderItemId(OrderItemId orderItemId)
    {
        this.orderItemId = orderItemId;
    }

    private java.math.BigDecimal quantityAllocated;

    public java.math.BigDecimal getQuantityAllocated()
    {
        return this.quantityAllocated;
    }

    public void setQuantityAllocated(java.math.BigDecimal quantityAllocated)
    {
        this.quantityAllocated = quantityAllocated;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String shipmentReceiptReceiptId;

    public String getShipmentReceiptReceiptId()
    {
        return this.shipmentReceiptReceiptId;
    }

    public void setShipmentReceiptReceiptId(String shipmentReceiptReceiptId)
    {
        this.shipmentReceiptReceiptId = shipmentReceiptReceiptId;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public ShipmentReceiptOrderAllocationStateDto[] toShipmentReceiptOrderAllocationStateDtoArray(Iterable<ShipmentReceiptOrderAllocationState> states) {
            return toShipmentReceiptOrderAllocationStateDtoList(states).toArray(new ShipmentReceiptOrderAllocationStateDto[0]);
        }

        public List<ShipmentReceiptOrderAllocationStateDto> toShipmentReceiptOrderAllocationStateDtoList(Iterable<ShipmentReceiptOrderAllocationState> states) {
            ArrayList<ShipmentReceiptOrderAllocationStateDto> stateDtos = new ArrayList();
            for (ShipmentReceiptOrderAllocationState s : states) {
                ShipmentReceiptOrderAllocationStateDto dto = toShipmentReceiptOrderAllocationStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public ShipmentReceiptOrderAllocationStateDto toShipmentReceiptOrderAllocationStateDto(ShipmentReceiptOrderAllocationState state)
        {
            if(state == null) {
                return null;
            }
            ShipmentReceiptOrderAllocationStateDto dto = new ShipmentReceiptOrderAllocationStateDto();
            if (returnedFieldsContains("OrderItemId")) {
                dto.setOrderItemId(state.getOrderItemId());
            }
            if (returnedFieldsContains("QuantityAllocated")) {
                dto.setQuantityAllocated(state.getQuantityAllocated());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("ShipmentReceiptReceiptId")) {
                dto.setShipmentReceiptReceiptId(state.getShipmentReceiptReceiptId());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

