// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.attribute;

import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchAttributeValueDto extends AbstractAttributeValueCommandDto implements AttributeValueCommand.CreateOrMergePatchAttributeValue {

    /**
     * Attribute Value Name
     */
    private String attributeValueName;

    public String getAttributeValueName()
    {
        return this.attributeValueName;
    }

    public void setAttributeValueName(String attributeValueName)
    {
        this.attributeValueName = attributeValueName;
    }

    /**
     * Description
     */
    private String description;

    public String getDescription()
    {
        return this.description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    /**
     * Indicates whether this value serves as the default option
     */
    private String isDefault;

    public String getIsDefault()
    {
        return this.isDefault;
    }

    public void setIsDefault(String isDefault)
    {
        this.isDefault = isDefault;
    }

    /**
     * Active
     */
    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }


    private Boolean isPropertyAttributeValueNameRemoved;

    public Boolean getIsPropertyAttributeValueNameRemoved()
    {
        return this.isPropertyAttributeValueNameRemoved;
    }

    public void setIsPropertyAttributeValueNameRemoved(Boolean removed)
    {
        this.isPropertyAttributeValueNameRemoved = removed;
    }

    private Boolean isPropertyDescriptionRemoved;

    public Boolean getIsPropertyDescriptionRemoved()
    {
        return this.isPropertyDescriptionRemoved;
    }

    public void setIsPropertyDescriptionRemoved(Boolean removed)
    {
        this.isPropertyDescriptionRemoved = removed;
    }

    private Boolean isPropertyIsDefaultRemoved;

    public Boolean getIsPropertyIsDefaultRemoved()
    {
        return this.isPropertyIsDefaultRemoved;
    }

    public void setIsPropertyIsDefaultRemoved(Boolean removed)
    {
        this.isPropertyIsDefaultRemoved = removed;
    }

    private Boolean isPropertyActiveRemoved;

    public Boolean getIsPropertyActiveRemoved()
    {
        return this.isPropertyActiveRemoved;
    }

    public void setIsPropertyActiveRemoved(Boolean removed)
    {
        this.isPropertyActiveRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchAttributeValue command)
    {
        ((AbstractAttributeValueCommandDto) this).copyTo(command);
        command.setAttributeValueName(this.getAttributeValueName());
        command.setDescription(this.getDescription());
        command.setIsDefault(this.getIsDefault());
        command.setActive(this.getActive());
    }

    public AttributeValueCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractAttributeValueCommand.SimpleCreateAttributeValue command = new AbstractAttributeValueCommand.SimpleCreateAttributeValue();
            copyTo((AbstractAttributeValueCommand.AbstractCreateAttributeValue) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractAttributeValueCommand.SimpleMergePatchAttributeValue command = new AbstractAttributeValueCommand.SimpleMergePatchAttributeValue();
            copyTo((AbstractAttributeValueCommand.SimpleMergePatchAttributeValue) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            AbstractAttributeValueCommand.SimpleRemoveAttributeValue command = new AbstractAttributeValueCommand.SimpleRemoveAttributeValue();
            ((AbstractAttributeValueCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public AttributeValueCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateAttributeValueDto command = new CreateAttributeValueDto();
            copyTo((CreateAttributeValue) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchAttributeValueDto command = new MergePatchAttributeValueDto();
            copyTo((MergePatchAttributeValue) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            RemoveAttributeValueDto command = new RemoveAttributeValueDto();
            ((AbstractAttributeValueCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateAttributeValue command)
    {
        copyTo((CreateOrMergePatchAttributeValue) command);
    }

    public void copyTo(MergePatchAttributeValue command)
    {
        copyTo((CreateOrMergePatchAttributeValue) command);
        command.setIsPropertyAttributeValueNameRemoved(this.getIsPropertyAttributeValueNameRemoved());
        command.setIsPropertyDescriptionRemoved(this.getIsPropertyDescriptionRemoved());
        command.setIsPropertyIsDefaultRemoved(this.getIsPropertyIsDefaultRemoved());
        command.setIsPropertyActiveRemoved(this.getIsPropertyActiveRemoved());
    }

    public static class CreateAttributeValueDto extends CreateOrMergePatchAttributeValueDto implements AttributeValueCommand.CreateAttributeValue
    {
        public CreateAttributeValueDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public AttributeValueCommand.CreateAttributeValue toCreateAttributeValue()
        {
            return (AttributeValueCommand.CreateAttributeValue) toCommand();
        }

    }

    public static class MergePatchAttributeValueDto extends CreateOrMergePatchAttributeValueDto implements AttributeValueCommand.MergePatchAttributeValue
    {
        public MergePatchAttributeValueDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public AttributeValueCommand.MergePatchAttributeValue toMergePatchAttributeValue()
        {
            return (AttributeValueCommand.MergePatchAttributeValue) toCommand();
        }

    }

}

