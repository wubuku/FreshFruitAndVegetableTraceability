// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.order;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.order.OrderShipGroupEvent.*;

public abstract class AbstractOrderShipGroupState implements OrderShipGroupState.SqlOrderShipGroupState, Saveable {

    private OrderShipGroupId orderShipGroupId = new OrderShipGroupId();

    public OrderShipGroupId getOrderShipGroupId() {
        return this.orderShipGroupId;
    }

    public void setOrderShipGroupId(OrderShipGroupId orderShipGroupId) {
        this.orderShipGroupId = orderShipGroupId;
    }

    private transient OrderHeaderState orderHeaderState;

    public OrderHeaderState getOrderHeaderState() {
        return orderHeaderState;
    }

    public void setOrderHeaderState(OrderHeaderState s) {
        orderHeaderState = s;
    }
    
    private OrderHeaderState protectedOrderHeaderState;

    protected OrderHeaderState getProtectedOrderHeaderState() {
        return protectedOrderHeaderState;
    }

    protected void setProtectedOrderHeaderState(OrderHeaderState protectedOrderHeaderState) {
        this.protectedOrderHeaderState = protectedOrderHeaderState;
    }

    public String getOrderId() {
        return this.getOrderShipGroupId().getOrderId();
    }
        
    public void setOrderId(String orderId) {
        this.getOrderShipGroupId().setOrderId(orderId);
    }

    public String getShipGroupSeqId() {
        return this.getOrderShipGroupId().getShipGroupSeqId();
    }
        
    public void setShipGroupSeqId(String shipGroupSeqId) {
        this.getOrderShipGroupId().setShipGroupSeqId(shipGroupSeqId);
    }

    private String shipmentMethodTypeId;

    public String getShipmentMethodTypeId() {
        return this.shipmentMethodTypeId;
    }

    public void setShipmentMethodTypeId(String shipmentMethodTypeId) {
        this.shipmentMethodTypeId = shipmentMethodTypeId;
    }

    private String supplierPartyId;

    public String getSupplierPartyId() {
        return this.supplierPartyId;
    }

    public void setSupplierPartyId(String supplierPartyId) {
        this.supplierPartyId = supplierPartyId;
    }

    private String vendorPartyId;

    public String getVendorPartyId() {
        return this.vendorPartyId;
    }

    public void setVendorPartyId(String vendorPartyId) {
        this.vendorPartyId = vendorPartyId;
    }

    private String carrierPartyId;

    public String getCarrierPartyId() {
        return this.carrierPartyId;
    }

    public void setCarrierPartyId(String carrierPartyId) {
        this.carrierPartyId = carrierPartyId;
    }

    private String carrierRoleTypeId;

    public String getCarrierRoleTypeId() {
        return this.carrierRoleTypeId;
    }

    public void setCarrierRoleTypeId(String carrierRoleTypeId) {
        this.carrierRoleTypeId = carrierRoleTypeId;
    }

    private String facilityId;

    public String getFacilityId() {
        return this.facilityId;
    }

    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }

    private String contactMechId;

    public String getContactMechId() {
        return this.contactMechId;
    }

    public void setContactMechId(String contactMechId) {
        this.contactMechId = contactMechId;
    }

    private String telecomContactMechId;

    public String getTelecomContactMechId() {
        return this.telecomContactMechId;
    }

    public void setTelecomContactMechId(String telecomContactMechId) {
        this.telecomContactMechId = telecomContactMechId;
    }

    private String trackingNumber;

    public String getTrackingNumber() {
        return this.trackingNumber;
    }

    public void setTrackingNumber(String trackingNumber) {
        this.trackingNumber = trackingNumber;
    }

    private String shippingInstructions;

    public String getShippingInstructions() {
        return this.shippingInstructions;
    }

    public void setShippingInstructions(String shippingInstructions) {
        this.shippingInstructions = shippingInstructions;
    }

    private String maySplit;

    public String getMaySplit() {
        return this.maySplit;
    }

    public void setMaySplit(String maySplit) {
        this.maySplit = maySplit;
    }

    private String giftMessage;

    public String getGiftMessage() {
        return this.giftMessage;
    }

    public void setGiftMessage(String giftMessage) {
        this.giftMessage = giftMessage;
    }

    private String isGift;

    public String getIsGift() {
        return this.isGift;
    }

    public void setIsGift(String isGift) {
        this.isGift = isGift;
    }

    private OffsetDateTime shipAfterDate;

    public OffsetDateTime getShipAfterDate() {
        return this.shipAfterDate;
    }

    public void setShipAfterDate(OffsetDateTime shipAfterDate) {
        this.shipAfterDate = shipAfterDate;
    }

    private OffsetDateTime shipByDate;

    public OffsetDateTime getShipByDate() {
        return this.shipByDate;
    }

    public void setShipByDate(OffsetDateTime shipByDate) {
        this.shipByDate = shipByDate;
    }

    private OffsetDateTime estimatedShipDate;

    public OffsetDateTime getEstimatedShipDate() {
        return this.estimatedShipDate;
    }

    public void setEstimatedShipDate(OffsetDateTime estimatedShipDate) {
        this.estimatedShipDate = estimatedShipDate;
    }

    private OffsetDateTime estimatedDeliveryDate;

    public OffsetDateTime getEstimatedDeliveryDate() {
        return this.estimatedDeliveryDate;
    }

    public void setEstimatedDeliveryDate(OffsetDateTime estimatedDeliveryDate) {
        this.estimatedDeliveryDate = estimatedDeliveryDate;
    }

    private String supplierCurrencyUomId;

    public String getSupplierCurrencyUomId() {
        return this.supplierCurrencyUomId;
    }

    public void setSupplierCurrencyUomId(String supplierCurrencyUomId) {
        this.supplierCurrencyUomId = supplierCurrencyUomId;
    }

    private java.math.BigDecimal supplierPayableAmount;

    public java.math.BigDecimal getSupplierPayableAmount() {
        return this.supplierPayableAmount;
    }

    public void setSupplierPayableAmount(java.math.BigDecimal supplierPayableAmount) {
        this.supplierPayableAmount = supplierPayableAmount;
    }

    private String supplierSyncStatusId;

    public String getSupplierSyncStatusId() {
        return this.supplierSyncStatusId;
    }

    public void setSupplierSyncStatusId(String supplierSyncStatusId) {
        this.supplierSyncStatusId = supplierSyncStatusId;
    }

    private String supplierSyncCode;

    public String getSupplierSyncCode() {
        return this.supplierSyncCode;
    }

    public void setSupplierSyncCode(String supplierSyncCode) {
        this.supplierSyncCode = supplierSyncCode;
    }

    private String supplierSyncMessage;

    public String getSupplierSyncMessage() {
        return this.supplierSyncMessage;
    }

    public void setSupplierSyncMessage(String supplierSyncMessage) {
        this.supplierSyncMessage = supplierSyncMessage;
    }

    private Long version;

    public Long getVersion() {
        return this.version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public boolean isStateUnsaved() {
        return this.getVersion() == null;
    }

    private Set<OrderItemShipGroupAssociationState> protectedOrderItemShipGroupAssociations = new HashSet<>();

    protected Set<OrderItemShipGroupAssociationState> getProtectedOrderItemShipGroupAssociations() {
        return this.protectedOrderItemShipGroupAssociations;
    }

    protected void setProtectedOrderItemShipGroupAssociations(Set<OrderItemShipGroupAssociationState> protectedOrderItemShipGroupAssociations) {
        this.protectedOrderItemShipGroupAssociations = protectedOrderItemShipGroupAssociations;
    }

    private EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState> orderItemShipGroupAssociations;

    public EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState> getOrderItemShipGroupAssociations() {
        return this.orderItemShipGroupAssociations;
    }

    public void setOrderItemShipGroupAssociations(EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState> orderItemShipGroupAssociations) {
        this.orderItemShipGroupAssociations = orderItemShipGroupAssociations;
    }

    private Boolean stateReadOnly;

    public Boolean getStateReadOnly() { return this.stateReadOnly; }

    public void setStateReadOnly(Boolean readOnly) { this.stateReadOnly = readOnly; }

    private boolean forReapplying;

    public boolean getForReapplying() {
        return forReapplying;
    }

    public void setForReapplying(boolean forReapplying) {
        this.forReapplying = forReapplying;
    }


    public AbstractOrderShipGroupState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        this.forReapplying = true;

        initializeProperties();
    }
    
    protected void initializeProperties() {
        orderItemShipGroupAssociations = new SimpleOrderItemShipGroupAssociationStateCollection();
    }

    @Override
    public int hashCode() {
        return getShipGroupSeqId().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) { return true; }
        if (obj instanceof OrderShipGroupState) {
            return Objects.equals(this.getShipGroupSeqId(), ((OrderShipGroupState)obj).getShipGroupSeqId());
        }
        return false;
    }


    public void mutate(Event e) {
        setStateReadOnly(false);
        if (e instanceof OrderShipGroupStateCreated) {
            when((OrderShipGroupStateCreated) e);
        } else if (e instanceof OrderShipGroupStateMergePatched) {
            when((OrderShipGroupStateMergePatched) e);
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void when(OrderShipGroupStateCreated e) {
        throwOnWrongEvent(e);

        this.setShipmentMethodTypeId(e.getShipmentMethodTypeId());
        this.setSupplierPartyId(e.getSupplierPartyId());
        this.setVendorPartyId(e.getVendorPartyId());
        this.setCarrierPartyId(e.getCarrierPartyId());
        this.setCarrierRoleTypeId(e.getCarrierRoleTypeId());
        this.setFacilityId(e.getFacilityId());
        this.setContactMechId(e.getContactMechId());
        this.setTelecomContactMechId(e.getTelecomContactMechId());
        this.setTrackingNumber(e.getTrackingNumber());
        this.setShippingInstructions(e.getShippingInstructions());
        this.setMaySplit(e.getMaySplit());
        this.setGiftMessage(e.getGiftMessage());
        this.setIsGift(e.getIsGift());
        this.setShipAfterDate(e.getShipAfterDate());
        this.setShipByDate(e.getShipByDate());
        this.setEstimatedShipDate(e.getEstimatedShipDate());
        this.setEstimatedDeliveryDate(e.getEstimatedDeliveryDate());
        this.setSupplierCurrencyUomId(e.getSupplierCurrencyUomId());
        this.setSupplierPayableAmount(e.getSupplierPayableAmount());
        this.setSupplierSyncStatusId(e.getSupplierSyncStatusId());
        this.setSupplierSyncCode(e.getSupplierSyncCode());
        this.setSupplierSyncMessage(e.getSupplierSyncMessage());

        this.setCreatedBy(e.getCreatedBy());
        this.setCreatedAt(e.getCreatedAt());

        for (OrderItemShipGroupAssociationEvent.OrderItemShipGroupAssociationStateCreated innerEvent : e.getOrderItemShipGroupAssociationEvents()) {
            OrderItemShipGroupAssociationState innerState = ((EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState>)this.getOrderItemShipGroupAssociations()).getOrAddDefault(((OrderItemShipGroupAssociationEvent.SqlOrderItemShipGroupAssociationEvent)innerEvent).getOrderItemShipGroupAssociationEventId().getOrderItemSeqId());
            ((OrderItemShipGroupAssociationState.SqlOrderItemShipGroupAssociationState)innerState).mutate(innerEvent);
        }
    }

    public void merge(OrderShipGroupState s) {
        if (s == this) {
            return;
        }
        this.setShipmentMethodTypeId(s.getShipmentMethodTypeId());
        this.setSupplierPartyId(s.getSupplierPartyId());
        this.setVendorPartyId(s.getVendorPartyId());
        this.setCarrierPartyId(s.getCarrierPartyId());
        this.setCarrierRoleTypeId(s.getCarrierRoleTypeId());
        this.setFacilityId(s.getFacilityId());
        this.setContactMechId(s.getContactMechId());
        this.setTelecomContactMechId(s.getTelecomContactMechId());
        this.setTrackingNumber(s.getTrackingNumber());
        this.setShippingInstructions(s.getShippingInstructions());
        this.setMaySplit(s.getMaySplit());
        this.setGiftMessage(s.getGiftMessage());
        this.setIsGift(s.getIsGift());
        this.setShipAfterDate(s.getShipAfterDate());
        this.setShipByDate(s.getShipByDate());
        this.setEstimatedShipDate(s.getEstimatedShipDate());
        this.setEstimatedDeliveryDate(s.getEstimatedDeliveryDate());
        this.setSupplierCurrencyUomId(s.getSupplierCurrencyUomId());
        this.setSupplierPayableAmount(s.getSupplierPayableAmount());
        this.setSupplierSyncStatusId(s.getSupplierSyncStatusId());
        this.setSupplierSyncCode(s.getSupplierSyncCode());
        this.setSupplierSyncMessage(s.getSupplierSyncMessage());

        if (s.getOrderItemShipGroupAssociations() != null) {
            Iterable<OrderItemShipGroupAssociationState> iterable;
            if (s.getOrderItemShipGroupAssociations().isLazy()) {
                iterable = s.getOrderItemShipGroupAssociations().getLoadedStates();
            } else {
                iterable = s.getOrderItemShipGroupAssociations();
            }
            if (iterable != null) {
                for (OrderItemShipGroupAssociationState ss : iterable) {
                    OrderItemShipGroupAssociationState thisInnerState = ((EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState>)this.getOrderItemShipGroupAssociations()).getOrAddDefault(ss.getOrderItemSeqId());
                    ((AbstractOrderItemShipGroupAssociationState) thisInnerState).merge(ss);
                }
            }
        }
        if (s.getOrderItemShipGroupAssociations() != null) {
            if (s.getOrderItemShipGroupAssociations() instanceof EntityStateCollection.RemovalLoggedEntityStateCollection) {
                if (((EntityStateCollection.RemovalLoggedEntityStateCollection)s.getOrderItemShipGroupAssociations()).getRemovedStates() != null) {
                    for (OrderItemShipGroupAssociationState ss : ((EntityStateCollection.RemovalLoggedEntityStateCollection<String, OrderItemShipGroupAssociationState>)s.getOrderItemShipGroupAssociations()).getRemovedStates()) {
                        OrderItemShipGroupAssociationState thisInnerState = ((EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState>)this.getOrderItemShipGroupAssociations()).getOrAddDefault(ss.getOrderItemSeqId());
                        ((EntityStateCollection.MutableEntityStateCollection)this.getOrderItemShipGroupAssociations()).removeState(thisInnerState);
                    }
                }
            } else {
                if (s.getOrderItemShipGroupAssociations().isAllLoaded()) {
                    Set<String> removedStateIds = new HashSet<>(this.getOrderItemShipGroupAssociations().stream().map(i -> i.getOrderItemSeqId()).collect(java.util.stream.Collectors.toList()));
                    s.getOrderItemShipGroupAssociations().forEach(i -> removedStateIds.remove(i.getOrderItemSeqId()));
                    for (String i : removedStateIds) {
                        OrderItemShipGroupAssociationState thisInnerState = ((EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState>)this.getOrderItemShipGroupAssociations()).getOrAddDefault(i);
                        ((EntityStateCollection.MutableEntityStateCollection)this.getOrderItemShipGroupAssociations()).removeState(thisInnerState);
                    }
                } else {
                    throw new UnsupportedOperationException();
                }
            }
        }
    }

    public void when(OrderShipGroupStateMergePatched e) {
        throwOnWrongEvent(e);

        if (e.getShipmentMethodTypeId() == null) {
            if (e.getIsPropertyShipmentMethodTypeIdRemoved() != null && e.getIsPropertyShipmentMethodTypeIdRemoved()) {
                this.setShipmentMethodTypeId(null);
            }
        } else {
            this.setShipmentMethodTypeId(e.getShipmentMethodTypeId());
        }
        if (e.getSupplierPartyId() == null) {
            if (e.getIsPropertySupplierPartyIdRemoved() != null && e.getIsPropertySupplierPartyIdRemoved()) {
                this.setSupplierPartyId(null);
            }
        } else {
            this.setSupplierPartyId(e.getSupplierPartyId());
        }
        if (e.getVendorPartyId() == null) {
            if (e.getIsPropertyVendorPartyIdRemoved() != null && e.getIsPropertyVendorPartyIdRemoved()) {
                this.setVendorPartyId(null);
            }
        } else {
            this.setVendorPartyId(e.getVendorPartyId());
        }
        if (e.getCarrierPartyId() == null) {
            if (e.getIsPropertyCarrierPartyIdRemoved() != null && e.getIsPropertyCarrierPartyIdRemoved()) {
                this.setCarrierPartyId(null);
            }
        } else {
            this.setCarrierPartyId(e.getCarrierPartyId());
        }
        if (e.getCarrierRoleTypeId() == null) {
            if (e.getIsPropertyCarrierRoleTypeIdRemoved() != null && e.getIsPropertyCarrierRoleTypeIdRemoved()) {
                this.setCarrierRoleTypeId(null);
            }
        } else {
            this.setCarrierRoleTypeId(e.getCarrierRoleTypeId());
        }
        if (e.getFacilityId() == null) {
            if (e.getIsPropertyFacilityIdRemoved() != null && e.getIsPropertyFacilityIdRemoved()) {
                this.setFacilityId(null);
            }
        } else {
            this.setFacilityId(e.getFacilityId());
        }
        if (e.getContactMechId() == null) {
            if (e.getIsPropertyContactMechIdRemoved() != null && e.getIsPropertyContactMechIdRemoved()) {
                this.setContactMechId(null);
            }
        } else {
            this.setContactMechId(e.getContactMechId());
        }
        if (e.getTelecomContactMechId() == null) {
            if (e.getIsPropertyTelecomContactMechIdRemoved() != null && e.getIsPropertyTelecomContactMechIdRemoved()) {
                this.setTelecomContactMechId(null);
            }
        } else {
            this.setTelecomContactMechId(e.getTelecomContactMechId());
        }
        if (e.getTrackingNumber() == null) {
            if (e.getIsPropertyTrackingNumberRemoved() != null && e.getIsPropertyTrackingNumberRemoved()) {
                this.setTrackingNumber(null);
            }
        } else {
            this.setTrackingNumber(e.getTrackingNumber());
        }
        if (e.getShippingInstructions() == null) {
            if (e.getIsPropertyShippingInstructionsRemoved() != null && e.getIsPropertyShippingInstructionsRemoved()) {
                this.setShippingInstructions(null);
            }
        } else {
            this.setShippingInstructions(e.getShippingInstructions());
        }
        if (e.getMaySplit() == null) {
            if (e.getIsPropertyMaySplitRemoved() != null && e.getIsPropertyMaySplitRemoved()) {
                this.setMaySplit(null);
            }
        } else {
            this.setMaySplit(e.getMaySplit());
        }
        if (e.getGiftMessage() == null) {
            if (e.getIsPropertyGiftMessageRemoved() != null && e.getIsPropertyGiftMessageRemoved()) {
                this.setGiftMessage(null);
            }
        } else {
            this.setGiftMessage(e.getGiftMessage());
        }
        if (e.getIsGift() == null) {
            if (e.getIsPropertyIsGiftRemoved() != null && e.getIsPropertyIsGiftRemoved()) {
                this.setIsGift(null);
            }
        } else {
            this.setIsGift(e.getIsGift());
        }
        if (e.getShipAfterDate() == null) {
            if (e.getIsPropertyShipAfterDateRemoved() != null && e.getIsPropertyShipAfterDateRemoved()) {
                this.setShipAfterDate(null);
            }
        } else {
            this.setShipAfterDate(e.getShipAfterDate());
        }
        if (e.getShipByDate() == null) {
            if (e.getIsPropertyShipByDateRemoved() != null && e.getIsPropertyShipByDateRemoved()) {
                this.setShipByDate(null);
            }
        } else {
            this.setShipByDate(e.getShipByDate());
        }
        if (e.getEstimatedShipDate() == null) {
            if (e.getIsPropertyEstimatedShipDateRemoved() != null && e.getIsPropertyEstimatedShipDateRemoved()) {
                this.setEstimatedShipDate(null);
            }
        } else {
            this.setEstimatedShipDate(e.getEstimatedShipDate());
        }
        if (e.getEstimatedDeliveryDate() == null) {
            if (e.getIsPropertyEstimatedDeliveryDateRemoved() != null && e.getIsPropertyEstimatedDeliveryDateRemoved()) {
                this.setEstimatedDeliveryDate(null);
            }
        } else {
            this.setEstimatedDeliveryDate(e.getEstimatedDeliveryDate());
        }
        if (e.getSupplierCurrencyUomId() == null) {
            if (e.getIsPropertySupplierCurrencyUomIdRemoved() != null && e.getIsPropertySupplierCurrencyUomIdRemoved()) {
                this.setSupplierCurrencyUomId(null);
            }
        } else {
            this.setSupplierCurrencyUomId(e.getSupplierCurrencyUomId());
        }
        if (e.getSupplierPayableAmount() == null) {
            if (e.getIsPropertySupplierPayableAmountRemoved() != null && e.getIsPropertySupplierPayableAmountRemoved()) {
                this.setSupplierPayableAmount(null);
            }
        } else {
            this.setSupplierPayableAmount(e.getSupplierPayableAmount());
        }
        if (e.getSupplierSyncStatusId() == null) {
            if (e.getIsPropertySupplierSyncStatusIdRemoved() != null && e.getIsPropertySupplierSyncStatusIdRemoved()) {
                this.setSupplierSyncStatusId(null);
            }
        } else {
            this.setSupplierSyncStatusId(e.getSupplierSyncStatusId());
        }
        if (e.getSupplierSyncCode() == null) {
            if (e.getIsPropertySupplierSyncCodeRemoved() != null && e.getIsPropertySupplierSyncCodeRemoved()) {
                this.setSupplierSyncCode(null);
            }
        } else {
            this.setSupplierSyncCode(e.getSupplierSyncCode());
        }
        if (e.getSupplierSyncMessage() == null) {
            if (e.getIsPropertySupplierSyncMessageRemoved() != null && e.getIsPropertySupplierSyncMessageRemoved()) {
                this.setSupplierSyncMessage(null);
            }
        } else {
            this.setSupplierSyncMessage(e.getSupplierSyncMessage());
        }

        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

        for (OrderItemShipGroupAssociationEvent innerEvent : e.getOrderItemShipGroupAssociationEvents()) {
            OrderItemShipGroupAssociationState innerState = ((EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState>)this.getOrderItemShipGroupAssociations()).getOrAddDefault(((OrderItemShipGroupAssociationEvent.SqlOrderItemShipGroupAssociationEvent)innerEvent).getOrderItemShipGroupAssociationEventId().getOrderItemSeqId());
            ((OrderItemShipGroupAssociationState.SqlOrderItemShipGroupAssociationState)innerState).mutate(innerEvent);
        }
    }

    public void save() {
        if (orderItemShipGroupAssociations instanceof Saveable) {
            ((Saveable)orderItemShipGroupAssociations).save();
        }
    }

    protected void throwOnWrongEvent(OrderShipGroupEvent event) {
        String stateEntityIdOrderId = this.getOrderShipGroupId().getOrderId();
        String eventEntityIdOrderId = ((OrderShipGroupEvent.SqlOrderShipGroupEvent)event).getOrderShipGroupEventId().getOrderId();
        if (!stateEntityIdOrderId.equals(eventEntityIdOrderId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id OrderId %1$s in state but entity id OrderId %2$s in event", stateEntityIdOrderId, eventEntityIdOrderId);
        }

        String stateEntityIdShipGroupSeqId = this.getOrderShipGroupId().getShipGroupSeqId();
        String eventEntityIdShipGroupSeqId = ((OrderShipGroupEvent.SqlOrderShipGroupEvent)event).getOrderShipGroupEventId().getShipGroupSeqId();
        if (!stateEntityIdShipGroupSeqId.equals(eventEntityIdShipGroupSeqId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id ShipGroupSeqId %1$s in state but entity id ShipGroupSeqId %2$s in event", stateEntityIdShipGroupSeqId, eventEntityIdShipGroupSeqId);
        }


        if (getForReapplying()) { return; }
        OrderShipGroupStateEvent stateEvent = event instanceof OrderShipGroupStateEvent ? (OrderShipGroupStateEvent)event : null;
        if (stateEvent == null) { return; }

        Long stateVersion = this.getVersion();
        Long stateEventStateVersion = stateEvent.getVersion();
        //if (stateEventStateVersion == null) {
        stateEventStateVersion = stateVersion == null ? OrderShipGroupState.VERSION_NULL : stateVersion;
        stateEvent.setVersion(stateEventStateVersion);
        //}
        //if (!(stateVersion == null && stateEventStateVersion.equals(OrderShipGroupState.VERSION_NULL)) && !stateEventStateVersion.equals(stateVersion))
        //{
        //    throw DomainError.named("concurrencyConflict", "Conflict between stateVersion (%1$s) and stateEventStateVersion (%2$s)", stateVersion, stateEventStateVersion);
        //}

    }


    public static class SimpleOrderShipGroupState extends AbstractOrderShipGroupState {

        public SimpleOrderShipGroupState() {
        }

        public static SimpleOrderShipGroupState newForReapplying() {
            SimpleOrderShipGroupState s = new SimpleOrderShipGroupState();
            s.initializeForReapplying();
            return s;
        }

    }


    class SimpleOrderItemShipGroupAssociationStateCollection implements EntityStateCollection.MutableEntityStateCollection<String, OrderItemShipGroupAssociationState>, Collection<OrderItemShipGroupAssociationState> {

        @Override
        public OrderItemShipGroupAssociationState get(String orderItemSeqId) {
            return protectedOrderItemShipGroupAssociations.stream().filter(
                            e -> e.getOrderItemSeqId().equals(orderItemSeqId))
                    .findFirst().orElse(null);
        }

        @Override
        public boolean isLazy() {
            return false;
        }

        @Override
        public boolean isAllLoaded() {
            return true;
        }

        @Override
        public Collection<OrderItemShipGroupAssociationState> getLoadedStates() {
            return protectedOrderItemShipGroupAssociations;
        }

        @Override
        public OrderItemShipGroupAssociationState getOrAddDefault(String orderItemSeqId) {
            OrderItemShipGroupAssociationState s = get(orderItemSeqId);
            if (s == null) {
                OrderItemShipGroupAssociationId globalId = new OrderItemShipGroupAssociationId(getOrderShipGroupId().getOrderId(), getOrderShipGroupId().getShipGroupSeqId(), orderItemSeqId);
                AbstractOrderItemShipGroupAssociationState state = new AbstractOrderItemShipGroupAssociationState.SimpleOrderItemShipGroupAssociationState();
                state.setOrderItemShipGroupAssociationId(globalId);
                add(state);
                s = state;
            }
            return s;
        }

        @Override
        public int size() {
            return protectedOrderItemShipGroupAssociations.size();
        }

        @Override
        public boolean isEmpty() {
            return protectedOrderItemShipGroupAssociations.isEmpty();
        }

        @Override
        public boolean contains(Object o) {
            return protectedOrderItemShipGroupAssociations.contains(o);
        }

        @Override
        public Iterator<OrderItemShipGroupAssociationState> iterator() {
            return protectedOrderItemShipGroupAssociations.iterator();
        }

        @Override
        public java.util.stream.Stream<OrderItemShipGroupAssociationState> stream() {
            return protectedOrderItemShipGroupAssociations.stream();
        }

        @Override
        public Object[] toArray() {
            return protectedOrderItemShipGroupAssociations.toArray();
        }

        @Override
        public <T> T[] toArray(T[] a) {
            return protectedOrderItemShipGroupAssociations.toArray(a);
        }

        @Override
        public boolean add(OrderItemShipGroupAssociationState s) {
            if (s instanceof AbstractOrderItemShipGroupAssociationState) {
                AbstractOrderItemShipGroupAssociationState state = (AbstractOrderItemShipGroupAssociationState) s;
                state.setProtectedOrderShipGroupState(AbstractOrderShipGroupState.this);
            }
            return protectedOrderItemShipGroupAssociations.add(s);
        }

        @Override
        public boolean remove(Object o) {
            if (o instanceof AbstractOrderItemShipGroupAssociationState) {
                AbstractOrderItemShipGroupAssociationState s = (AbstractOrderItemShipGroupAssociationState) o;
                s.setProtectedOrderShipGroupState(null);
            }
            return protectedOrderItemShipGroupAssociations.remove(o);
        }

        @Override
        public boolean removeState(OrderItemShipGroupAssociationState s) {
            return remove(s);
        }

        @Override
        public boolean containsAll(Collection<?> c) {
            return protectedOrderItemShipGroupAssociations.containsAll(c);
        }

        @Override
        public boolean addAll(Collection<? extends OrderItemShipGroupAssociationState> c) {
            return protectedOrderItemShipGroupAssociations.addAll(c);
        }

        @Override
        public boolean removeAll(Collection<?> c) {
            return protectedOrderItemShipGroupAssociations.removeAll(c);
        }

        @Override
        public boolean retainAll(Collection<?> c) {
            return protectedOrderItemShipGroupAssociations.retainAll(c);
        }

        @Override
        public void clear() {
            protectedOrderItemShipGroupAssociations.clear();
        }
    }


}

