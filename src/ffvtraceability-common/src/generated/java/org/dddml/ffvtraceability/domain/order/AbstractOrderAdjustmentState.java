// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.order;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.order.OrderAdjustmentEvent.*;

public abstract class AbstractOrderAdjustmentState implements OrderAdjustmentState.SqlOrderAdjustmentState {

    private OrderIdOrderAdjustmentIdPair orderIdOrderAdjustmentIdPair = new OrderIdOrderAdjustmentIdPair();

    public OrderIdOrderAdjustmentIdPair getOrderIdOrderAdjustmentIdPair() {
        return this.orderIdOrderAdjustmentIdPair;
    }

    public void setOrderIdOrderAdjustmentIdPair(OrderIdOrderAdjustmentIdPair orderIdOrderAdjustmentIdPair) {
        this.orderIdOrderAdjustmentIdPair = orderIdOrderAdjustmentIdPair;
    }

    private transient OrderHeaderState orderHeaderState;

    public OrderHeaderState getOrderHeaderState() {
        return orderHeaderState;
    }

    public void setOrderHeaderState(OrderHeaderState s) {
        orderHeaderState = s;
    }
    
    private OrderHeaderState protectedOrderHeaderState;

    protected OrderHeaderState getProtectedOrderHeaderState() {
        return protectedOrderHeaderState;
    }

    protected void setProtectedOrderHeaderState(OrderHeaderState protectedOrderHeaderState) {
        this.protectedOrderHeaderState = protectedOrderHeaderState;
    }

    public String getOrderId() {
        return this.getOrderIdOrderAdjustmentIdPair().getOrderId();
    }
        
    public void setOrderId(String orderId) {
        this.getOrderIdOrderAdjustmentIdPair().setOrderId(orderId);
    }

    public String getOrderAdjustmentId() {
        return this.getOrderIdOrderAdjustmentIdPair().getOrderAdjustmentId();
    }
        
    public void setOrderAdjustmentId(String orderAdjustmentId) {
        this.getOrderIdOrderAdjustmentIdPair().setOrderAdjustmentId(orderAdjustmentId);
    }

    private String orderAdjustmentTypeId;

    public String getOrderAdjustmentTypeId() {
        return this.orderAdjustmentTypeId;
    }

    public void setOrderAdjustmentTypeId(String orderAdjustmentTypeId) {
        this.orderAdjustmentTypeId = orderAdjustmentTypeId;
    }

    private String orderItemSeqId;

    public String getOrderItemSeqId() {
        return this.orderItemSeqId;
    }

    public void setOrderItemSeqId(String orderItemSeqId) {
        this.orderItemSeqId = orderItemSeqId;
    }

    private String shipGroupSeqId;

    public String getShipGroupSeqId() {
        return this.shipGroupSeqId;
    }

    public void setShipGroupSeqId(String shipGroupSeqId) {
        this.shipGroupSeqId = shipGroupSeqId;
    }

    private String comments;

    public String getComments() {
        return this.comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    private String description;

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    private java.math.BigDecimal amount;

    public java.math.BigDecimal getAmount() {
        return this.amount;
    }

    public void setAmount(java.math.BigDecimal amount) {
        this.amount = amount;
    }

    private String currencyUomId;

    public String getCurrencyUomId() {
        return this.currencyUomId;
    }

    public void setCurrencyUomId(String currencyUomId) {
        this.currencyUomId = currencyUomId;
    }

    private java.math.BigDecimal recurringAmount;

    public java.math.BigDecimal getRecurringAmount() {
        return this.recurringAmount;
    }

    public void setRecurringAmount(java.math.BigDecimal recurringAmount) {
        this.recurringAmount = recurringAmount;
    }

    private java.math.BigDecimal amountAlreadyIncluded;

    public java.math.BigDecimal getAmountAlreadyIncluded() {
        return this.amountAlreadyIncluded;
    }

    public void setAmountAlreadyIncluded(java.math.BigDecimal amountAlreadyIncluded) {
        this.amountAlreadyIncluded = amountAlreadyIncluded;
    }

    private String productPromoId;

    public String getProductPromoId() {
        return this.productPromoId;
    }

    public void setProductPromoId(String productPromoId) {
        this.productPromoId = productPromoId;
    }

    private String productPromoRuleId;

    public String getProductPromoRuleId() {
        return this.productPromoRuleId;
    }

    public void setProductPromoRuleId(String productPromoRuleId) {
        this.productPromoRuleId = productPromoRuleId;
    }

    private String productPromoActionSeqId;

    public String getProductPromoActionSeqId() {
        return this.productPromoActionSeqId;
    }

    public void setProductPromoActionSeqId(String productPromoActionSeqId) {
        this.productPromoActionSeqId = productPromoActionSeqId;
    }

    private String productFeatureId;

    public String getProductFeatureId() {
        return this.productFeatureId;
    }

    public void setProductFeatureId(String productFeatureId) {
        this.productFeatureId = productFeatureId;
    }

    private String correspondingProductId;

    public String getCorrespondingProductId() {
        return this.correspondingProductId;
    }

    public void setCorrespondingProductId(String correspondingProductId) {
        this.correspondingProductId = correspondingProductId;
    }

    private String taxAuthorityRateSeqId;

    public String getTaxAuthorityRateSeqId() {
        return this.taxAuthorityRateSeqId;
    }

    public void setTaxAuthorityRateSeqId(String taxAuthorityRateSeqId) {
        this.taxAuthorityRateSeqId = taxAuthorityRateSeqId;
    }

    private String sourceReferenceId;

    public String getSourceReferenceId() {
        return this.sourceReferenceId;
    }

    public void setSourceReferenceId(String sourceReferenceId) {
        this.sourceReferenceId = sourceReferenceId;
    }

    private java.math.BigDecimal sourcePercentage;

    public java.math.BigDecimal getSourcePercentage() {
        return this.sourcePercentage;
    }

    public void setSourcePercentage(java.math.BigDecimal sourcePercentage) {
        this.sourcePercentage = sourcePercentage;
    }

    private String customerReferenceId;

    public String getCustomerReferenceId() {
        return this.customerReferenceId;
    }

    public void setCustomerReferenceId(String customerReferenceId) {
        this.customerReferenceId = customerReferenceId;
    }

    private String primaryGeoId;

    public String getPrimaryGeoId() {
        return this.primaryGeoId;
    }

    public void setPrimaryGeoId(String primaryGeoId) {
        this.primaryGeoId = primaryGeoId;
    }

    private String secondaryGeoId;

    public String getSecondaryGeoId() {
        return this.secondaryGeoId;
    }

    public void setSecondaryGeoId(String secondaryGeoId) {
        this.secondaryGeoId = secondaryGeoId;
    }

    private java.math.BigDecimal exemptAmount;

    public java.math.BigDecimal getExemptAmount() {
        return this.exemptAmount;
    }

    public void setExemptAmount(java.math.BigDecimal exemptAmount) {
        this.exemptAmount = exemptAmount;
    }

    private String taxAuthGeoId;

    public String getTaxAuthGeoId() {
        return this.taxAuthGeoId;
    }

    public void setTaxAuthGeoId(String taxAuthGeoId) {
        this.taxAuthGeoId = taxAuthGeoId;
    }

    private String taxAuthPartyId;

    public String getTaxAuthPartyId() {
        return this.taxAuthPartyId;
    }

    public void setTaxAuthPartyId(String taxAuthPartyId) {
        this.taxAuthPartyId = taxAuthPartyId;
    }

    private String overrideGlAccountId;

    public String getOverrideGlAccountId() {
        return this.overrideGlAccountId;
    }

    public void setOverrideGlAccountId(String overrideGlAccountId) {
        this.overrideGlAccountId = overrideGlAccountId;
    }

    private String includeInTax;

    public String getIncludeInTax() {
        return this.includeInTax;
    }

    public void setIncludeInTax(String includeInTax) {
        this.includeInTax = includeInTax;
    }

    private String includeInShipping;

    public String getIncludeInShipping() {
        return this.includeInShipping;
    }

    public void setIncludeInShipping(String includeInShipping) {
        this.includeInShipping = includeInShipping;
    }

    private String isManual;

    public String getIsManual() {
        return this.isManual;
    }

    public void setIsManual(String isManual) {
        this.isManual = isManual;
    }

    private String originalAdjustmentId;

    public String getOriginalAdjustmentId() {
        return this.originalAdjustmentId;
    }

    public void setOriginalAdjustmentId(String originalAdjustmentId) {
        this.originalAdjustmentId = originalAdjustmentId;
    }

    private java.math.BigDecimal oldAmountPerQuantity;

    public java.math.BigDecimal getOldAmountPerQuantity() {
        return this.oldAmountPerQuantity;
    }

    public void setOldAmountPerQuantity(java.math.BigDecimal oldAmountPerQuantity) {
        this.oldAmountPerQuantity = oldAmountPerQuantity;
    }

    private Double oldPercentage;

    public Double getOldPercentage() {
        return this.oldPercentage;
    }

    public void setOldPercentage(Double oldPercentage) {
        this.oldPercentage = oldPercentage;
    }

    private Long version;

    public Long getVersion() {
        return this.version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public boolean isStateUnsaved() {
        return this.getVersion() == null;
    }

    private Boolean stateReadOnly;

    public Boolean getStateReadOnly() { return this.stateReadOnly; }

    public void setStateReadOnly(Boolean readOnly) { this.stateReadOnly = readOnly; }

    private boolean forReapplying;

    public boolean getForReapplying() {
        return forReapplying;
    }

    public void setForReapplying(boolean forReapplying) {
        this.forReapplying = forReapplying;
    }


    public AbstractOrderAdjustmentState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        this.forReapplying = true;

        initializeProperties();
    }
    
    protected void initializeProperties() {
    }

    @Override
    public int hashCode() {
        return getOrderAdjustmentId().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) { return true; }
        if (obj instanceof OrderAdjustmentState) {
            return Objects.equals(this.getOrderAdjustmentId(), ((OrderAdjustmentState)obj).getOrderAdjustmentId());
        }
        return false;
    }


    public void mutate(Event e) {
        setStateReadOnly(false);
        if (e instanceof OrderAdjustmentStateCreated) {
            when((OrderAdjustmentStateCreated) e);
        } else if (e instanceof OrderAdjustmentStateMergePatched) {
            when((OrderAdjustmentStateMergePatched) e);
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void when(OrderAdjustmentStateCreated e) {
        throwOnWrongEvent(e);

        this.setOrderAdjustmentTypeId(e.getOrderAdjustmentTypeId());
        this.setOrderItemSeqId(e.getOrderItemSeqId());
        this.setShipGroupSeqId(e.getShipGroupSeqId());
        this.setComments(e.getComments());
        this.setDescription(e.getDescription());
        this.setAmount(e.getAmount());
        this.setCurrencyUomId(e.getCurrencyUomId());
        this.setRecurringAmount(e.getRecurringAmount());
        this.setAmountAlreadyIncluded(e.getAmountAlreadyIncluded());
        this.setProductPromoId(e.getProductPromoId());
        this.setProductPromoRuleId(e.getProductPromoRuleId());
        this.setProductPromoActionSeqId(e.getProductPromoActionSeqId());
        this.setProductFeatureId(e.getProductFeatureId());
        this.setCorrespondingProductId(e.getCorrespondingProductId());
        this.setTaxAuthorityRateSeqId(e.getTaxAuthorityRateSeqId());
        this.setSourceReferenceId(e.getSourceReferenceId());
        this.setSourcePercentage(e.getSourcePercentage());
        this.setCustomerReferenceId(e.getCustomerReferenceId());
        this.setPrimaryGeoId(e.getPrimaryGeoId());
        this.setSecondaryGeoId(e.getSecondaryGeoId());
        this.setExemptAmount(e.getExemptAmount());
        this.setTaxAuthGeoId(e.getTaxAuthGeoId());
        this.setTaxAuthPartyId(e.getTaxAuthPartyId());
        this.setOverrideGlAccountId(e.getOverrideGlAccountId());
        this.setIncludeInTax(e.getIncludeInTax());
        this.setIncludeInShipping(e.getIncludeInShipping());
        this.setIsManual(e.getIsManual());
        this.setOriginalAdjustmentId(e.getOriginalAdjustmentId());
        this.setOldAmountPerQuantity(e.getOldAmountPerQuantity());
        this.setOldPercentage(e.getOldPercentage());

        this.setCreatedBy(e.getCreatedBy());
        this.setCreatedAt(e.getCreatedAt());

    }

    public void merge(OrderAdjustmentState s) {
        if (s == this) {
            return;
        }
        this.setOrderAdjustmentTypeId(s.getOrderAdjustmentTypeId());
        this.setOrderItemSeqId(s.getOrderItemSeqId());
        this.setShipGroupSeqId(s.getShipGroupSeqId());
        this.setComments(s.getComments());
        this.setDescription(s.getDescription());
        this.setAmount(s.getAmount());
        this.setCurrencyUomId(s.getCurrencyUomId());
        this.setRecurringAmount(s.getRecurringAmount());
        this.setAmountAlreadyIncluded(s.getAmountAlreadyIncluded());
        this.setProductPromoId(s.getProductPromoId());
        this.setProductPromoRuleId(s.getProductPromoRuleId());
        this.setProductPromoActionSeqId(s.getProductPromoActionSeqId());
        this.setProductFeatureId(s.getProductFeatureId());
        this.setCorrespondingProductId(s.getCorrespondingProductId());
        this.setTaxAuthorityRateSeqId(s.getTaxAuthorityRateSeqId());
        this.setSourceReferenceId(s.getSourceReferenceId());
        this.setSourcePercentage(s.getSourcePercentage());
        this.setCustomerReferenceId(s.getCustomerReferenceId());
        this.setPrimaryGeoId(s.getPrimaryGeoId());
        this.setSecondaryGeoId(s.getSecondaryGeoId());
        this.setExemptAmount(s.getExemptAmount());
        this.setTaxAuthGeoId(s.getTaxAuthGeoId());
        this.setTaxAuthPartyId(s.getTaxAuthPartyId());
        this.setOverrideGlAccountId(s.getOverrideGlAccountId());
        this.setIncludeInTax(s.getIncludeInTax());
        this.setIncludeInShipping(s.getIncludeInShipping());
        this.setIsManual(s.getIsManual());
        this.setOriginalAdjustmentId(s.getOriginalAdjustmentId());
        this.setOldAmountPerQuantity(s.getOldAmountPerQuantity());
        this.setOldPercentage(s.getOldPercentage());
    }

    public void when(OrderAdjustmentStateMergePatched e) {
        throwOnWrongEvent(e);

        if (e.getOrderAdjustmentTypeId() == null) {
            if (e.getIsPropertyOrderAdjustmentTypeIdRemoved() != null && e.getIsPropertyOrderAdjustmentTypeIdRemoved()) {
                this.setOrderAdjustmentTypeId(null);
            }
        } else {
            this.setOrderAdjustmentTypeId(e.getOrderAdjustmentTypeId());
        }
        if (e.getOrderItemSeqId() == null) {
            if (e.getIsPropertyOrderItemSeqIdRemoved() != null && e.getIsPropertyOrderItemSeqIdRemoved()) {
                this.setOrderItemSeqId(null);
            }
        } else {
            this.setOrderItemSeqId(e.getOrderItemSeqId());
        }
        if (e.getShipGroupSeqId() == null) {
            if (e.getIsPropertyShipGroupSeqIdRemoved() != null && e.getIsPropertyShipGroupSeqIdRemoved()) {
                this.setShipGroupSeqId(null);
            }
        } else {
            this.setShipGroupSeqId(e.getShipGroupSeqId());
        }
        if (e.getComments() == null) {
            if (e.getIsPropertyCommentsRemoved() != null && e.getIsPropertyCommentsRemoved()) {
                this.setComments(null);
            }
        } else {
            this.setComments(e.getComments());
        }
        if (e.getDescription() == null) {
            if (e.getIsPropertyDescriptionRemoved() != null && e.getIsPropertyDescriptionRemoved()) {
                this.setDescription(null);
            }
        } else {
            this.setDescription(e.getDescription());
        }
        if (e.getAmount() == null) {
            if (e.getIsPropertyAmountRemoved() != null && e.getIsPropertyAmountRemoved()) {
                this.setAmount(null);
            }
        } else {
            this.setAmount(e.getAmount());
        }
        if (e.getCurrencyUomId() == null) {
            if (e.getIsPropertyCurrencyUomIdRemoved() != null && e.getIsPropertyCurrencyUomIdRemoved()) {
                this.setCurrencyUomId(null);
            }
        } else {
            this.setCurrencyUomId(e.getCurrencyUomId());
        }
        if (e.getRecurringAmount() == null) {
            if (e.getIsPropertyRecurringAmountRemoved() != null && e.getIsPropertyRecurringAmountRemoved()) {
                this.setRecurringAmount(null);
            }
        } else {
            this.setRecurringAmount(e.getRecurringAmount());
        }
        if (e.getAmountAlreadyIncluded() == null) {
            if (e.getIsPropertyAmountAlreadyIncludedRemoved() != null && e.getIsPropertyAmountAlreadyIncludedRemoved()) {
                this.setAmountAlreadyIncluded(null);
            }
        } else {
            this.setAmountAlreadyIncluded(e.getAmountAlreadyIncluded());
        }
        if (e.getProductPromoId() == null) {
            if (e.getIsPropertyProductPromoIdRemoved() != null && e.getIsPropertyProductPromoIdRemoved()) {
                this.setProductPromoId(null);
            }
        } else {
            this.setProductPromoId(e.getProductPromoId());
        }
        if (e.getProductPromoRuleId() == null) {
            if (e.getIsPropertyProductPromoRuleIdRemoved() != null && e.getIsPropertyProductPromoRuleIdRemoved()) {
                this.setProductPromoRuleId(null);
            }
        } else {
            this.setProductPromoRuleId(e.getProductPromoRuleId());
        }
        if (e.getProductPromoActionSeqId() == null) {
            if (e.getIsPropertyProductPromoActionSeqIdRemoved() != null && e.getIsPropertyProductPromoActionSeqIdRemoved()) {
                this.setProductPromoActionSeqId(null);
            }
        } else {
            this.setProductPromoActionSeqId(e.getProductPromoActionSeqId());
        }
        if (e.getProductFeatureId() == null) {
            if (e.getIsPropertyProductFeatureIdRemoved() != null && e.getIsPropertyProductFeatureIdRemoved()) {
                this.setProductFeatureId(null);
            }
        } else {
            this.setProductFeatureId(e.getProductFeatureId());
        }
        if (e.getCorrespondingProductId() == null) {
            if (e.getIsPropertyCorrespondingProductIdRemoved() != null && e.getIsPropertyCorrespondingProductIdRemoved()) {
                this.setCorrespondingProductId(null);
            }
        } else {
            this.setCorrespondingProductId(e.getCorrespondingProductId());
        }
        if (e.getTaxAuthorityRateSeqId() == null) {
            if (e.getIsPropertyTaxAuthorityRateSeqIdRemoved() != null && e.getIsPropertyTaxAuthorityRateSeqIdRemoved()) {
                this.setTaxAuthorityRateSeqId(null);
            }
        } else {
            this.setTaxAuthorityRateSeqId(e.getTaxAuthorityRateSeqId());
        }
        if (e.getSourceReferenceId() == null) {
            if (e.getIsPropertySourceReferenceIdRemoved() != null && e.getIsPropertySourceReferenceIdRemoved()) {
                this.setSourceReferenceId(null);
            }
        } else {
            this.setSourceReferenceId(e.getSourceReferenceId());
        }
        if (e.getSourcePercentage() == null) {
            if (e.getIsPropertySourcePercentageRemoved() != null && e.getIsPropertySourcePercentageRemoved()) {
                this.setSourcePercentage(null);
            }
        } else {
            this.setSourcePercentage(e.getSourcePercentage());
        }
        if (e.getCustomerReferenceId() == null) {
            if (e.getIsPropertyCustomerReferenceIdRemoved() != null && e.getIsPropertyCustomerReferenceIdRemoved()) {
                this.setCustomerReferenceId(null);
            }
        } else {
            this.setCustomerReferenceId(e.getCustomerReferenceId());
        }
        if (e.getPrimaryGeoId() == null) {
            if (e.getIsPropertyPrimaryGeoIdRemoved() != null && e.getIsPropertyPrimaryGeoIdRemoved()) {
                this.setPrimaryGeoId(null);
            }
        } else {
            this.setPrimaryGeoId(e.getPrimaryGeoId());
        }
        if (e.getSecondaryGeoId() == null) {
            if (e.getIsPropertySecondaryGeoIdRemoved() != null && e.getIsPropertySecondaryGeoIdRemoved()) {
                this.setSecondaryGeoId(null);
            }
        } else {
            this.setSecondaryGeoId(e.getSecondaryGeoId());
        }
        if (e.getExemptAmount() == null) {
            if (e.getIsPropertyExemptAmountRemoved() != null && e.getIsPropertyExemptAmountRemoved()) {
                this.setExemptAmount(null);
            }
        } else {
            this.setExemptAmount(e.getExemptAmount());
        }
        if (e.getTaxAuthGeoId() == null) {
            if (e.getIsPropertyTaxAuthGeoIdRemoved() != null && e.getIsPropertyTaxAuthGeoIdRemoved()) {
                this.setTaxAuthGeoId(null);
            }
        } else {
            this.setTaxAuthGeoId(e.getTaxAuthGeoId());
        }
        if (e.getTaxAuthPartyId() == null) {
            if (e.getIsPropertyTaxAuthPartyIdRemoved() != null && e.getIsPropertyTaxAuthPartyIdRemoved()) {
                this.setTaxAuthPartyId(null);
            }
        } else {
            this.setTaxAuthPartyId(e.getTaxAuthPartyId());
        }
        if (e.getOverrideGlAccountId() == null) {
            if (e.getIsPropertyOverrideGlAccountIdRemoved() != null && e.getIsPropertyOverrideGlAccountIdRemoved()) {
                this.setOverrideGlAccountId(null);
            }
        } else {
            this.setOverrideGlAccountId(e.getOverrideGlAccountId());
        }
        if (e.getIncludeInTax() == null) {
            if (e.getIsPropertyIncludeInTaxRemoved() != null && e.getIsPropertyIncludeInTaxRemoved()) {
                this.setIncludeInTax(null);
            }
        } else {
            this.setIncludeInTax(e.getIncludeInTax());
        }
        if (e.getIncludeInShipping() == null) {
            if (e.getIsPropertyIncludeInShippingRemoved() != null && e.getIsPropertyIncludeInShippingRemoved()) {
                this.setIncludeInShipping(null);
            }
        } else {
            this.setIncludeInShipping(e.getIncludeInShipping());
        }
        if (e.getIsManual() == null) {
            if (e.getIsPropertyIsManualRemoved() != null && e.getIsPropertyIsManualRemoved()) {
                this.setIsManual(null);
            }
        } else {
            this.setIsManual(e.getIsManual());
        }
        if (e.getOriginalAdjustmentId() == null) {
            if (e.getIsPropertyOriginalAdjustmentIdRemoved() != null && e.getIsPropertyOriginalAdjustmentIdRemoved()) {
                this.setOriginalAdjustmentId(null);
            }
        } else {
            this.setOriginalAdjustmentId(e.getOriginalAdjustmentId());
        }
        if (e.getOldAmountPerQuantity() == null) {
            if (e.getIsPropertyOldAmountPerQuantityRemoved() != null && e.getIsPropertyOldAmountPerQuantityRemoved()) {
                this.setOldAmountPerQuantity(null);
            }
        } else {
            this.setOldAmountPerQuantity(e.getOldAmountPerQuantity());
        }
        if (e.getOldPercentage() == null) {
            if (e.getIsPropertyOldPercentageRemoved() != null && e.getIsPropertyOldPercentageRemoved()) {
                this.setOldPercentage(null);
            }
        } else {
            this.setOldPercentage(e.getOldPercentage());
        }

        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

    }

    public void save() {
    }

    protected void throwOnWrongEvent(OrderAdjustmentEvent event) {
        String stateEntityIdOrderId = this.getOrderIdOrderAdjustmentIdPair().getOrderId();
        String eventEntityIdOrderId = ((OrderAdjustmentEvent.SqlOrderAdjustmentEvent)event).getOrderAdjustmentEventId().getOrderId();
        if (!stateEntityIdOrderId.equals(eventEntityIdOrderId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id OrderId %1$s in state but entity id OrderId %2$s in event", stateEntityIdOrderId, eventEntityIdOrderId);
        }

        String stateEntityIdOrderAdjustmentId = this.getOrderIdOrderAdjustmentIdPair().getOrderAdjustmentId();
        String eventEntityIdOrderAdjustmentId = ((OrderAdjustmentEvent.SqlOrderAdjustmentEvent)event).getOrderAdjustmentEventId().getOrderAdjustmentId();
        if (!stateEntityIdOrderAdjustmentId.equals(eventEntityIdOrderAdjustmentId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id OrderAdjustmentId %1$s in state but entity id OrderAdjustmentId %2$s in event", stateEntityIdOrderAdjustmentId, eventEntityIdOrderAdjustmentId);
        }


        if (getForReapplying()) { return; }
        OrderAdjustmentStateEvent stateEvent = event instanceof OrderAdjustmentStateEvent ? (OrderAdjustmentStateEvent)event : null;
        if (stateEvent == null) { return; }

        Long stateVersion = this.getVersion();
        Long stateEventStateVersion = stateEvent.getVersion();
        //if (stateEventStateVersion == null) {
        stateEventStateVersion = stateVersion == null ? OrderAdjustmentState.VERSION_NULL : stateVersion;
        stateEvent.setVersion(stateEventStateVersion);
        //}
        //if (!(stateVersion == null && stateEventStateVersion.equals(OrderAdjustmentState.VERSION_NULL)) && !stateEventStateVersion.equals(stateVersion))
        //{
        //    throw DomainError.named("concurrencyConflict", "Conflict between stateVersion (%1$s) and stateEventStateVersion (%2$s)", stateVersion, stateEventStateVersion);
        //}

    }


    public static class SimpleOrderAdjustmentState extends AbstractOrderAdjustmentState {

        public SimpleOrderAdjustmentState() {
        }

        public static SimpleOrderAdjustmentState newForReapplying() {
            SimpleOrderAdjustmentState s = new SimpleOrderAdjustmentState();
            s.initializeForReapplying();
            return s;
        }

    }



}

