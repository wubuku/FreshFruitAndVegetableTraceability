// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.party;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractPartyIdentificationEvent extends AbstractEvent implements PartyIdentificationEvent.SqlPartyIdentificationEvent {
    private PartyIdentificationEventId partyIdentificationEventId = new PartyIdentificationEventId();

    public PartyIdentificationEventId getPartyIdentificationEventId() {
        return this.partyIdentificationEventId;
    }

    public void setPartyIdentificationEventId(PartyIdentificationEventId eventId) {
        this.partyIdentificationEventId = eventId;
    }
    
    public String getPartyIdentificationTypeId() {
        return getPartyIdentificationEventId().getPartyIdentificationTypeId();
    }

    public void setPartyIdentificationTypeId(String partyIdentificationTypeId) {
        getPartyIdentificationEventId().setPartyIdentificationTypeId(partyIdentificationTypeId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    protected AbstractPartyIdentificationEvent() {
    }

    protected AbstractPartyIdentificationEvent(PartyIdentificationEventId eventId) {
        this.partyIdentificationEventId = eventId;
    }


    public abstract String getEventType();


    public static abstract class AbstractPartyIdentificationStateEvent extends AbstractPartyIdentificationEvent implements PartyIdentificationEvent.PartyIdentificationStateEvent {
        private Long version;

        public Long getVersion()
        {
            return this.version;
        }

        public void setVersion(Long version)
        {
            this.version = version;
        }

        private String idValue;

        public String getIdValue()
        {
            return this.idValue;
        }

        public void setIdValue(String idValue)
        {
            this.idValue = idValue;
        }

        private String verified;

        public String getVerified()
        {
            return this.verified;
        }

        public void setVerified(String verified)
        {
            this.verified = verified;
        }

        protected AbstractPartyIdentificationStateEvent(PartyIdentificationEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractPartyIdentificationStateCreated extends AbstractPartyIdentificationStateEvent implements PartyIdentificationEvent.PartyIdentificationStateCreated
    {
        public AbstractPartyIdentificationStateCreated() {
            this(new PartyIdentificationEventId());
        }

        public AbstractPartyIdentificationStateCreated(PartyIdentificationEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractPartyIdentificationStateMergePatched extends AbstractPartyIdentificationStateEvent implements PartyIdentificationEvent.PartyIdentificationStateMergePatched
    {
        public AbstractPartyIdentificationStateMergePatched() {
            this(new PartyIdentificationEventId());
        }

        public AbstractPartyIdentificationStateMergePatched(PartyIdentificationEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyIdValueRemoved;

        public Boolean getIsPropertyIdValueRemoved() {
            return this.isPropertyIdValueRemoved;
        }

        public void setIsPropertyIdValueRemoved(Boolean removed) {
            this.isPropertyIdValueRemoved = removed;
        }

        private Boolean isPropertyVerifiedRemoved;

        public Boolean getIsPropertyVerifiedRemoved() {
            return this.isPropertyVerifiedRemoved;
        }

        public void setIsPropertyVerifiedRemoved(Boolean removed) {
            this.isPropertyVerifiedRemoved = removed;
        }


    }


    public static abstract class AbstractPartyIdentificationStateRemoved extends AbstractPartyIdentificationEvent.AbstractPartyIdentificationStateEvent implements PartyIdentificationEvent.PartyIdentificationStateRemoved
    {
        public AbstractPartyIdentificationStateRemoved() {
            this(new PartyIdentificationEventId());
        }

        public AbstractPartyIdentificationStateRemoved(PartyIdentificationEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.REMOVED;
        }

    }


    public static class SimplePartyIdentificationStateCreated extends AbstractPartyIdentificationStateCreated
    {
        public SimplePartyIdentificationStateCreated() {
        }

        public SimplePartyIdentificationStateCreated(PartyIdentificationEventId eventId) {
            super(eventId);
        }
    }

    public static class SimplePartyIdentificationStateMergePatched extends AbstractPartyIdentificationStateMergePatched
    {
        public SimplePartyIdentificationStateMergePatched() {
        }

        public SimplePartyIdentificationStateMergePatched(PartyIdentificationEventId eventId) {
            super(eventId);
        }
    }

    public static class SimplePartyIdentificationStateRemoved extends AbstractPartyIdentificationStateRemoved
    {
        public SimplePartyIdentificationStateRemoved() {
        }

        public SimplePartyIdentificationStateRemoved(PartyIdentificationEventId eventId) {
            super(eventId);
        }
    }
}

