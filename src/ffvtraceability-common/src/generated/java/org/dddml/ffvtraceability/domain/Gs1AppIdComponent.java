// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain;

import java.io.Serializable;
import org.dddml.ffvtraceability.domain.*;

public class Gs1AppIdComponent implements Serializable {
    private Boolean optional;

    public Boolean getOptional()
    {
        return this.optional;
    }

    public void setOptional(Boolean optional)
    {
        this.optional = optional;
    }

    private String type;

    public String getType()
    {
        return this.type;
    }

    public void setType(String type)
    {
        this.type = type;
    }

    private Boolean fixedLength;

    public Boolean getFixedLength()
    {
        return this.fixedLength;
    }

    public void setFixedLength(Boolean fixedLength)
    {
        this.fixedLength = fixedLength;
    }

    private Integer length;

    public Integer getLength()
    {
        return this.length;
    }

    public void setLength(Integer length)
    {
        this.length = length;
    }

    private Boolean checkDigit;

    public Boolean getCheckDigit()
    {
        return this.checkDigit;
    }

    public void setCheckDigit(Boolean checkDigit)
    {
        this.checkDigit = checkDigit;
    }

    private Boolean key;

    public Boolean getKey()
    {
        return this.key;
    }

    public void setKey(Boolean key)
    {
        this.key = key;
    }

    private String format;

    public String getFormat()
    {
        return this.format;
    }

    public void setFormat(String format)
    {
        this.format = format;
    }

    private Boolean checkCharacters;

    public Boolean getCheckCharacters()
    {
        return this.checkCharacters;
    }

    public void setCheckCharacters(Boolean checkCharacters)
    {
        this.checkCharacters = checkCharacters;
    }

    public Gs1AppIdComponent()
    {
    }

    public Gs1AppIdComponent(Boolean optional, String type, Boolean fixedLength, Integer length, Boolean checkDigit, Boolean key, String format, Boolean checkCharacters)
    {
        this.optional = optional;
        this.type = type;
        this.fixedLength = fixedLength;
        this.length = length;
        this.checkDigit = checkDigit;
        this.key = key;
        this.format = format;
        this.checkCharacters = checkCharacters;
    }

    @Override
    public boolean equals(Object obj)
    {
        if (obj == this) {
            return true;
        }
        if (obj == null || obj.getClass() != this.getClass()) {
            return false;
        }

        Gs1AppIdComponent other = (Gs1AppIdComponent)obj;
        return true 
            && (optional == other.optional || (optional != null && optional.equals(other.optional)))
            && (type == other.type || (type != null && type.equals(other.type)))
            && (fixedLength == other.fixedLength || (fixedLength != null && fixedLength.equals(other.fixedLength)))
            && (length == other.length || (length != null && length.equals(other.length)))
            && (checkDigit == other.checkDigit || (checkDigit != null && checkDigit.equals(other.checkDigit)))
            && (key == other.key || (key != null && key.equals(other.key)))
            && (format == other.format || (format != null && format.equals(other.format)))
            && (checkCharacters == other.checkCharacters || (checkCharacters != null && checkCharacters.equals(other.checkCharacters)))
            ;
    }

    @Override
    public int hashCode()
    {
        int hash = 0;
        if (this.optional != null) {
            hash += 13 * this.optional.hashCode();
        }
        if (this.type != null) {
            hash += 13 * this.type.hashCode();
        }
        if (this.fixedLength != null) {
            hash += 13 * this.fixedLength.hashCode();
        }
        if (this.length != null) {
            hash += 13 * this.length.hashCode();
        }
        if (this.checkDigit != null) {
            hash += 13 * this.checkDigit.hashCode();
        }
        if (this.key != null) {
            hash += 13 * this.key.hashCode();
        }
        if (this.format != null) {
            hash += 13 * this.format.hashCode();
        }
        if (this.checkCharacters != null) {
            hash += 13 * this.checkCharacters.hashCode();
        }
        return hash;
    }

    @Override
    public String toString() {
        return "Gs1AppIdComponent{" +
                "optional=" + optional +
                ", type=" + '\'' + type + '\'' +
                ", fixedLength=" + fixedLength +
                ", length=" + length +
                ", checkDigit=" + checkDigit +
                ", key=" + key +
                ", format=" + '\'' + format + '\'' +
                ", checkCharacters=" + checkCharacters +
                '}';
    }


}

