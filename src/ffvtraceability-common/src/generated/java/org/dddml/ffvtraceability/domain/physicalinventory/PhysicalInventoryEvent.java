// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.physicalinventory;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;

public interface PhysicalInventoryEvent extends Event {

    interface SqlPhysicalInventoryEvent extends PhysicalInventoryEvent {
        PhysicalInventoryEventId getPhysicalInventoryEventId();

        boolean getEventReadOnly();

        void setEventReadOnly(boolean readOnly);
    }

    String getPhysicalInventoryId();

    //void setPhysicalInventoryId(String physicalInventoryId);

    Long getVersion();
    
    //void setVersion(Long version);

    String getCreatedBy();

    void setCreatedBy(String createdBy);

    OffsetDateTime getCreatedAt();

    void setCreatedAt(OffsetDateTime createdAt);

    String getCommandId();

    void setCommandId(String commandId);

    String getTenantId();

    void setTenantId(String tenantId);

    interface PhysicalInventoryStateEvent extends PhysicalInventoryEvent {
        OffsetDateTime getPhysicalInventoryDate();

        void setPhysicalInventoryDate(OffsetDateTime physicalInventoryDate);

        String getPartyId();

        void setPartyId(String partyId);

        String getGeneralComments();

        void setGeneralComments(String generalComments);

    }

    interface PhysicalInventoryStateCreated extends PhysicalInventoryStateEvent
    {
        Iterable<InventoryItemVarianceEvent.InventoryItemVarianceStateCreated> getInventoryItemVarianceEvents();
        
        void addInventoryItemVarianceEvent(InventoryItemVarianceEvent.InventoryItemVarianceStateCreated e);

        InventoryItemVarianceEvent.InventoryItemVarianceStateCreated newInventoryItemVarianceStateCreated(String inventoryItemId);

    
    }


    interface PhysicalInventoryStateMergePatched extends PhysicalInventoryStateEvent
    {
        Boolean getIsPropertyPhysicalInventoryDateRemoved();

        void setIsPropertyPhysicalInventoryDateRemoved(Boolean removed);

        Boolean getIsPropertyPartyIdRemoved();

        void setIsPropertyPartyIdRemoved(Boolean removed);

        Boolean getIsPropertyGeneralCommentsRemoved();

        void setIsPropertyGeneralCommentsRemoved(Boolean removed);


        Iterable<InventoryItemVarianceEvent> getInventoryItemVarianceEvents();
        
        void addInventoryItemVarianceEvent(InventoryItemVarianceEvent e);

        InventoryItemVarianceEvent.InventoryItemVarianceStateCreated newInventoryItemVarianceStateCreated(String inventoryItemId);

        InventoryItemVarianceEvent.InventoryItemVarianceStateMergePatched newInventoryItemVarianceStateMergePatched(String inventoryItemId);


    }


}

