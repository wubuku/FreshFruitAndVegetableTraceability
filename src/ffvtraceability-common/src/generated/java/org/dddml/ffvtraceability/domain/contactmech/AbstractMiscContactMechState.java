// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.contactmech;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.contactmech.MiscContactMechEvent.*;

public abstract class AbstractMiscContactMechState extends AbstractContactMechState implements MiscContactMechState.SqlMiscContactMechState {

    private String email;

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    private String askForRole;

    public String getAskForRole() {
        return this.askForRole;
    }

    public void setAskForRole(String askForRole) {
        this.askForRole = askForRole;
    }

    public AbstractMiscContactMechState(List<Event> events) {
        initializeForReapplying();
        if (events != null && events.size() > 0) {
            this.setContactMechId(((ContactMechEvent.SqlContactMechEvent) events.get(0)).getContactMechEventId().getContactMechId());
            for (Event e : events) {
                mutate(e);
                this.setVersion((this.getVersion() == null ? ContactMechState.VERSION_NULL : this.getVersion()) + 1);
            }
        }
    }


    public AbstractMiscContactMechState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        super.setForReapplying(true);

        initializeProperties();
    }
    
    protected void initializeProperties() {
        super.initializeProperties();
    }

    public void mutate(Event e) {
        setStateReadOnly(false);
        if (e instanceof MiscContactMechStateCreated) {
            when((MiscContactMechStateCreated) e);
        } else if (e instanceof MiscContactMechStateMergePatched) {
            when((MiscContactMechStateMergePatched) e);
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void when(MiscContactMechStateCreated e) {
        throwOnWrongEvent(e);

        this.setContactMechTypeId(e.getContactMechTypeId());
        this.setInfoString(e.getInfoString());
        this.setAskForName(e.getAskForName());
        this.setEmail(e.getEmail());
        this.setAskForRole(e.getAskForRole());

        this.setCreatedBy(e.getCreatedBy());
        this.setCreatedAt(e.getCreatedAt());

    }

    @Override
    public void merge(ContactMechState s) {
        merge((MiscContactMechState)s);
    }

    public void merge(MiscContactMechState s) {
        if (s == this) {
            return;
        }
        this.setContactMechTypeId(s.getContactMechTypeId());
        this.setInfoString(s.getInfoString());
        this.setAskForName(s.getAskForName());
        this.setEmail(s.getEmail());
        this.setAskForRole(s.getAskForRole());
    }

    public void when(MiscContactMechStateMergePatched e) {
        throwOnWrongEvent(e);

        if (e.getContactMechTypeId() == null) {
            if (e.getIsPropertyContactMechTypeIdRemoved() != null && e.getIsPropertyContactMechTypeIdRemoved()) {
                this.setContactMechTypeId(null);
            }
        } else {
            this.setContactMechTypeId(e.getContactMechTypeId());
        }
        if (e.getInfoString() == null) {
            if (e.getIsPropertyInfoStringRemoved() != null && e.getIsPropertyInfoStringRemoved()) {
                this.setInfoString(null);
            }
        } else {
            this.setInfoString(e.getInfoString());
        }
        if (e.getAskForName() == null) {
            if (e.getIsPropertyAskForNameRemoved() != null && e.getIsPropertyAskForNameRemoved()) {
                this.setAskForName(null);
            }
        } else {
            this.setAskForName(e.getAskForName());
        }
        if (e.getEmail() == null) {
            if (e.getIsPropertyEmailRemoved() != null && e.getIsPropertyEmailRemoved()) {
                this.setEmail(null);
            }
        } else {
            this.setEmail(e.getEmail());
        }
        if (e.getAskForRole() == null) {
            if (e.getIsPropertyAskForRoleRemoved() != null && e.getIsPropertyAskForRoleRemoved()) {
                this.setAskForRole(null);
            }
        } else {
            this.setAskForRole(e.getAskForRole());
        }

        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

    }

    public void save() {
       super.save();
    }


    public static class SimpleMiscContactMechState extends AbstractMiscContactMechState {

        public SimpleMiscContactMechState() {
        }

        public SimpleMiscContactMechState(List<Event> events) {
            super(events);
        }

        public static SimpleMiscContactMechState newForReapplying() {
            SimpleMiscContactMechState s = new SimpleMiscContactMechState();
            s.initializeForReapplying();
            return s;
        }

    }



}

