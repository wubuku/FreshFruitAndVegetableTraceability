// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.contactmech;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.contactmech.MiscContactMechEvent.*;

public abstract class AbstractMiscContactMechState extends AbstractContactMechState implements MiscContactMechState.SqlMiscContactMechState {

    private String email;

    public String getEmail() {
        return this.email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    private String askForRole;

    public String getAskForRole() {
        return this.askForRole;
    }

    public void setAskForRole(String askForRole) {
        this.askForRole = askForRole;
    }

    private String telecomCountryCode;

    public String getTelecomCountryCode() {
        return this.telecomCountryCode;
    }

    public void setTelecomCountryCode(String telecomCountryCode) {
        this.telecomCountryCode = telecomCountryCode;
    }

    private String telecomAreaCode;

    public String getTelecomAreaCode() {
        return this.telecomAreaCode;
    }

    public void setTelecomAreaCode(String telecomAreaCode) {
        this.telecomAreaCode = telecomAreaCode;
    }

    private String telecomContactNumber;

    public String getTelecomContactNumber() {
        return this.telecomContactNumber;
    }

    public void setTelecomContactNumber(String telecomContactNumber) {
        this.telecomContactNumber = telecomContactNumber;
    }

    private String physicalLocationAddress;

    public String getPhysicalLocationAddress() {
        return this.physicalLocationAddress;
    }

    public void setPhysicalLocationAddress(String physicalLocationAddress) {
        this.physicalLocationAddress = physicalLocationAddress;
    }

    public AbstractMiscContactMechState(List<Event> events) {
        initializeForReapplying();
        if (events != null && events.size() > 0) {
            this.setContactMechId(((ContactMechEvent.SqlContactMechEvent) events.get(0)).getContactMechEventId().getContactMechId());
            for (Event e : events) {
                mutate(e);
                this.setVersion((this.getVersion() == null ? ContactMechState.VERSION_NULL : this.getVersion()) + 1);
            }
        }
    }


    public AbstractMiscContactMechState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        super.setForReapplying(true);

        initializeProperties();
    }
    
    protected void initializeProperties() {
        super.initializeProperties();
    }

    public void mutate(Event e) {
        setStateReadOnly(false);
        if (e instanceof MiscContactMechStateCreated) {
            when((MiscContactMechStateCreated) e);
        } else if (e instanceof MiscContactMechStateMergePatched) {
            when((MiscContactMechStateMergePatched) e);
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void when(MiscContactMechStateCreated e) {
        throwOnWrongEvent(e);

        this.setContactMechTypeId(e.getContactMechTypeId());
        this.setInfoString(e.getInfoString());
        this.setAskForName(e.getAskForName());
        this.setAddress1(e.getAddress1());
        this.setAddress2(e.getAddress2());
        this.setDirections(e.getDirections());
        this.setCity(e.getCity());
        this.setPostalCode(e.getPostalCode());
        this.setPostalCodeExt(e.getPostalCodeExt());
        this.setCountryGeoId(e.getCountryGeoId());
        this.setStateProvinceGeoId(e.getStateProvinceGeoId());
        this.setPostalCodeGeoId(e.getPostalCodeGeoId());
        this.setGeoPointId(e.getGeoPointId());
        this.setEmail(e.getEmail());
        this.setAskForRole(e.getAskForRole());
        this.setTelecomCountryCode(e.getTelecomCountryCode());
        this.setTelecomAreaCode(e.getTelecomAreaCode());
        this.setTelecomContactNumber(e.getTelecomContactNumber());
        this.setPhysicalLocationAddress(e.getPhysicalLocationAddress());

        this.setCreatedBy(e.getCreatedBy());
        this.setCreatedAt(e.getCreatedAt());

    }

    @Override
    public void merge(ContactMechState s) {
        merge((MiscContactMechState)s);
    }

    public void merge(MiscContactMechState s) {
        if (s == this) {
            return;
        }
        this.setContactMechTypeId(s.getContactMechTypeId());
        this.setInfoString(s.getInfoString());
        this.setAskForName(s.getAskForName());
        this.setAddress1(s.getAddress1());
        this.setAddress2(s.getAddress2());
        this.setDirections(s.getDirections());
        this.setCity(s.getCity());
        this.setPostalCode(s.getPostalCode());
        this.setPostalCodeExt(s.getPostalCodeExt());
        this.setCountryGeoId(s.getCountryGeoId());
        this.setStateProvinceGeoId(s.getStateProvinceGeoId());
        this.setPostalCodeGeoId(s.getPostalCodeGeoId());
        this.setGeoPointId(s.getGeoPointId());
        this.setEmail(s.getEmail());
        this.setAskForRole(s.getAskForRole());
        this.setTelecomCountryCode(s.getTelecomCountryCode());
        this.setTelecomAreaCode(s.getTelecomAreaCode());
        this.setTelecomContactNumber(s.getTelecomContactNumber());
        this.setPhysicalLocationAddress(s.getPhysicalLocationAddress());
    }

    public void when(MiscContactMechStateMergePatched e) {
        throwOnWrongEvent(e);

        if (e.getContactMechTypeId() == null) {
            if (e.getIsPropertyContactMechTypeIdRemoved() != null && e.getIsPropertyContactMechTypeIdRemoved()) {
                this.setContactMechTypeId(null);
            }
        } else {
            this.setContactMechTypeId(e.getContactMechTypeId());
        }
        if (e.getInfoString() == null) {
            if (e.getIsPropertyInfoStringRemoved() != null && e.getIsPropertyInfoStringRemoved()) {
                this.setInfoString(null);
            }
        } else {
            this.setInfoString(e.getInfoString());
        }
        if (e.getAskForName() == null) {
            if (e.getIsPropertyAskForNameRemoved() != null && e.getIsPropertyAskForNameRemoved()) {
                this.setAskForName(null);
            }
        } else {
            this.setAskForName(e.getAskForName());
        }
        if (e.getAddress1() == null) {
            if (e.getIsPropertyAddress1Removed() != null && e.getIsPropertyAddress1Removed()) {
                this.setAddress1(null);
            }
        } else {
            this.setAddress1(e.getAddress1());
        }
        if (e.getAddress2() == null) {
            if (e.getIsPropertyAddress2Removed() != null && e.getIsPropertyAddress2Removed()) {
                this.setAddress2(null);
            }
        } else {
            this.setAddress2(e.getAddress2());
        }
        if (e.getDirections() == null) {
            if (e.getIsPropertyDirectionsRemoved() != null && e.getIsPropertyDirectionsRemoved()) {
                this.setDirections(null);
            }
        } else {
            this.setDirections(e.getDirections());
        }
        if (e.getCity() == null) {
            if (e.getIsPropertyCityRemoved() != null && e.getIsPropertyCityRemoved()) {
                this.setCity(null);
            }
        } else {
            this.setCity(e.getCity());
        }
        if (e.getPostalCode() == null) {
            if (e.getIsPropertyPostalCodeRemoved() != null && e.getIsPropertyPostalCodeRemoved()) {
                this.setPostalCode(null);
            }
        } else {
            this.setPostalCode(e.getPostalCode());
        }
        if (e.getPostalCodeExt() == null) {
            if (e.getIsPropertyPostalCodeExtRemoved() != null && e.getIsPropertyPostalCodeExtRemoved()) {
                this.setPostalCodeExt(null);
            }
        } else {
            this.setPostalCodeExt(e.getPostalCodeExt());
        }
        if (e.getCountryGeoId() == null) {
            if (e.getIsPropertyCountryGeoIdRemoved() != null && e.getIsPropertyCountryGeoIdRemoved()) {
                this.setCountryGeoId(null);
            }
        } else {
            this.setCountryGeoId(e.getCountryGeoId());
        }
        if (e.getStateProvinceGeoId() == null) {
            if (e.getIsPropertyStateProvinceGeoIdRemoved() != null && e.getIsPropertyStateProvinceGeoIdRemoved()) {
                this.setStateProvinceGeoId(null);
            }
        } else {
            this.setStateProvinceGeoId(e.getStateProvinceGeoId());
        }
        if (e.getPostalCodeGeoId() == null) {
            if (e.getIsPropertyPostalCodeGeoIdRemoved() != null && e.getIsPropertyPostalCodeGeoIdRemoved()) {
                this.setPostalCodeGeoId(null);
            }
        } else {
            this.setPostalCodeGeoId(e.getPostalCodeGeoId());
        }
        if (e.getGeoPointId() == null) {
            if (e.getIsPropertyGeoPointIdRemoved() != null && e.getIsPropertyGeoPointIdRemoved()) {
                this.setGeoPointId(null);
            }
        } else {
            this.setGeoPointId(e.getGeoPointId());
        }
        if (e.getEmail() == null) {
            if (e.getIsPropertyEmailRemoved() != null && e.getIsPropertyEmailRemoved()) {
                this.setEmail(null);
            }
        } else {
            this.setEmail(e.getEmail());
        }
        if (e.getAskForRole() == null) {
            if (e.getIsPropertyAskForRoleRemoved() != null && e.getIsPropertyAskForRoleRemoved()) {
                this.setAskForRole(null);
            }
        } else {
            this.setAskForRole(e.getAskForRole());
        }
        if (e.getTelecomCountryCode() == null) {
            if (e.getIsPropertyTelecomCountryCodeRemoved() != null && e.getIsPropertyTelecomCountryCodeRemoved()) {
                this.setTelecomCountryCode(null);
            }
        } else {
            this.setTelecomCountryCode(e.getTelecomCountryCode());
        }
        if (e.getTelecomAreaCode() == null) {
            if (e.getIsPropertyTelecomAreaCodeRemoved() != null && e.getIsPropertyTelecomAreaCodeRemoved()) {
                this.setTelecomAreaCode(null);
            }
        } else {
            this.setTelecomAreaCode(e.getTelecomAreaCode());
        }
        if (e.getTelecomContactNumber() == null) {
            if (e.getIsPropertyTelecomContactNumberRemoved() != null && e.getIsPropertyTelecomContactNumberRemoved()) {
                this.setTelecomContactNumber(null);
            }
        } else {
            this.setTelecomContactNumber(e.getTelecomContactNumber());
        }
        if (e.getPhysicalLocationAddress() == null) {
            if (e.getIsPropertyPhysicalLocationAddressRemoved() != null && e.getIsPropertyPhysicalLocationAddressRemoved()) {
                this.setPhysicalLocationAddress(null);
            }
        } else {
            this.setPhysicalLocationAddress(e.getPhysicalLocationAddress());
        }

        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

    }

    public void save() {
       super.save();
    }


    public static class SimpleMiscContactMechState extends AbstractMiscContactMechState {

        public SimpleMiscContactMechState() {
        }

        public SimpleMiscContactMechState(List<Event> events) {
            super(events);
        }

        public static SimpleMiscContactMechState newForReapplying() {
            SimpleMiscContactMechState s = new SimpleMiscContactMechState();
            s.initializeForReapplying();
            return s;
        }

    }



}

