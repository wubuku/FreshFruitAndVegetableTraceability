// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.contactmech;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class PostalAddressStateDto extends ContactMechStateDto {


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public PostalAddressStateDto[] toPostalAddressStateDtoArray(Iterable<ContactMechState> states) {
            return toPostalAddressStateDtoList(states).toArray(new PostalAddressStateDto[0]);
        }

        public List<PostalAddressStateDto> toPostalAddressStateDtoList(Iterable<ContactMechState> states) {
            ArrayList<PostalAddressStateDto> stateDtos = new ArrayList();
            for (ContactMechState s : states) {
                PostalAddressStateDto dto = toPostalAddressStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public PostalAddressStateDto toPostalAddressStateDto(ContactMechState state)
        {
            if(state == null) {
                return null;
            }
            PostalAddressStateDto dto = new PostalAddressStateDto();
            if (returnedFieldsContains("ContactMechId")) {
                dto.setContactMechId(state.getContactMechId());
            }
            if (returnedFieldsContains("ContactMechTypeId")) {
                dto.setContactMechTypeId(state.getContactMechTypeId());
            }
            if (returnedFieldsContains("InfoString")) {
                dto.setInfoString(state.getInfoString());
            }
            if (returnedFieldsContains("AskForName")) {
                dto.setAskForName(state.getAskForName());
            }
            if (returnedFieldsContains("Address1")) {
                dto.setAddress1(state.getAddress1());
            }
            if (returnedFieldsContains("Address2")) {
                dto.setAddress2(state.getAddress2());
            }
            if (returnedFieldsContains("Directions")) {
                dto.setDirections(state.getDirections());
            }
            if (returnedFieldsContains("City")) {
                dto.setCity(state.getCity());
            }
            if (returnedFieldsContains("PostalCode")) {
                dto.setPostalCode(state.getPostalCode());
            }
            if (returnedFieldsContains("PostalCodeExt")) {
                dto.setPostalCodeExt(state.getPostalCodeExt());
            }
            if (returnedFieldsContains("CountryGeoId")) {
                dto.setCountryGeoId(state.getCountryGeoId());
            }
            if (returnedFieldsContains("StateProvinceGeoId")) {
                dto.setStateProvinceGeoId(state.getStateProvinceGeoId());
            }
            if (returnedFieldsContains("PostalCodeGeoId")) {
                dto.setPostalCodeGeoId(state.getPostalCodeGeoId());
            }
            if (returnedFieldsContains("GeoPointId")) {
                dto.setGeoPointId(state.getGeoPointId());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }

          // ////////////////
          if (state instanceof PostalAddressState) {
            PostalAddressState ss = (PostalAddressState) state;
            dto.setContactMechTypeId(ContactMechTypeId.POSTAL_ADDRESS);
            if (returnedFieldsContains("ToName")) {
                dto.setToName(ss.getToName());
            }
            if (returnedFieldsContains("AttnName")) {
                dto.setAttnName(ss.getAttnName());
            }
            if (returnedFieldsContains("PrefectureGeoId")) {
                dto.setPrefectureGeoId(ss.getPrefectureGeoId());
            }
            if (returnedFieldsContains("CountyGeoId")) {
                dto.setCountyGeoId(ss.getCountyGeoId());
            }
            if (returnedFieldsContains("TownGeoId")) {
                dto.setTownGeoId(ss.getTownGeoId());
            }
            if (returnedFieldsContains("AssocTelecomContactMechId")) {
                dto.setAssocTelecomContactMechId(ss.getAssocTelecomContactMechId());
            }
          }
          // ////////////////
            return dto;
        }

    }
}

