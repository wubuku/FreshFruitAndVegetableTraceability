// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.shippingdocument;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractShippingDocumentEvent extends AbstractEvent implements ShippingDocumentEvent.SqlShippingDocumentEvent {
    private ShippingDocumentEventId shippingDocumentEventId = new ShippingDocumentEventId();

    public ShippingDocumentEventId getShippingDocumentEventId() {
        return this.shippingDocumentEventId;
    }

    public void setShippingDocumentEventId(ShippingDocumentEventId eventId) {
        this.shippingDocumentEventId = eventId;
    }
    
    public String getDocumentId() {
        return getShippingDocumentEventId().getDocumentId();
    }

    public void setDocumentId(String documentId) {
        getShippingDocumentEventId().setDocumentId(documentId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getShippingDocumentEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getShippingDocumentEventId().setVersion(version);
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractShippingDocumentEvent() {
    }

    protected AbstractShippingDocumentEvent(ShippingDocumentEventId eventId) {
        this.shippingDocumentEventId = eventId;
    }


    public abstract String getEventType();

    public static class ShippingDocumentLobEvent extends AbstractShippingDocumentEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "ShippingDocumentLobEvent";
        }

    }


    public static abstract class AbstractShippingDocumentStateEvent extends AbstractShippingDocumentEvent implements ShippingDocumentEvent.ShippingDocumentStateEvent {
        private String shipmentId;

        public String getShipmentId()
        {
            return this.shipmentId;
        }

        public void setShipmentId(String shipmentId)
        {
            this.shipmentId = shipmentId;
        }

        private String shipmentItemSeqId;

        public String getShipmentItemSeqId()
        {
            return this.shipmentItemSeqId;
        }

        public void setShipmentItemSeqId(String shipmentItemSeqId)
        {
            this.shipmentItemSeqId = shipmentItemSeqId;
        }

        private String shipmentPackageSeqId;

        public String getShipmentPackageSeqId()
        {
            return this.shipmentPackageSeqId;
        }

        public void setShipmentPackageSeqId(String shipmentPackageSeqId)
        {
            this.shipmentPackageSeqId = shipmentPackageSeqId;
        }

        private String description;

        public String getDescription()
        {
            return this.description;
        }

        public void setDescription(String description)
        {
            this.description = description;
        }

        protected AbstractShippingDocumentStateEvent(ShippingDocumentEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractShippingDocumentStateCreated extends AbstractShippingDocumentStateEvent implements ShippingDocumentEvent.ShippingDocumentStateCreated
    {
        public AbstractShippingDocumentStateCreated() {
            this(new ShippingDocumentEventId());
        }

        public AbstractShippingDocumentStateCreated(ShippingDocumentEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractShippingDocumentStateMergePatched extends AbstractShippingDocumentStateEvent implements ShippingDocumentEvent.ShippingDocumentStateMergePatched
    {
        public AbstractShippingDocumentStateMergePatched() {
            this(new ShippingDocumentEventId());
        }

        public AbstractShippingDocumentStateMergePatched(ShippingDocumentEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyShipmentIdRemoved;

        public Boolean getIsPropertyShipmentIdRemoved() {
            return this.isPropertyShipmentIdRemoved;
        }

        public void setIsPropertyShipmentIdRemoved(Boolean removed) {
            this.isPropertyShipmentIdRemoved = removed;
        }

        private Boolean isPropertyShipmentItemSeqIdRemoved;

        public Boolean getIsPropertyShipmentItemSeqIdRemoved() {
            return this.isPropertyShipmentItemSeqIdRemoved;
        }

        public void setIsPropertyShipmentItemSeqIdRemoved(Boolean removed) {
            this.isPropertyShipmentItemSeqIdRemoved = removed;
        }

        private Boolean isPropertyShipmentPackageSeqIdRemoved;

        public Boolean getIsPropertyShipmentPackageSeqIdRemoved() {
            return this.isPropertyShipmentPackageSeqIdRemoved;
        }

        public void setIsPropertyShipmentPackageSeqIdRemoved(Boolean removed) {
            this.isPropertyShipmentPackageSeqIdRemoved = removed;
        }

        private Boolean isPropertyDescriptionRemoved;

        public Boolean getIsPropertyDescriptionRemoved() {
            return this.isPropertyDescriptionRemoved;
        }

        public void setIsPropertyDescriptionRemoved(Boolean removed) {
            this.isPropertyDescriptionRemoved = removed;
        }


    }


    public static abstract class AbstractShippingDocumentStateDeleted extends AbstractShippingDocumentStateEvent implements ShippingDocumentEvent.ShippingDocumentStateDeleted
    {
        public AbstractShippingDocumentStateDeleted() {
            this(new ShippingDocumentEventId());
        }

        public AbstractShippingDocumentStateDeleted(ShippingDocumentEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.DELETED;
        }

    }

    public static class SimpleShippingDocumentStateCreated extends AbstractShippingDocumentStateCreated
    {
        public SimpleShippingDocumentStateCreated() {
        }

        public SimpleShippingDocumentStateCreated(ShippingDocumentEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleShippingDocumentStateMergePatched extends AbstractShippingDocumentStateMergePatched
    {
        public SimpleShippingDocumentStateMergePatched() {
        }

        public SimpleShippingDocumentStateMergePatched(ShippingDocumentEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleShippingDocumentStateDeleted extends AbstractShippingDocumentStateDeleted
    {
        public SimpleShippingDocumentStateDeleted() {
        }

        public SimpleShippingDocumentStateDeleted(ShippingDocumentEventId eventId) {
            super(eventId);
        }
    }

}

