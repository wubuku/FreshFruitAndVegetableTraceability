// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.transformationevent;

import java.util.*;
import java.math.*;
import org.dddml.ffvtraceability.domain.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.specialization.*;


public class TransformationEventStateDto {

    private Long eventId;

    public Long getEventId()
    {
        return this.eventId;
    }

    public void setEventId(Long eventId)
    {
        this.eventId = eventId;
    }

    private KdeTraceabilityLotCode foodUsedTlc;

    public KdeTraceabilityLotCode getFoodUsedTlc()
    {
        return this.foodUsedTlc;
    }

    public void setFoodUsedTlc(KdeTraceabilityLotCode foodUsedTlc)
    {
        this.foodUsedTlc = foodUsedTlc;
    }

    private KdeProductDescription foodUsedProductDescription;

    public KdeProductDescription getFoodUsedProductDescription()
    {
        return this.foodUsedProductDescription;
    }

    public void setFoodUsedProductDescription(KdeProductDescription foodUsedProductDescription)
    {
        this.foodUsedProductDescription = foodUsedProductDescription;
    }

    private KdeQuantityAndUom foodUsedQuantityAndUom;

    public KdeQuantityAndUom getFoodUsedQuantityAndUom()
    {
        return this.foodUsedQuantityAndUom;
    }

    public void setFoodUsedQuantityAndUom(KdeQuantityAndUom foodUsedQuantityAndUom)
    {
        this.foodUsedQuantityAndUom = foodUsedQuantityAndUom;
    }

    private KdeTraceabilityLotCode foodProducedNewTlc;

    public KdeTraceabilityLotCode getFoodProducedNewTlc()
    {
        return this.foodProducedNewTlc;
    }

    public void setFoodProducedNewTlc(KdeTraceabilityLotCode foodProducedNewTlc)
    {
        this.foodProducedNewTlc = foodProducedNewTlc;
    }

    private KdeProductDescription foodProducedProductDescription;

    public KdeProductDescription getFoodProducedProductDescription()
    {
        return this.foodProducedProductDescription;
    }

    public void setFoodProducedProductDescription(KdeProductDescription foodProducedProductDescription)
    {
        this.foodProducedProductDescription = foodProducedProductDescription;
    }

    private KdeQuantityAndUom foodProducedQuantityAndUom;

    public KdeQuantityAndUom getFoodProducedQuantityAndUom()
    {
        return this.foodProducedQuantityAndUom;
    }

    public void setFoodProducedQuantityAndUom(KdeQuantityAndUom foodProducedQuantityAndUom)
    {
        this.foodProducedQuantityAndUom = foodProducedQuantityAndUom;
    }

    private KdeLocationDescription transformationLocation;

    public KdeLocationDescription getTransformationLocation()
    {
        return this.transformationLocation;
    }

    public void setTransformationLocation(KdeLocationDescription transformationLocation)
    {
        this.transformationLocation = transformationLocation;
    }

    private String dateTransformed;

    public String getDateTransformed()
    {
        return this.dateTransformed;
    }

    public void setDateTransformed(String dateTransformed)
    {
        this.dateTransformed = dateTransformed;
    }

    private KdeReferenceDocument referenceDocument;

    public KdeReferenceDocument getReferenceDocument()
    {
        return this.referenceDocument;
    }

    public void setReferenceDocument(KdeReferenceDocument referenceDocument)
    {
        this.referenceDocument = referenceDocument;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public TransformationEventStateDto[] toTransformationEventStateDtoArray(Iterable<TransformationEventState> states) {
            return toTransformationEventStateDtoList(states).toArray(new TransformationEventStateDto[0]);
        }

        public List<TransformationEventStateDto> toTransformationEventStateDtoList(Iterable<TransformationEventState> states) {
            ArrayList<TransformationEventStateDto> stateDtos = new ArrayList();
            for (TransformationEventState s : states) {
                TransformationEventStateDto dto = toTransformationEventStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public TransformationEventStateDto toTransformationEventStateDto(TransformationEventState state)
        {
            if(state == null) {
                return null;
            }
            TransformationEventStateDto dto = new TransformationEventStateDto();
            if (returnedFieldsContains("EventId")) {
                dto.setEventId(state.getEventId());
            }
            if (returnedFieldsContains("FoodUsedTlc")) {
                dto.setFoodUsedTlc(state.getFoodUsedTlc());
            }
            if (returnedFieldsContains("FoodUsedProductDescription")) {
                dto.setFoodUsedProductDescription(state.getFoodUsedProductDescription());
            }
            if (returnedFieldsContains("FoodUsedQuantityAndUom")) {
                dto.setFoodUsedQuantityAndUom(state.getFoodUsedQuantityAndUom());
            }
            if (returnedFieldsContains("FoodProducedNewTlc")) {
                dto.setFoodProducedNewTlc(state.getFoodProducedNewTlc());
            }
            if (returnedFieldsContains("FoodProducedProductDescription")) {
                dto.setFoodProducedProductDescription(state.getFoodProducedProductDescription());
            }
            if (returnedFieldsContains("FoodProducedQuantityAndUom")) {
                dto.setFoodProducedQuantityAndUom(state.getFoodProducedQuantityAndUom());
            }
            if (returnedFieldsContains("TransformationLocation")) {
                dto.setTransformationLocation(state.getTransformationLocation());
            }
            if (returnedFieldsContains("DateTransformed")) {
                dto.setDateTransformed(state.getDateTransformed());
            }
            if (returnedFieldsContains("ReferenceDocument")) {
                dto.setReferenceDocument(state.getReferenceDocument());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

