// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.documentassociation;

import java.util.*;
import java.math.*;
import org.dddml.ffvtraceability.domain.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.specialization.Event;

public interface DocumentAssociationState
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    DocumentAssociationId getDocumentAssociationId();

    String getDocumentId();

    String getDocumentIdTo();

    String getDocumentAssocTypeId();

    OffsetDateTime getFromDate();

    OffsetDateTime getThruDate();

    Long getVersion();

    String getCreatedBy();

    OffsetDateTime getCreatedAt();

    String getUpdatedBy();

    OffsetDateTime getUpdatedAt();

    Boolean getDeleted();

    interface MutableDocumentAssociationState extends DocumentAssociationState {
        void setDocumentAssociationId(DocumentAssociationId documentAssociationId);

        void setDocumentId(String documentId);

        void setDocumentIdTo(String documentIdTo);

        void setDocumentAssocTypeId(String documentAssocTypeId);

        void setFromDate(OffsetDateTime fromDate);

        void setThruDate(OffsetDateTime thruDate);

        void setVersion(Long version);

        void setCreatedBy(String createdBy);

        void setCreatedAt(OffsetDateTime createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(OffsetDateTime updatedAt);

        void setDeleted(Boolean deleted);


        void mutate(Event e);

        //void when(DocumentAssociationEvent.DocumentAssociationStateCreated e);

        //void when(DocumentAssociationEvent.DocumentAssociationStateMergePatched e);

        //void when(DocumentAssociationEvent.DocumentAssociationStateDeleted e);
    }

    interface SqlDocumentAssociationState extends MutableDocumentAssociationState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

