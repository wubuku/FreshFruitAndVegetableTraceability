// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.bffnotification;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface BffNotificationCommand extends Command {

    String getBffNotificationId();

    void setBffNotificationId(String bffNotificationId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(BffNotificationState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((BffNotificationCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (state.get__Deleted__() != null && state.get__Deleted__()) {
            throw DomainError.named("zombie", "Can't do anything to deleted aggregate.");
        }
        if (isCreationCommand((BffNotificationCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(BffNotificationCommand c) {
        if ((c instanceof BffNotificationCommand.CreateBffNotification) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(BffNotificationState.VERSION_NULL)))
            return true;
        if ((c instanceof BffNotificationCommand.MergePatchBffNotification))
            return false;
        if ((c instanceof BffNotificationCommand.DeleteBffNotification))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(BffNotificationState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchBffNotification extends BffNotificationCommand {
        String getNotificationTypeId();

        void setNotificationTypeId(String notificationTypeId);

        String getReferenceDocumentTypeId();

        void setReferenceDocumentTypeId(String referenceDocumentTypeId);

        String getReferenceDocumentId();

        void setReferenceDocumentId(String referenceDocumentId);

        String getReferenceDocumentNumber();

        void setReferenceDocumentNumber(String referenceDocumentNumber);

        String getNotificationContent();

        void setNotificationContent(String notificationContent);

        String getStatusId();

        void setStatusId(String statusId);

        Long getPriority();

        void setPriority(Long priority);

        String getRecipientId();

        void setRecipientId(String recipientId);

    }

    interface CreateBffNotification extends CreateOrMergePatchBffNotification {
    }

    interface MergePatchBffNotification extends CreateOrMergePatchBffNotification {
        Boolean getIsPropertyNotificationTypeIdRemoved();

        void setIsPropertyNotificationTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyReferenceDocumentTypeIdRemoved();

        void setIsPropertyReferenceDocumentTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyReferenceDocumentIdRemoved();

        void setIsPropertyReferenceDocumentIdRemoved(Boolean removed);

        Boolean getIsPropertyReferenceDocumentNumberRemoved();

        void setIsPropertyReferenceDocumentNumberRemoved(Boolean removed);

        Boolean getIsPropertyNotificationContentRemoved();

        void setIsPropertyNotificationContentRemoved(Boolean removed);

        Boolean getIsPropertyStatusIdRemoved();

        void setIsPropertyStatusIdRemoved(Boolean removed);

        Boolean getIsPropertyPriorityRemoved();

        void setIsPropertyPriorityRemoved(Boolean removed);

        Boolean getIsPropertyRecipientIdRemoved();

        void setIsPropertyRecipientIdRemoved(Boolean removed);


    }

    interface DeleteBffNotification extends BffNotificationCommand {
    }

}

