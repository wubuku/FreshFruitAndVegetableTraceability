// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.shipmentreceipt;

import java.util.*;
import java.math.*;
import org.dddml.ffvtraceability.domain.partyrole.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.shipmentreceipt.ShipmentReceiptRoleEvent.*;

public abstract class AbstractShipmentReceiptRoleState implements ShipmentReceiptRoleState.SqlShipmentReceiptRoleState {

    private ShipmentReceiptRoleId shipmentReceiptRoleId = new ShipmentReceiptRoleId();

    public ShipmentReceiptRoleId getShipmentReceiptRoleId() {
        return this.shipmentReceiptRoleId;
    }

    public void setShipmentReceiptRoleId(ShipmentReceiptRoleId shipmentReceiptRoleId) {
        this.shipmentReceiptRoleId = shipmentReceiptRoleId;
    }

    private transient ShipmentReceiptState shipmentReceiptState;

    public ShipmentReceiptState getShipmentReceiptState() {
        return shipmentReceiptState;
    }

    public void setShipmentReceiptState(ShipmentReceiptState s) {
        shipmentReceiptState = s;
    }
    
    private ShipmentReceiptState protectedShipmentReceiptState;

    protected ShipmentReceiptState getProtectedShipmentReceiptState() {
        return protectedShipmentReceiptState;
    }

    protected void setProtectedShipmentReceiptState(ShipmentReceiptState protectedShipmentReceiptState) {
        this.protectedShipmentReceiptState = protectedShipmentReceiptState;
    }

    public String getShipmentReceiptReceiptId() {
        return this.getShipmentReceiptRoleId().getShipmentReceiptReceiptId();
    }
        
    public void setShipmentReceiptReceiptId(String shipmentReceiptReceiptId) {
        this.getShipmentReceiptRoleId().setShipmentReceiptReceiptId(shipmentReceiptReceiptId);
    }

    public PartyRoleId getPartyRoleId() {
        return this.getShipmentReceiptRoleId().getPartyRoleId();
    }
        
    public void setPartyRoleId(PartyRoleId partyRoleId) {
        this.getShipmentReceiptRoleId().setPartyRoleId(partyRoleId);
    }

    private Long version;

    public Long getVersion() {
        return this.version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    private Boolean deleted;

    public Boolean getDeleted() {
        return this.deleted;
    }

    public void setDeleted(Boolean deleted) {
        this.deleted = deleted;
    }

    public boolean isStateUnsaved() {
        return this.getVersion() == null;
    }

    private Boolean stateReadOnly;

    public Boolean getStateReadOnly() { return this.stateReadOnly; }

    public void setStateReadOnly(Boolean readOnly) { this.stateReadOnly = readOnly; }

    private boolean forReapplying;

    public boolean getForReapplying() {
        return forReapplying;
    }

    public void setForReapplying(boolean forReapplying) {
        this.forReapplying = forReapplying;
    }


    public AbstractShipmentReceiptRoleState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        this.forReapplying = true;

        initializeProperties();
    }
    
    protected void initializeProperties() {
    }

    @Override
    public int hashCode() {
        return getPartyRoleId().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) { return true; }
        if (obj instanceof ShipmentReceiptRoleState) {
            return Objects.equals(this.getPartyRoleId(), ((ShipmentReceiptRoleState)obj).getPartyRoleId());
        }
        return false;
    }


    public void mutate(Event e) {
        setStateReadOnly(false);
        if (e instanceof ShipmentReceiptRoleStateCreated) {
            when((ShipmentReceiptRoleStateCreated) e);
        } else if (e instanceof ShipmentReceiptRoleStateMergePatched) {
            when((ShipmentReceiptRoleStateMergePatched) e);
        } else if (e instanceof ShipmentReceiptRoleStateRemoved) {
            when((ShipmentReceiptRoleStateRemoved) e);
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void when(ShipmentReceiptRoleStateCreated e) {
        throwOnWrongEvent(e);


        this.setDeleted(false);

        this.setCreatedBy(e.getCreatedBy());
        this.setCreatedAt(e.getCreatedAt());

    }

    public void merge(ShipmentReceiptRoleState s) {
        if (s == this) {
            return;
        }
    }

    public void when(ShipmentReceiptRoleStateMergePatched e) {
        throwOnWrongEvent(e);


        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

    }

    public void when(ShipmentReceiptRoleStateRemoved e) {
        throwOnWrongEvent(e);

        this.setDeleted(true);
        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

    }

    public void save() {
    }

    protected void throwOnWrongEvent(ShipmentReceiptRoleEvent event) {
        String stateEntityIdShipmentReceiptReceiptId = this.getShipmentReceiptRoleId().getShipmentReceiptReceiptId();
        String eventEntityIdShipmentReceiptReceiptId = ((ShipmentReceiptRoleEvent.SqlShipmentReceiptRoleEvent)event).getShipmentReceiptRoleEventId().getShipmentReceiptReceiptId();
        if (!stateEntityIdShipmentReceiptReceiptId.equals(eventEntityIdShipmentReceiptReceiptId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id ShipmentReceiptReceiptId %1$s in state but entity id ShipmentReceiptReceiptId %2$s in event", stateEntityIdShipmentReceiptReceiptId, eventEntityIdShipmentReceiptReceiptId);
        }

        PartyRoleId stateEntityIdPartyRoleId = this.getShipmentReceiptRoleId().getPartyRoleId();
        PartyRoleId eventEntityIdPartyRoleId = ((ShipmentReceiptRoleEvent.SqlShipmentReceiptRoleEvent)event).getShipmentReceiptRoleEventId().getPartyRoleId();
        if (!stateEntityIdPartyRoleId.equals(eventEntityIdPartyRoleId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id PartyRoleId %1$s in state but entity id PartyRoleId %2$s in event", stateEntityIdPartyRoleId, eventEntityIdPartyRoleId);
        }


        if (getForReapplying()) { return; }
        ShipmentReceiptRoleStateEvent stateEvent = event instanceof ShipmentReceiptRoleStateEvent ? (ShipmentReceiptRoleStateEvent)event : null;
        if (stateEvent == null) { return; }

        Long stateVersion = this.getVersion();
        Long stateEventStateVersion = stateEvent.getVersion();
        //if (stateEventStateVersion == null) {
        stateEventStateVersion = stateVersion == null ? ShipmentReceiptRoleState.VERSION_NULL : stateVersion;
        stateEvent.setVersion(stateEventStateVersion);
        //}
        //if (!(stateVersion == null && stateEventStateVersion.equals(ShipmentReceiptRoleState.VERSION_NULL)) && !stateEventStateVersion.equals(stateVersion))
        //{
        //    throw DomainError.named("concurrencyConflict", "Conflict between stateVersion (%1$s) and stateEventStateVersion (%2$s)", stateVersion, stateEventStateVersion);
        //}

    }


    public static class SimpleShipmentReceiptRoleState extends AbstractShipmentReceiptRoleState {

        public SimpleShipmentReceiptRoleState() {
        }

        public static SimpleShipmentReceiptRoleState newForReapplying() {
            SimpleShipmentReceiptRoleState s = new SimpleShipmentReceiptRoleState();
            s.initializeForReapplying();
            return s;
        }

    }



}

