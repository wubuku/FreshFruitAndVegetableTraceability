// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.gs1applicationidentifier;

import java.util.*;
import org.dddml.ffvtraceability.domain.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface Gs1ApplicationIdentifierCommand extends Command {

    String getApplicationIdentifier();

    void setApplicationIdentifier(String applicationIdentifier);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(Gs1ApplicationIdentifierState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((Gs1ApplicationIdentifierCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (state.getDeleted() != null && state.getDeleted()) {
            throw DomainError.named("zombie", "Can't do anything to deleted aggregate.");
        }
        if (isCreationCommand((Gs1ApplicationIdentifierCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(Gs1ApplicationIdentifierCommand c) {
        if ((c instanceof Gs1ApplicationIdentifierCommand.CreateGs1ApplicationIdentifier) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(Gs1ApplicationIdentifierState.VERSION_NULL)))
            return true;
        if ((c instanceof Gs1ApplicationIdentifierCommand.MergePatchGs1ApplicationIdentifier))
            return false;
        if ((c instanceof Gs1ApplicationIdentifierCommand.DeleteGs1ApplicationIdentifier))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(Gs1ApplicationIdentifierState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchGs1ApplicationIdentifier extends Gs1ApplicationIdentifierCommand
    {

        String getFormatString();

        void setFormatString(String formatString);

        String getLabel();

        void setLabel(String label);

        String getDescription();

        void setDescription(String description);

        Boolean getFnc1required();

        void setFnc1required(Boolean fnc1required);

        String getRegex();

        void setRegex(String regex);

        String getNote();

        void setNote(String note);

        String getTitle();

        void setTitle(String title);

        Boolean getSeparatorRequired();

        void setSeparatorRequired(Boolean separatorRequired);

        Boolean getGs1DigitalLinkPrimaryKey();

        void setGs1DigitalLinkPrimaryKey(Boolean gs1DigitalLinkPrimaryKey);

        java.util.List<Object> getGs1DigitalLinkQualifiers();

        void setGs1DigitalLinkQualifiers(java.util.List<Object> gs1DigitalLinkQualifiers);

        java.util.List<Object> getExcludes();

        void setExcludes(java.util.List<Object> excludes);

        java.util.List<Object> getRequires();

        void setRequires(java.util.List<Object> requires);

        String getStart();

        void setStart(String start);

        String getEnd();

        void setEnd(String end);

        Gs1AppIdComponent[] getComponents();

        void setComponents(Gs1AppIdComponent[] components);

    }

    interface CreateGs1ApplicationIdentifier extends CreateOrMergePatchGs1ApplicationIdentifier
    {
    }

    interface MergePatchGs1ApplicationIdentifier extends CreateOrMergePatchGs1ApplicationIdentifier
    {
        Boolean getIsPropertyFormatStringRemoved();

        void setIsPropertyFormatStringRemoved(Boolean removed);

        Boolean getIsPropertyLabelRemoved();

        void setIsPropertyLabelRemoved(Boolean removed);

        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyFnc1requiredRemoved();

        void setIsPropertyFnc1requiredRemoved(Boolean removed);

        Boolean getIsPropertyRegexRemoved();

        void setIsPropertyRegexRemoved(Boolean removed);

        Boolean getIsPropertyNoteRemoved();

        void setIsPropertyNoteRemoved(Boolean removed);

        Boolean getIsPropertyTitleRemoved();

        void setIsPropertyTitleRemoved(Boolean removed);

        Boolean getIsPropertySeparatorRequiredRemoved();

        void setIsPropertySeparatorRequiredRemoved(Boolean removed);

        Boolean getIsPropertyComponentsRemoved();

        void setIsPropertyComponentsRemoved(Boolean removed);

        Boolean getIsPropertyGs1DigitalLinkPrimaryKeyRemoved();

        void setIsPropertyGs1DigitalLinkPrimaryKeyRemoved(Boolean removed);

        Boolean getIsPropertyGs1DigitalLinkQualifiersRemoved();

        void setIsPropertyGs1DigitalLinkQualifiersRemoved(Boolean removed);

        Boolean getIsPropertyExcludesRemoved();

        void setIsPropertyExcludesRemoved(Boolean removed);

        Boolean getIsPropertyRequiresRemoved();

        void setIsPropertyRequiresRemoved(Boolean removed);

        Boolean getIsPropertyStartRemoved();

        void setIsPropertyStartRemoved(Boolean removed);

        Boolean getIsPropertyEndRemoved();

        void setIsPropertyEndRemoved(Boolean removed);


    }

    interface DeleteGs1ApplicationIdentifier extends Gs1ApplicationIdentifierCommand
    {
    }

}

