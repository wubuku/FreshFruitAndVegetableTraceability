// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.shipmentreceipt;

import org.dddml.ffvtraceability.domain.order.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchShipmentReceiptOrderAllocationDto extends AbstractShipmentReceiptOrderAllocationCommandDto implements ShipmentReceiptOrderAllocationCommand.CreateOrMergePatchShipmentReceiptOrderAllocation {

    /**
     * Quantity Allocated
     */
    private java.math.BigDecimal quantityAllocated;

    public java.math.BigDecimal getQuantityAllocated()
    {
        return this.quantityAllocated;
    }

    public void setQuantityAllocated(java.math.BigDecimal quantityAllocated)
    {
        this.quantityAllocated = quantityAllocated;
    }


    private Boolean isPropertyQuantityAllocatedRemoved;

    public Boolean getIsPropertyQuantityAllocatedRemoved()
    {
        return this.isPropertyQuantityAllocatedRemoved;
    }

    public void setIsPropertyQuantityAllocatedRemoved(Boolean removed)
    {
        this.isPropertyQuantityAllocatedRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchShipmentReceiptOrderAllocation command)
    {
        ((AbstractShipmentReceiptOrderAllocationCommandDto) this).copyTo(command);
        command.setQuantityAllocated(this.getQuantityAllocated());
    }

    public ShipmentReceiptOrderAllocationCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractShipmentReceiptOrderAllocationCommand.SimpleCreateShipmentReceiptOrderAllocation command = new AbstractShipmentReceiptOrderAllocationCommand.SimpleCreateShipmentReceiptOrderAllocation();
            copyTo((AbstractShipmentReceiptOrderAllocationCommand.AbstractCreateShipmentReceiptOrderAllocation) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractShipmentReceiptOrderAllocationCommand.SimpleMergePatchShipmentReceiptOrderAllocation command = new AbstractShipmentReceiptOrderAllocationCommand.SimpleMergePatchShipmentReceiptOrderAllocation();
            copyTo((AbstractShipmentReceiptOrderAllocationCommand.SimpleMergePatchShipmentReceiptOrderAllocation) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            AbstractShipmentReceiptOrderAllocationCommand.SimpleRemoveShipmentReceiptOrderAllocation command = new AbstractShipmentReceiptOrderAllocationCommand.SimpleRemoveShipmentReceiptOrderAllocation();
            ((AbstractShipmentReceiptOrderAllocationCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public ShipmentReceiptOrderAllocationCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateShipmentReceiptOrderAllocationDto command = new CreateShipmentReceiptOrderAllocationDto();
            copyTo((CreateShipmentReceiptOrderAllocation) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchShipmentReceiptOrderAllocationDto command = new MergePatchShipmentReceiptOrderAllocationDto();
            copyTo((MergePatchShipmentReceiptOrderAllocation) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            RemoveShipmentReceiptOrderAllocationDto command = new RemoveShipmentReceiptOrderAllocationDto();
            ((AbstractShipmentReceiptOrderAllocationCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateShipmentReceiptOrderAllocation command)
    {
        copyTo((CreateOrMergePatchShipmentReceiptOrderAllocation) command);
    }

    public void copyTo(MergePatchShipmentReceiptOrderAllocation command)
    {
        copyTo((CreateOrMergePatchShipmentReceiptOrderAllocation) command);
        command.setIsPropertyQuantityAllocatedRemoved(this.getIsPropertyQuantityAllocatedRemoved());
    }

    public static class CreateShipmentReceiptOrderAllocationDto extends CreateOrMergePatchShipmentReceiptOrderAllocationDto implements ShipmentReceiptOrderAllocationCommand.CreateShipmentReceiptOrderAllocation
    {
        public CreateShipmentReceiptOrderAllocationDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public ShipmentReceiptOrderAllocationCommand.CreateShipmentReceiptOrderAllocation toCreateShipmentReceiptOrderAllocation()
        {
            return (ShipmentReceiptOrderAllocationCommand.CreateShipmentReceiptOrderAllocation) toCommand();
        }

    }

    public static class MergePatchShipmentReceiptOrderAllocationDto extends CreateOrMergePatchShipmentReceiptOrderAllocationDto implements ShipmentReceiptOrderAllocationCommand.MergePatchShipmentReceiptOrderAllocation
    {
        public MergePatchShipmentReceiptOrderAllocationDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public ShipmentReceiptOrderAllocationCommand.MergePatchShipmentReceiptOrderAllocation toMergePatchShipmentReceiptOrderAllocation()
        {
            return (ShipmentReceiptOrderAllocationCommand.MergePatchShipmentReceiptOrderAllocation) toCommand();
        }

    }

}

