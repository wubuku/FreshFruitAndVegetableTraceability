// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.workeffort;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;

public interface WorkEffortState
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getWorkEffortId();

    String getWorkEffortTypeId();

    String getCurrentStatusId();

    OffsetDateTime getLastStatusUpdate();

    String getWorkEffortPurposeTypeId();

    String getWorkEffortParentId();

    String getScopeEnumId();

    Long getPriority();

    Long getPercentComplete();

    String getWorkEffortName();

    String getShowAsEnumId();

    String getSendNotificationEmail();

    String getDescription();

    String getLocationDesc();

    OffsetDateTime getEstimatedStartDate();

    OffsetDateTime getEstimatedCompletionDate();

    OffsetDateTime getActualStartDate();

    OffsetDateTime getActualCompletionDate();

    Double getEstimatedMilliSeconds();

    Double getEstimatedSetupMillis();

    String getEstimateCalcMethod();

    Double getActualMilliSeconds();

    Double getActualSetupMillis();

    Double getTotalMilliSecondsAllowed();

    java.math.BigDecimal getTotalMoneyAllowed();

    String getMoneyUomId();

    String getSpecialTerms();

    Long getTimeTransparency();

    String getUniversalId();

    String getSourceReferenceId();

    String getFixedAssetId();

    String getFacilityId();

    String getInfoUrl();

    String getRecurrenceInfoId();

    String getTempExprId();

    String getRuntimeDataId();

    String getNoteId();

    String getServiceLoaderName();

    java.math.BigDecimal getQuantityToProduce();

    java.math.BigDecimal getQuantityProduced();

    java.math.BigDecimal getQuantityRejected();

    java.math.BigDecimal getReservPersons();

    java.math.BigDecimal getReserv2ndPPPerc();

    java.math.BigDecimal getReservNthPPPerc();

    String getAccommodationMapId();

    String getAccommodationSpotId();

    Long getRevisionNumber();

    Long getVersion();

    String getCreatedBy();

    OffsetDateTime getCreatedAt();

    String getUpdatedBy();

    OffsetDateTime getUpdatedAt();

    interface MutableWorkEffortState extends WorkEffortState {
        void setWorkEffortId(String workEffortId);

        void setWorkEffortTypeId(String workEffortTypeId);

        void setCurrentStatusId(String currentStatusId);

        void setLastStatusUpdate(OffsetDateTime lastStatusUpdate);

        void setWorkEffortPurposeTypeId(String workEffortPurposeTypeId);

        void setWorkEffortParentId(String workEffortParentId);

        void setScopeEnumId(String scopeEnumId);

        void setPriority(Long priority);

        void setPercentComplete(Long percentComplete);

        void setWorkEffortName(String workEffortName);

        void setShowAsEnumId(String showAsEnumId);

        void setSendNotificationEmail(String sendNotificationEmail);

        void setDescription(String description);

        void setLocationDesc(String locationDesc);

        void setEstimatedStartDate(OffsetDateTime estimatedStartDate);

        void setEstimatedCompletionDate(OffsetDateTime estimatedCompletionDate);

        void setActualStartDate(OffsetDateTime actualStartDate);

        void setActualCompletionDate(OffsetDateTime actualCompletionDate);

        void setEstimatedMilliSeconds(Double estimatedMilliSeconds);

        void setEstimatedSetupMillis(Double estimatedSetupMillis);

        void setEstimateCalcMethod(String estimateCalcMethod);

        void setActualMilliSeconds(Double actualMilliSeconds);

        void setActualSetupMillis(Double actualSetupMillis);

        void setTotalMilliSecondsAllowed(Double totalMilliSecondsAllowed);

        void setTotalMoneyAllowed(java.math.BigDecimal totalMoneyAllowed);

        void setMoneyUomId(String moneyUomId);

        void setSpecialTerms(String specialTerms);

        void setTimeTransparency(Long timeTransparency);

        void setUniversalId(String universalId);

        void setSourceReferenceId(String sourceReferenceId);

        void setFixedAssetId(String fixedAssetId);

        void setFacilityId(String facilityId);

        void setInfoUrl(String infoUrl);

        void setRecurrenceInfoId(String recurrenceInfoId);

        void setTempExprId(String tempExprId);

        void setRuntimeDataId(String runtimeDataId);

        void setNoteId(String noteId);

        void setServiceLoaderName(String serviceLoaderName);

        void setQuantityToProduce(java.math.BigDecimal quantityToProduce);

        void setQuantityProduced(java.math.BigDecimal quantityProduced);

        void setQuantityRejected(java.math.BigDecimal quantityRejected);

        void setReservPersons(java.math.BigDecimal reservPersons);

        void setReserv2ndPPPerc(java.math.BigDecimal reserv2ndPPPerc);

        void setReservNthPPPerc(java.math.BigDecimal reservNthPPPerc);

        void setAccommodationMapId(String accommodationMapId);

        void setAccommodationSpotId(String accommodationSpotId);

        void setRevisionNumber(Long revisionNumber);

        void setVersion(Long version);

        void setCreatedBy(String createdBy);

        void setCreatedAt(OffsetDateTime createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(OffsetDateTime updatedAt);


        void mutate(Event e);

        //void when(WorkEffortEvent.WorkEffortStateCreated e);

        //void when(WorkEffortEvent.WorkEffortStateMergePatched e);

    }

    interface SqlWorkEffortState extends MutableWorkEffortState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

