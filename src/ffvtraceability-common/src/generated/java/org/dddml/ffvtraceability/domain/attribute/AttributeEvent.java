// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.attribute;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;

public interface AttributeEvent extends Event {

    interface SqlAttributeEvent extends AttributeEvent {
        AttributeEventId getAttributeEventId();

        boolean getEventReadOnly();

        void setEventReadOnly(boolean readOnly);
    }

    String getAttributeId();

    //void setAttributeId(String attributeId);

    Long getVersion();
    
    //void setVersion(Long version);

    String getCreatedBy();

    void setCreatedBy(String createdBy);

    OffsetDateTime getCreatedAt();

    void setCreatedAt(OffsetDateTime createdAt);

    String getCommandId();

    void setCommandId(String commandId);

    String getTenantId();

    void setTenantId(String tenantId);

    interface AttributeStateEvent extends AttributeEvent {
        String getAttributeType();

        void setAttributeType(String attributeType);

        String getAttributeName();

        void setAttributeName(String attributeName);

        String getDescription();

        void setDescription(String description);

        String getIsMandatory();

        void setIsMandatory(String isMandatory);

        Long getAttributeLength();

        void setAttributeLength(Long attributeLength);

        String getIsEnumeration();

        void setIsEnumeration(String isEnumeration);

        Long getScale();

        void setScale(Long scale);

        String getTruncatedTo();

        void setTruncatedTo(String truncatedTo);

        Boolean getActive();

        void setActive(Boolean active);

    }

    interface AttributeStateCreated extends AttributeStateEvent
    {
        Iterable<AttributeValueEvent.AttributeValueStateCreated> getAttributeValueEvents();
        
        void addAttributeValueEvent(AttributeValueEvent.AttributeValueStateCreated e);

        AttributeValueEvent.AttributeValueStateCreated newAttributeValueStateCreated(String value);

    
    }


    interface AttributeStateMergePatched extends AttributeStateEvent
    {
        Boolean getIsPropertyAttributeTypeRemoved();

        void setIsPropertyAttributeTypeRemoved(Boolean removed);

        Boolean getIsPropertyAttributeNameRemoved();

        void setIsPropertyAttributeNameRemoved(Boolean removed);

        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyIsMandatoryRemoved();

        void setIsPropertyIsMandatoryRemoved(Boolean removed);

        Boolean getIsPropertyAttributeLengthRemoved();

        void setIsPropertyAttributeLengthRemoved(Boolean removed);

        Boolean getIsPropertyIsEnumerationRemoved();

        void setIsPropertyIsEnumerationRemoved(Boolean removed);

        Boolean getIsPropertyScaleRemoved();

        void setIsPropertyScaleRemoved(Boolean removed);

        Boolean getIsPropertyTruncatedToRemoved();

        void setIsPropertyTruncatedToRemoved(Boolean removed);

        Boolean getIsPropertyActiveRemoved();

        void setIsPropertyActiveRemoved(Boolean removed);


        Iterable<AttributeValueEvent> getAttributeValueEvents();
        
        void addAttributeValueEvent(AttributeValueEvent e);

        AttributeValueEvent.AttributeValueStateCreated newAttributeValueStateCreated(String value);

        AttributeValueEvent.AttributeValueStateMergePatched newAttributeValueStateMergePatched(String value);


    }


}

