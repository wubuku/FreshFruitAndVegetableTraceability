// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.qainspection;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class QaInspectionStateDto {

    private String qaInspectionId;

    public String getQaInspectionId()
    {
        return this.qaInspectionId;
    }

    public void setQaInspectionId(String qaInspectionId)
    {
        this.qaInspectionId = qaInspectionId;
    }

    private String receiptId;

    public String getReceiptId()
    {
        return this.receiptId;
    }

    public void setReceiptId(String receiptId)
    {
        this.receiptId = receiptId;
    }

    private String statusId;

    public String getStatusId()
    {
        return this.statusId;
    }

    public void setStatusId(String statusId)
    {
        this.statusId = statusId;
    }

    private String inspectionTypeId;

    public String getInspectionTypeId()
    {
        return this.inspectionTypeId;
    }

    public void setInspectionTypeId(String inspectionTypeId)
    {
        this.inspectionTypeId = inspectionTypeId;
    }

    private String comments;

    public String getComments()
    {
        return this.comments;
    }

    public void setComments(String comments)
    {
        this.comments = comments;
    }

    private String inspectionFacilityId;

    public String getInspectionFacilityId()
    {
        return this.inspectionFacilityId;
    }

    public void setInspectionFacilityId(String inspectionFacilityId)
    {
        this.inspectionFacilityId = inspectionFacilityId;
    }

    private String inspectedBy;

    public String getInspectedBy()
    {
        return this.inspectedBy;
    }

    public void setInspectedBy(String inspectedBy)
    {
        this.inspectedBy = inspectedBy;
    }

    private OffsetDateTime inspectedAt;

    public OffsetDateTime getInspectedAt()
    {
        return this.inspectedAt;
    }

    public void setInspectedAt(OffsetDateTime inspectedAt)
    {
        this.inspectedAt = inspectedAt;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public QaInspectionStateDto[] toQaInspectionStateDtoArray(Iterable<QaInspectionState> states) {
            return toQaInspectionStateDtoList(states).toArray(new QaInspectionStateDto[0]);
        }

        public List<QaInspectionStateDto> toQaInspectionStateDtoList(Iterable<QaInspectionState> states) {
            ArrayList<QaInspectionStateDto> stateDtos = new ArrayList();
            for (QaInspectionState s : states) {
                QaInspectionStateDto dto = toQaInspectionStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public QaInspectionStateDto toQaInspectionStateDto(QaInspectionState state)
        {
            if(state == null) {
                return null;
            }
            QaInspectionStateDto dto = new QaInspectionStateDto();
            if (returnedFieldsContains("QaInspectionId")) {
                dto.setQaInspectionId(state.getQaInspectionId());
            }
            if (returnedFieldsContains("ReceiptId")) {
                dto.setReceiptId(state.getReceiptId());
            }
            if (returnedFieldsContains("StatusId")) {
                dto.setStatusId(state.getStatusId());
            }
            if (returnedFieldsContains("InspectionTypeId")) {
                dto.setInspectionTypeId(state.getInspectionTypeId());
            }
            if (returnedFieldsContains("Comments")) {
                dto.setComments(state.getComments());
            }
            if (returnedFieldsContains("InspectionFacilityId")) {
                dto.setInspectionFacilityId(state.getInspectionFacilityId());
            }
            if (returnedFieldsContains("InspectedBy")) {
                dto.setInspectedBy(state.getInspectedBy());
            }
            if (returnedFieldsContains("InspectedAt")) {
                dto.setInspectedAt(state.getInspectedAt());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

