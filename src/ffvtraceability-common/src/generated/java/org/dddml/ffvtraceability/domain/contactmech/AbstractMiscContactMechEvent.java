// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.contactmech;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractMiscContactMechEvent extends AbstractContactMechEvent implements ContactMechEvent {
    protected AbstractMiscContactMechEvent() {
    }

    protected AbstractMiscContactMechEvent(ContactMechEventId eventId) {
        super(eventId);
    }

    public static class ContactMechLobEvent extends AbstractContactMechEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "ContactMechLobEvent";
        }

    }


    public static abstract class AbstractMiscContactMechStateEvent extends AbstractContactMechStateEvent implements MiscContactMechEvent.MiscContactMechStateEvent {
        private String email;

        public String getEmail()
        {
            return this.email;
        }

        public void setEmail(String email)
        {
            this.email = email;
        }

        private String askForRole;

        public String getAskForRole()
        {
            return this.askForRole;
        }

        public void setAskForRole(String askForRole)
        {
            this.askForRole = askForRole;
        }

        protected AbstractMiscContactMechStateEvent(ContactMechEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractMiscContactMechStateCreated extends AbstractMiscContactMechStateEvent implements MiscContactMechEvent.MiscContactMechStateCreated
    {
        public AbstractMiscContactMechStateCreated() {
            this(new ContactMechEventId());
        }

        public AbstractMiscContactMechStateCreated(ContactMechEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractMiscContactMechStateMergePatched extends AbstractMiscContactMechStateEvent implements MiscContactMechEvent.MiscContactMechStateMergePatched
    {
        public AbstractMiscContactMechStateMergePatched() {
            this(new ContactMechEventId());
        }

        public AbstractMiscContactMechStateMergePatched(ContactMechEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyEmailRemoved;

        public Boolean getIsPropertyEmailRemoved() {
            return this.isPropertyEmailRemoved;
        }

        public void setIsPropertyEmailRemoved(Boolean removed) {
            this.isPropertyEmailRemoved = removed;
        }

        private Boolean isPropertyAskForRoleRemoved;

        public Boolean getIsPropertyAskForRoleRemoved() {
            return this.isPropertyAskForRoleRemoved;
        }

        public void setIsPropertyAskForRoleRemoved(Boolean removed) {
            this.isPropertyAskForRoleRemoved = removed;
        }

        private Boolean isPropertyContactMechTypeIdRemoved;

        public Boolean getIsPropertyContactMechTypeIdRemoved() {
            return this.isPropertyContactMechTypeIdRemoved;
        }

        public void setIsPropertyContactMechTypeIdRemoved(Boolean removed) {
            this.isPropertyContactMechTypeIdRemoved = removed;
        }

        private Boolean isPropertyInfoStringRemoved;

        public Boolean getIsPropertyInfoStringRemoved() {
            return this.isPropertyInfoStringRemoved;
        }

        public void setIsPropertyInfoStringRemoved(Boolean removed) {
            this.isPropertyInfoStringRemoved = removed;
        }

        private Boolean isPropertyAskForNameRemoved;

        public Boolean getIsPropertyAskForNameRemoved() {
            return this.isPropertyAskForNameRemoved;
        }

        public void setIsPropertyAskForNameRemoved(Boolean removed) {
            this.isPropertyAskForNameRemoved = removed;
        }


    }



    public static class SimpleMiscContactMechStateCreated extends AbstractMiscContactMechStateCreated
    {
        public SimpleMiscContactMechStateCreated() {
        }

        public SimpleMiscContactMechStateCreated(ContactMechEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleMiscContactMechStateMergePatched extends AbstractMiscContactMechStateMergePatched
    {
        public SimpleMiscContactMechStateMergePatched() {
        }

        public SimpleMiscContactMechStateMergePatched(ContactMechEventId eventId) {
            super(eventId);
        }
    }

}

