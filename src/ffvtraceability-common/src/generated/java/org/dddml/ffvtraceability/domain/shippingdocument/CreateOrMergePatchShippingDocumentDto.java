// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.shippingdocument;

import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchShippingDocumentDto extends AbstractShippingDocumentCommandDto implements ShippingDocumentCommand.CreateOrMergePatchShippingDocument {

    /**
     * Shipment Id
     */
    private String shipmentId;

    public String getShipmentId()
    {
        return this.shipmentId;
    }

    public void setShipmentId(String shipmentId)
    {
        this.shipmentId = shipmentId;
    }

    /**
     * Shipment Item Seq Id
     */
    private String shipmentItemSeqId;

    public String getShipmentItemSeqId()
    {
        return this.shipmentItemSeqId;
    }

    public void setShipmentItemSeqId(String shipmentItemSeqId)
    {
        this.shipmentItemSeqId = shipmentItemSeqId;
    }

    /**
     * Shipment Package Seq Id
     */
    private String shipmentPackageSeqId;

    public String getShipmentPackageSeqId()
    {
        return this.shipmentPackageSeqId;
    }

    public void setShipmentPackageSeqId(String shipmentPackageSeqId)
    {
        this.shipmentPackageSeqId = shipmentPackageSeqId;
    }

    /**
     * Description
     */
    private String description;

    public String getDescription()
    {
        return this.description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }


    private Boolean isPropertyShipmentIdRemoved;

    public Boolean getIsPropertyShipmentIdRemoved()
    {
        return this.isPropertyShipmentIdRemoved;
    }

    public void setIsPropertyShipmentIdRemoved(Boolean removed)
    {
        this.isPropertyShipmentIdRemoved = removed;
    }

    private Boolean isPropertyShipmentItemSeqIdRemoved;

    public Boolean getIsPropertyShipmentItemSeqIdRemoved()
    {
        return this.isPropertyShipmentItemSeqIdRemoved;
    }

    public void setIsPropertyShipmentItemSeqIdRemoved(Boolean removed)
    {
        this.isPropertyShipmentItemSeqIdRemoved = removed;
    }

    private Boolean isPropertyShipmentPackageSeqIdRemoved;

    public Boolean getIsPropertyShipmentPackageSeqIdRemoved()
    {
        return this.isPropertyShipmentPackageSeqIdRemoved;
    }

    public void setIsPropertyShipmentPackageSeqIdRemoved(Boolean removed)
    {
        this.isPropertyShipmentPackageSeqIdRemoved = removed;
    }

    private Boolean isPropertyDescriptionRemoved;

    public Boolean getIsPropertyDescriptionRemoved()
    {
        return this.isPropertyDescriptionRemoved;
    }

    public void setIsPropertyDescriptionRemoved(Boolean removed)
    {
        this.isPropertyDescriptionRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchShippingDocument command)
    {
        ((AbstractShippingDocumentCommandDto) this).copyTo(command);
        command.setShipmentId(this.getShipmentId());
        command.setShipmentItemSeqId(this.getShipmentItemSeqId());
        command.setShipmentPackageSeqId(this.getShipmentPackageSeqId());
        command.setDescription(this.getDescription());
    }

    public ShippingDocumentCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractShippingDocumentCommand.SimpleCreateShippingDocument command = new AbstractShippingDocumentCommand.SimpleCreateShippingDocument();
            copyTo((AbstractShippingDocumentCommand.AbstractCreateShippingDocument) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractShippingDocumentCommand.SimpleMergePatchShippingDocument command = new AbstractShippingDocumentCommand.SimpleMergePatchShippingDocument();
            copyTo((AbstractShippingDocumentCommand.SimpleMergePatchShippingDocument) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public ShippingDocumentCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateShippingDocumentDto command = new CreateShippingDocumentDto();
            copyTo((CreateShippingDocument) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchShippingDocumentDto command = new MergePatchShippingDocumentDto();
            copyTo((MergePatchShippingDocument) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateShippingDocument command)
    {
        copyTo((CreateOrMergePatchShippingDocument) command);
    }

    public void copyTo(MergePatchShippingDocument command)
    {
        copyTo((CreateOrMergePatchShippingDocument) command);
        command.setIsPropertyShipmentIdRemoved(this.getIsPropertyShipmentIdRemoved());
        command.setIsPropertyShipmentItemSeqIdRemoved(this.getIsPropertyShipmentItemSeqIdRemoved());
        command.setIsPropertyShipmentPackageSeqIdRemoved(this.getIsPropertyShipmentPackageSeqIdRemoved());
        command.setIsPropertyDescriptionRemoved(this.getIsPropertyDescriptionRemoved());
    }

    public static class CreateShippingDocumentDto extends CreateOrMergePatchShippingDocumentDto implements ShippingDocumentCommand.CreateShippingDocument
    {
        public CreateShippingDocumentDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public ShippingDocumentCommand.CreateShippingDocument toCreateShippingDocument()
        {
            return (ShippingDocumentCommand.CreateShippingDocument) toCommand();
        }

    }

    public static class MergePatchShippingDocumentDto extends CreateOrMergePatchShippingDocumentDto implements ShippingDocumentCommand.MergePatchShippingDocument
    {
        public MergePatchShippingDocumentDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public ShippingDocumentCommand.MergePatchShippingDocument toMergePatchShippingDocument()
        {
            return (ShippingDocumentCommand.MergePatchShippingDocument) toCommand();
        }

    }

}

