// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.article;

import java.util.Map;
import java.util.List;
import org.dddml.support.criterion.Criterion;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;
import org.dddml.ffvtraceability.domain.Command;

public interface ArticleApplicationService {
    Long createWithoutId(ArticleCommand.CreateArticle c);

    void when(ArticleCommand.CreateArticle c);

    void when(ArticleCommand.MergePatchArticle c);

    void when(ArticleCommands.UpdateBody c);

    ArticleState get(Long id);

    Iterable<ArticleState> getAll(Integer firstResult, Integer maxResults);

    Iterable<ArticleState> get(Iterable<Map.Entry<String, Object>> filter, List<String> orders, Integer firstResult, Integer maxResults);

    Iterable<ArticleState> get(Criterion filter, List<String> orders, Integer firstResult, Integer maxResults);

    Iterable<ArticleState> getByProperty(String propertyName, Object propertyValue, List<String> orders, Integer firstResult, Integer maxResults);

    long getCount(Iterable<Map.Entry<String, Object>> filter);

    long getCount(Criterion filter);

    ArticleEvent getEvent(Long articleId, long version);

    ArticleState getHistoryState(Long articleId, long version);

    CommentState getComment(Long articleId, Long commentSeqId);

    Iterable<CommentState> getComments(Long articleId, Criterion filter, List<String> orders);

}

