// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.physicalinventory;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;

public interface InventoryItemVarianceState
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getInventoryItemId();

    String getVarianceReasonId();

    java.math.BigDecimal getAvailableToPromiseVar();

    java.math.BigDecimal getQuantityOnHandVar();

    String getComments();

    Long getVersion();

    String getCreatedBy();

    OffsetDateTime getCreatedAt();

    String getUpdatedBy();

    OffsetDateTime getUpdatedAt();

    String getPhysicalInventoryId();

    interface MutableInventoryItemVarianceState extends InventoryItemVarianceState {
        void setInventoryItemId(String inventoryItemId);

        void setVarianceReasonId(String varianceReasonId);

        void setAvailableToPromiseVar(java.math.BigDecimal availableToPromiseVar);

        void setQuantityOnHandVar(java.math.BigDecimal quantityOnHandVar);

        void setComments(String comments);

        void setVersion(Long version);

        void setCreatedBy(String createdBy);

        void setCreatedAt(OffsetDateTime createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(OffsetDateTime updatedAt);

        void setPhysicalInventoryId(String physicalInventoryId);


        void mutate(Event e);

        //void when(InventoryItemVarianceEvent.InventoryItemVarianceStateCreated e);

        //void when(InventoryItemVarianceEvent.InventoryItemVarianceStateMergePatched e);

    }

    interface SqlInventoryItemVarianceState extends MutableInventoryItemVarianceState {
        PhysicalInventoryInventoryItemVarianceId getPhysicalInventoryInventoryItemVarianceId();

        void setPhysicalInventoryInventoryItemVarianceId(PhysicalInventoryInventoryItemVarianceId physicalInventoryInventoryItemVarianceId);


        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

