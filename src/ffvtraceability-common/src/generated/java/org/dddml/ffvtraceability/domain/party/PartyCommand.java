// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.party;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface PartyCommand extends Command {

    String getPartyId();

    void setPartyId(String partyId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(PartyState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((PartyCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (state.getDeleted() != null && state.getDeleted()) {
            throw DomainError.named("zombie", "Can't do anything to deleted aggregate.");
        }
        if (isCreationCommand((PartyCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(PartyCommand c) {
        if ((c instanceof PartyCommand.CreateParty) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(PartyState.VERSION_NULL)))
            return true;
        if ((c instanceof PartyCommand.MergePatchParty))
            return false;
        if ((c instanceof PartyCommand.DeleteParty))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(PartyState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchParty extends PartyCommand
    {

        String getPartyTypeId();

        void setPartyTypeId(String partyTypeId);

        String getPrimaryRoleTypeId();

        void setPrimaryRoleTypeId(String primaryRoleTypeId);

        String getExternalId();

        void setExternalId(String externalId);

        String getPreferredCurrencyUomId();

        void setPreferredCurrencyUomId(String preferredCurrencyUomId);

        String getDescription();

        void setDescription(String description);

        String getStatusId();

        void setStatusId(String statusId);

        String getSalutation();

        void setSalutation(String salutation);

        String getFirstName();

        void setFirstName(String firstName);

        String getMiddleName();

        void setMiddleName(String middleName);

        String getLastName();

        void setLastName(String lastName);

        String getPersonalTitle();

        void setPersonalTitle(String personalTitle);

        String getNickname();

        void setNickname(String nickname);

        String getGender();

        void setGender(String gender);

        java.sql.Date getBirthDate();

        void setBirthDate(java.sql.Date birthDate);

        java.sql.Date getDeceasedDate();

        void setDeceasedDate(java.sql.Date deceasedDate);

        String getSocialSecurityNumber();

        void setSocialSecurityNumber(String socialSecurityNumber);

        String getPassportNumber();

        void setPassportNumber(String passportNumber);

        java.sql.Date getPassportExpireDate();

        void setPassportExpireDate(java.sql.Date passportExpireDate);

        String getExistingCustomer();

        void setExistingCustomer(String existingCustomer);

        String getOrganizationName();

        void setOrganizationName(String organizationName);

        String getTaxIdNum();

        void setTaxIdNum(String taxIdNum);

        String getFamilyName();

        void setFamilyName(String familyName);

        Boolean getActive();

        void setActive(Boolean active);

    }

    interface CreateParty extends CreateOrMergePatchParty
    {
        CreatePartyIdentificationCommandCollection getCreatePartyIdentificationCommands();

        PartyIdentificationCommand.CreatePartyIdentification newCreatePartyIdentification();

    }

    interface MergePatchParty extends CreateOrMergePatchParty
    {
        Boolean getIsPropertyPartyTypeIdRemoved();

        void setIsPropertyPartyTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyPrimaryRoleTypeIdRemoved();

        void setIsPropertyPrimaryRoleTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyExternalIdRemoved();

        void setIsPropertyExternalIdRemoved(Boolean removed);

        Boolean getIsPropertyPreferredCurrencyUomIdRemoved();

        void setIsPropertyPreferredCurrencyUomIdRemoved(Boolean removed);

        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyStatusIdRemoved();

        void setIsPropertyStatusIdRemoved(Boolean removed);

        Boolean getIsPropertySalutationRemoved();

        void setIsPropertySalutationRemoved(Boolean removed);

        Boolean getIsPropertyFirstNameRemoved();

        void setIsPropertyFirstNameRemoved(Boolean removed);

        Boolean getIsPropertyMiddleNameRemoved();

        void setIsPropertyMiddleNameRemoved(Boolean removed);

        Boolean getIsPropertyLastNameRemoved();

        void setIsPropertyLastNameRemoved(Boolean removed);

        Boolean getIsPropertyPersonalTitleRemoved();

        void setIsPropertyPersonalTitleRemoved(Boolean removed);

        Boolean getIsPropertyNicknameRemoved();

        void setIsPropertyNicknameRemoved(Boolean removed);

        Boolean getIsPropertyGenderRemoved();

        void setIsPropertyGenderRemoved(Boolean removed);

        Boolean getIsPropertyBirthDateRemoved();

        void setIsPropertyBirthDateRemoved(Boolean removed);

        Boolean getIsPropertyDeceasedDateRemoved();

        void setIsPropertyDeceasedDateRemoved(Boolean removed);

        Boolean getIsPropertySocialSecurityNumberRemoved();

        void setIsPropertySocialSecurityNumberRemoved(Boolean removed);

        Boolean getIsPropertyPassportNumberRemoved();

        void setIsPropertyPassportNumberRemoved(Boolean removed);

        Boolean getIsPropertyPassportExpireDateRemoved();

        void setIsPropertyPassportExpireDateRemoved(Boolean removed);

        Boolean getIsPropertyExistingCustomerRemoved();

        void setIsPropertyExistingCustomerRemoved(Boolean removed);

        Boolean getIsPropertyOrganizationNameRemoved();

        void setIsPropertyOrganizationNameRemoved(Boolean removed);

        Boolean getIsPropertyTaxIdNumRemoved();

        void setIsPropertyTaxIdNumRemoved(Boolean removed);

        Boolean getIsPropertyFamilyNameRemoved();

        void setIsPropertyFamilyNameRemoved(Boolean removed);

        Boolean getIsPropertyActiveRemoved();

        void setIsPropertyActiveRemoved(Boolean removed);


        PartyIdentificationCommandCollection getPartyIdentificationCommands();

        PartyIdentificationCommand.CreatePartyIdentification newCreatePartyIdentification();

        PartyIdentificationCommand.MergePatchPartyIdentification newMergePatchPartyIdentification();

        PartyIdentificationCommand.RemovePartyIdentification newRemovePartyIdentification();

    }

    interface DeleteParty extends PartyCommand
    {

        String getPartyTypeId();

        void setPartyTypeId(String partyTypeId);
    }

    interface CreatePartyIdentificationCommandCollection extends Iterable<PartyIdentificationCommand.CreatePartyIdentification>
    {
        void add(PartyIdentificationCommand.CreatePartyIdentification c);

        void remove(PartyIdentificationCommand.CreatePartyIdentification c);

        void clear();
    }

    interface PartyIdentificationCommandCollection extends Iterable<PartyIdentificationCommand>
    {
        void add(PartyIdentificationCommand c);

        void remove(PartyIdentificationCommand c);

        void clear();
    }

}

