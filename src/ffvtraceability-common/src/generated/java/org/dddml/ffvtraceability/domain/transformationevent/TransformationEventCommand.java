// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.transformationevent;

import java.util.*;
import org.dddml.ffvtraceability.domain.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface TransformationEventCommand extends Command {

    String getEventId();

    void setEventId(String eventId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(TransformationEventState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((TransformationEventCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (isCreationCommand((TransformationEventCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(TransformationEventCommand c) {
        if ((c instanceof TransformationEventCommand.CreateTransformationEvent) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(TransformationEventState.VERSION_NULL)))
            return true;
        if ((c instanceof TransformationEventCommand.MergePatchTransformationEvent))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(TransformationEventState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchTransformationEvent extends TransformationEventCommand {
        KdeTraceabilityLotCode getFoodUsedTlc();

        void setFoodUsedTlc(KdeTraceabilityLotCode foodUsedTlc);

        KdeProductDescription getFoodUsedProductDescription();

        void setFoodUsedProductDescription(KdeProductDescription foodUsedProductDescription);

        KdeQuantityAndUom getFoodUsedQuantityAndUom();

        void setFoodUsedQuantityAndUom(KdeQuantityAndUom foodUsedQuantityAndUom);

        KdeTraceabilityLotCode getFoodProducedNewTlc();

        void setFoodProducedNewTlc(KdeTraceabilityLotCode foodProducedNewTlc);

        KdeProductDescription getFoodProducedProductDescription();

        void setFoodProducedProductDescription(KdeProductDescription foodProducedProductDescription);

        KdeQuantityAndUom getFoodProducedQuantityAndUom();

        void setFoodProducedQuantityAndUom(KdeQuantityAndUom foodProducedQuantityAndUom);

        KdeLocationDescription getTransformationLocation();

        void setTransformationLocation(KdeLocationDescription transformationLocation);

        String getDateTransformed();

        void setDateTransformed(String dateTransformed);

        KdeReferenceDocument[] getReferenceDocuments();

        void setReferenceDocuments(KdeReferenceDocument[] referenceDocuments);

    }

    interface CreateTransformationEvent extends CreateOrMergePatchTransformationEvent {
    }

    interface MergePatchTransformationEvent extends CreateOrMergePatchTransformationEvent {
        Boolean getIsPropertyFoodUsedTlcRemoved();

        void setIsPropertyFoodUsedTlcRemoved(Boolean removed);

        Boolean getIsPropertyFoodUsedProductDescriptionRemoved();

        void setIsPropertyFoodUsedProductDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyFoodUsedQuantityAndUomRemoved();

        void setIsPropertyFoodUsedQuantityAndUomRemoved(Boolean removed);

        Boolean getIsPropertyFoodProducedNewTlcRemoved();

        void setIsPropertyFoodProducedNewTlcRemoved(Boolean removed);

        Boolean getIsPropertyFoodProducedProductDescriptionRemoved();

        void setIsPropertyFoodProducedProductDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyFoodProducedQuantityAndUomRemoved();

        void setIsPropertyFoodProducedQuantityAndUomRemoved(Boolean removed);

        Boolean getIsPropertyTransformationLocationRemoved();

        void setIsPropertyTransformationLocationRemoved(Boolean removed);

        Boolean getIsPropertyDateTransformedRemoved();

        void setIsPropertyDateTransformedRemoved(Boolean removed);

        Boolean getIsPropertyReferenceDocumentsRemoved();

        void setIsPropertyReferenceDocumentsRemoved(Boolean removed);


    }

    interface DeleteTransformationEvent extends TransformationEventCommand {
    }

}

