// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.workeffortgoodstandard;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class WorkEffortGoodStandardStateDto {

    private WorkEffortGoodStandardId workEffortGoodStandardId;

    public WorkEffortGoodStandardId getWorkEffortGoodStandardId()
    {
        return this.workEffortGoodStandardId;
    }

    public void setWorkEffortGoodStandardId(WorkEffortGoodStandardId workEffortGoodStandardId)
    {
        this.workEffortGoodStandardId = workEffortGoodStandardId;
    }

    private OffsetDateTime thruDate;

    public OffsetDateTime getThruDate()
    {
        return this.thruDate;
    }

    public void setThruDate(OffsetDateTime thruDate)
    {
        this.thruDate = thruDate;
    }

    private String statusId;

    public String getStatusId()
    {
        return this.statusId;
    }

    public void setStatusId(String statusId)
    {
        this.statusId = statusId;
    }

    private java.math.BigDecimal estimatedQuantity;

    public java.math.BigDecimal getEstimatedQuantity()
    {
        return this.estimatedQuantity;
    }

    public void setEstimatedQuantity(java.math.BigDecimal estimatedQuantity)
    {
        this.estimatedQuantity = estimatedQuantity;
    }

    private java.math.BigDecimal estimatedCost;

    public java.math.BigDecimal getEstimatedCost()
    {
        return this.estimatedCost;
    }

    public void setEstimatedCost(java.math.BigDecimal estimatedCost)
    {
        this.estimatedCost = estimatedCost;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public WorkEffortGoodStandardStateDto[] toWorkEffortGoodStandardStateDtoArray(Iterable<WorkEffortGoodStandardState> states) {
            return toWorkEffortGoodStandardStateDtoList(states).toArray(new WorkEffortGoodStandardStateDto[0]);
        }

        public List<WorkEffortGoodStandardStateDto> toWorkEffortGoodStandardStateDtoList(Iterable<WorkEffortGoodStandardState> states) {
            ArrayList<WorkEffortGoodStandardStateDto> stateDtos = new ArrayList();
            for (WorkEffortGoodStandardState s : states) {
                WorkEffortGoodStandardStateDto dto = toWorkEffortGoodStandardStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public WorkEffortGoodStandardStateDto toWorkEffortGoodStandardStateDto(WorkEffortGoodStandardState state)
        {
            if(state == null) {
                return null;
            }
            WorkEffortGoodStandardStateDto dto = new WorkEffortGoodStandardStateDto();
            if (returnedFieldsContains("WorkEffortGoodStandardId")) {
                dto.setWorkEffortGoodStandardId(state.getWorkEffortGoodStandardId());
            }
            if (returnedFieldsContains("ThruDate")) {
                dto.setThruDate(state.getThruDate());
            }
            if (returnedFieldsContains("StatusId")) {
                dto.setStatusId(state.getStatusId());
            }
            if (returnedFieldsContains("EstimatedQuantity")) {
                dto.setEstimatedQuantity(state.getEstimatedQuantity());
            }
            if (returnedFieldsContains("EstimatedCost")) {
                dto.setEstimatedCost(state.getEstimatedCost());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

