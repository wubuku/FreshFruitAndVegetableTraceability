// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.shipment;

import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchShipmentItemDto extends AbstractShipmentItemCommandDto implements ShipmentItemCommand.CreateOrMergePatchShipmentItem {

    /**
     * Product Id
     */
    private String productId;

    public String getProductId()
    {
        return this.productId;
    }

    public void setProductId(String productId)
    {
        this.productId = productId;
    }

    /**
     * Quantity
     */
    private java.math.BigDecimal quantity;

    public java.math.BigDecimal getQuantity()
    {
        return this.quantity;
    }

    public void setQuantity(java.math.BigDecimal quantity)
    {
        this.quantity = quantity;
    }

    /**
     * Shipment Content Description
     */
    private String shipmentContentDescription;

    public String getShipmentContentDescription()
    {
        return this.shipmentContentDescription;
    }

    public void setShipmentContentDescription(String shipmentContentDescription)
    {
        this.shipmentContentDescription = shipmentContentDescription;
    }


    private Boolean isPropertyProductIdRemoved;

    public Boolean getIsPropertyProductIdRemoved()
    {
        return this.isPropertyProductIdRemoved;
    }

    public void setIsPropertyProductIdRemoved(Boolean removed)
    {
        this.isPropertyProductIdRemoved = removed;
    }

    private Boolean isPropertyQuantityRemoved;

    public Boolean getIsPropertyQuantityRemoved()
    {
        return this.isPropertyQuantityRemoved;
    }

    public void setIsPropertyQuantityRemoved(Boolean removed)
    {
        this.isPropertyQuantityRemoved = removed;
    }

    private Boolean isPropertyShipmentContentDescriptionRemoved;

    public Boolean getIsPropertyShipmentContentDescriptionRemoved()
    {
        return this.isPropertyShipmentContentDescriptionRemoved;
    }

    public void setIsPropertyShipmentContentDescriptionRemoved(Boolean removed)
    {
        this.isPropertyShipmentContentDescriptionRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchShipmentItem command)
    {
        ((AbstractShipmentItemCommandDto) this).copyTo(command);
        command.setProductId(this.getProductId());
        command.setQuantity(this.getQuantity());
        command.setShipmentContentDescription(this.getShipmentContentDescription());
    }

    public ShipmentItemCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractShipmentItemCommand.SimpleCreateShipmentItem command = new AbstractShipmentItemCommand.SimpleCreateShipmentItem();
            copyTo((AbstractShipmentItemCommand.AbstractCreateShipmentItem) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractShipmentItemCommand.SimpleMergePatchShipmentItem command = new AbstractShipmentItemCommand.SimpleMergePatchShipmentItem();
            copyTo((AbstractShipmentItemCommand.SimpleMergePatchShipmentItem) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            AbstractShipmentItemCommand.SimpleRemoveShipmentItem command = new AbstractShipmentItemCommand.SimpleRemoveShipmentItem();
            ((AbstractShipmentItemCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public ShipmentItemCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateShipmentItemDto command = new CreateShipmentItemDto();
            copyTo((CreateShipmentItem) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchShipmentItemDto command = new MergePatchShipmentItemDto();
            copyTo((MergePatchShipmentItem) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            RemoveShipmentItemDto command = new RemoveShipmentItemDto();
            ((AbstractShipmentItemCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateShipmentItem command)
    {
        copyTo((CreateOrMergePatchShipmentItem) command);
    }

    public void copyTo(MergePatchShipmentItem command)
    {
        copyTo((CreateOrMergePatchShipmentItem) command);
        command.setIsPropertyProductIdRemoved(this.getIsPropertyProductIdRemoved());
        command.setIsPropertyQuantityRemoved(this.getIsPropertyQuantityRemoved());
        command.setIsPropertyShipmentContentDescriptionRemoved(this.getIsPropertyShipmentContentDescriptionRemoved());
    }

    public static class CreateShipmentItemDto extends CreateOrMergePatchShipmentItemDto implements ShipmentItemCommand.CreateShipmentItem
    {
        public CreateShipmentItemDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public ShipmentItemCommand.CreateShipmentItem toCreateShipmentItem()
        {
            return (ShipmentItemCommand.CreateShipmentItem) toCommand();
        }

    }

    public static class MergePatchShipmentItemDto extends CreateOrMergePatchShipmentItemDto implements ShipmentItemCommand.MergePatchShipmentItem
    {
        public MergePatchShipmentItemDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public ShipmentItemCommand.MergePatchShipmentItem toMergePatchShipmentItem()
        {
            return (ShipmentItemCommand.MergePatchShipmentItem) toCommand();
        }

    }

}

