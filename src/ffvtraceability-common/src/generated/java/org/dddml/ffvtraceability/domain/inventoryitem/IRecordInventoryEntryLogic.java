// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.inventoryitem;

import java.math.*;
import java.util.*;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.inventoryitem.InventoryItemAttributes;
import org.dddml.ffvtraceability.domain.inventoryitem.InventoryItemDetailAttributes;

public interface IRecordInventoryEntryLogic {

    InventoryItemEvent.RecordInventoryEntryEvent verify(java.util.function.Supplier<InventoryItemEvent.RecordInventoryEntryEvent> eventFactory, InventoryItemState inventoryItemState, InventoryItemAttributes inventoryItemAttributes, InventoryItemDetailAttributes inventoryItemDetailAttributes, java.math.BigDecimal quantityOnHandDiff, java.math.BigDecimal availableToPromiseDiff, java.math.BigDecimal accountingQuantityDiff, java.math.BigDecimal unitCost, VerificationContext verificationContext);

    InventoryItemState mutate(InventoryItemState inventoryItemState, InventoryItemAttributes inventoryItemAttributes, InventoryItemDetailAttributes inventoryItemDetailAttributes, java.math.BigDecimal quantityOnHandDiff, java.math.BigDecimal availableToPromiseDiff, java.math.BigDecimal accountingQuantityDiff, java.math.BigDecimal unitCost, MutationContext<InventoryItemState, InventoryItemState.MutableInventoryItemState> mutationContext);
}
