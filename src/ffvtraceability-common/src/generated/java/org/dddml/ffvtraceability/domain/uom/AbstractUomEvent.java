// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.uom;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractUomEvent extends AbstractEvent implements UomEvent.SqlUomEvent {
    private UomEventId uomEventId = new UomEventId();

    public UomEventId getUomEventId() {
        return this.uomEventId;
    }

    public void setUomEventId(UomEventId eventId) {
        this.uomEventId = eventId;
    }
    
    public String getUomId() {
        return getUomEventId().getUomId();
    }

    public void setUomId(String uomId) {
        getUomEventId().setUomId(uomId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getUomEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getUomEventId().setVersion(version);
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractUomEvent() {
    }

    protected AbstractUomEvent(UomEventId eventId) {
        this.uomEventId = eventId;
    }


    public abstract String getEventType();

    public static class UomLobEvent extends AbstractUomEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "UomLobEvent";
        }

    }


    public static abstract class AbstractUomStateEvent extends AbstractUomEvent implements UomEvent.UomStateEvent {
        private String uomTypeId;

        public String getUomTypeId()
        {
            return this.uomTypeId;
        }

        public void setUomTypeId(String uomTypeId)
        {
            this.uomTypeId = uomTypeId;
        }

        private String abbreviation;

        public String getAbbreviation()
        {
            return this.abbreviation;
        }

        public void setAbbreviation(String abbreviation)
        {
            this.abbreviation = abbreviation;
        }

        private Long numericCode;

        public Long getNumericCode()
        {
            return this.numericCode;
        }

        public void setNumericCode(Long numericCode)
        {
            this.numericCode = numericCode;
        }

        private String gs1AI;

        public String getGs1AI()
        {
            return this.gs1AI;
        }

        public void setGs1AI(String gs1AI)
        {
            this.gs1AI = gs1AI;
        }

        private String description;

        public String getDescription()
        {
            return this.description;
        }

        public void setDescription(String description)
        {
            this.description = description;
        }

        protected AbstractUomStateEvent(UomEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractUomStateCreated extends AbstractUomStateEvent implements UomEvent.UomStateCreated
    {
        public AbstractUomStateCreated() {
            this(new UomEventId());
        }

        public AbstractUomStateCreated(UomEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractUomStateMergePatched extends AbstractUomStateEvent implements UomEvent.UomStateMergePatched
    {
        public AbstractUomStateMergePatched() {
            this(new UomEventId());
        }

        public AbstractUomStateMergePatched(UomEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyUomTypeIdRemoved;

        public Boolean getIsPropertyUomTypeIdRemoved() {
            return this.isPropertyUomTypeIdRemoved;
        }

        public void setIsPropertyUomTypeIdRemoved(Boolean removed) {
            this.isPropertyUomTypeIdRemoved = removed;
        }

        private Boolean isPropertyAbbreviationRemoved;

        public Boolean getIsPropertyAbbreviationRemoved() {
            return this.isPropertyAbbreviationRemoved;
        }

        public void setIsPropertyAbbreviationRemoved(Boolean removed) {
            this.isPropertyAbbreviationRemoved = removed;
        }

        private Boolean isPropertyNumericCodeRemoved;

        public Boolean getIsPropertyNumericCodeRemoved() {
            return this.isPropertyNumericCodeRemoved;
        }

        public void setIsPropertyNumericCodeRemoved(Boolean removed) {
            this.isPropertyNumericCodeRemoved = removed;
        }

        private Boolean isPropertyGs1AIRemoved;

        public Boolean getIsPropertyGs1AIRemoved() {
            return this.isPropertyGs1AIRemoved;
        }

        public void setIsPropertyGs1AIRemoved(Boolean removed) {
            this.isPropertyGs1AIRemoved = removed;
        }

        private Boolean isPropertyDescriptionRemoved;

        public Boolean getIsPropertyDescriptionRemoved() {
            return this.isPropertyDescriptionRemoved;
        }

        public void setIsPropertyDescriptionRemoved(Boolean removed) {
            this.isPropertyDescriptionRemoved = removed;
        }


    }


    public static abstract class AbstractUomStateDeleted extends AbstractUomStateEvent implements UomEvent.UomStateDeleted
    {
        public AbstractUomStateDeleted() {
            this(new UomEventId());
        }

        public AbstractUomStateDeleted(UomEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.DELETED;
        }

    }

    public static class SimpleUomStateCreated extends AbstractUomStateCreated
    {
        public SimpleUomStateCreated() {
        }

        public SimpleUomStateCreated(UomEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleUomStateMergePatched extends AbstractUomStateMergePatched
    {
        public SimpleUomStateMergePatched() {
        }

        public SimpleUomStateMergePatched(UomEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleUomStateDeleted extends AbstractUomStateDeleted
    {
        public SimpleUomStateDeleted() {
        }

        public SimpleUomStateDeleted(UomEventId eventId) {
            super(eventId);
        }
    }

}

