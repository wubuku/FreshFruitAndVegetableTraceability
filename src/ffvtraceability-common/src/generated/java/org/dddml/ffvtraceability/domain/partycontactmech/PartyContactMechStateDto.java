// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.partycontactmech;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class PartyContactMechStateDto {

    private PartyContactMechId partyContactMechId;

    public PartyContactMechId getPartyContactMechId()
    {
        return this.partyContactMechId;
    }

    public void setPartyContactMechId(PartyContactMechId partyContactMechId)
    {
        this.partyContactMechId = partyContactMechId;
    }

    private OffsetDateTime thruDate;

    public OffsetDateTime getThruDate()
    {
        return this.thruDate;
    }

    public void setThruDate(OffsetDateTime thruDate)
    {
        this.thruDate = thruDate;
    }

    private String roleTypeId;

    public String getRoleTypeId()
    {
        return this.roleTypeId;
    }

    public void setRoleTypeId(String roleTypeId)
    {
        this.roleTypeId = roleTypeId;
    }

    private String allowSolicitation;

    public String getAllowSolicitation()
    {
        return this.allowSolicitation;
    }

    public void setAllowSolicitation(String allowSolicitation)
    {
        this.allowSolicitation = allowSolicitation;
    }

    private String extension;

    public String getExtension()
    {
        return this.extension;
    }

    public void setExtension(String extension)
    {
        this.extension = extension;
    }

    private String verified;

    public String getVerified()
    {
        return this.verified;
    }

    public void setVerified(String verified)
    {
        this.verified = verified;
    }

    private String comments;

    public String getComments()
    {
        return this.comments;
    }

    public void setComments(String comments)
    {
        this.comments = comments;
    }

    private Long yearsWithContactMech;

    public Long getYearsWithContactMech()
    {
        return this.yearsWithContactMech;
    }

    public void setYearsWithContactMech(Long yearsWithContactMech)
    {
        this.yearsWithContactMech = yearsWithContactMech;
    }

    private Long monthsWithContactMech;

    public Long getMonthsWithContactMech()
    {
        return this.monthsWithContactMech;
    }

    public void setMonthsWithContactMech(Long monthsWithContactMech)
    {
        this.monthsWithContactMech = monthsWithContactMech;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }

    private PartyContactMechPurposeStateDto[] partyContactMechPurposes;

    public PartyContactMechPurposeStateDto[] getPartyContactMechPurposes()
    {
        return this.partyContactMechPurposes;
    }    

    public void setPartyContactMechPurposes(PartyContactMechPurposeStateDto[] partyContactMechPurposes)
    {
        this.partyContactMechPurposes = partyContactMechPurposes;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{"PartyContactMechPurposes"});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public PartyContactMechStateDto[] toPartyContactMechStateDtoArray(Iterable<PartyContactMechState> states) {
            return toPartyContactMechStateDtoList(states).toArray(new PartyContactMechStateDto[0]);
        }

        public List<PartyContactMechStateDto> toPartyContactMechStateDtoList(Iterable<PartyContactMechState> states) {
            ArrayList<PartyContactMechStateDto> stateDtos = new ArrayList();
            for (PartyContactMechState s : states) {
                PartyContactMechStateDto dto = toPartyContactMechStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public PartyContactMechStateDto toPartyContactMechStateDto(PartyContactMechState state)
        {
            if(state == null) {
                return null;
            }
            PartyContactMechStateDto dto = new PartyContactMechStateDto();
            if (returnedFieldsContains("PartyContactMechId")) {
                dto.setPartyContactMechId(state.getPartyContactMechId());
            }
            if (returnedFieldsContains("ThruDate")) {
                dto.setThruDate(state.getThruDate());
            }
            if (returnedFieldsContains("RoleTypeId")) {
                dto.setRoleTypeId(state.getRoleTypeId());
            }
            if (returnedFieldsContains("AllowSolicitation")) {
                dto.setAllowSolicitation(state.getAllowSolicitation());
            }
            if (returnedFieldsContains("Extension")) {
                dto.setExtension(state.getExtension());
            }
            if (returnedFieldsContains("Verified")) {
                dto.setVerified(state.getVerified());
            }
            if (returnedFieldsContains("Comments")) {
                dto.setComments(state.getComments());
            }
            if (returnedFieldsContains("YearsWithContactMech")) {
                dto.setYearsWithContactMech(state.getYearsWithContactMech());
            }
            if (returnedFieldsContains("MonthsWithContactMech")) {
                dto.setMonthsWithContactMech(state.getMonthsWithContactMech());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            if (returnedFieldsContains("PartyContactMechPurposes")) {
                ArrayList<PartyContactMechPurposeStateDto> arrayList = new ArrayList();
                if (state.getPartyContactMechPurposes() != null) {
                    PartyContactMechPurposeStateDto.DtoConverter conv = new PartyContactMechPurposeStateDto.DtoConverter();
                    String returnFS = CollectionUtils.mapGetValueIgnoringCase(getReturnedFields(), "PartyContactMechPurposes");
                    if(returnFS != null) { conv.setReturnedFieldsString(returnFS); } else { conv.setAllFieldsReturned(this.getAllFieldsReturned()); }
                    for (PartyContactMechPurposeState s : state.getPartyContactMechPurposes()) {
                        arrayList.add(conv.toPartyContactMechPurposeStateDto(s));
                    }
                }
                dto.setPartyContactMechPurposes(arrayList.toArray(new PartyContactMechPurposeStateDto[0]));
            }
            return dto;
        }

    }
}

