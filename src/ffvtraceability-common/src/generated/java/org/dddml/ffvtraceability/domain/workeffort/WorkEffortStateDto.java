// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.workeffort;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class WorkEffortStateDto {

    private String workEffortId;

    public String getWorkEffortId()
    {
        return this.workEffortId;
    }

    public void setWorkEffortId(String workEffortId)
    {
        this.workEffortId = workEffortId;
    }

    private String workEffortTypeId;

    public String getWorkEffortTypeId()
    {
        return this.workEffortTypeId;
    }

    public void setWorkEffortTypeId(String workEffortTypeId)
    {
        this.workEffortTypeId = workEffortTypeId;
    }

    private String currentStatusId;

    public String getCurrentStatusId()
    {
        return this.currentStatusId;
    }

    public void setCurrentStatusId(String currentStatusId)
    {
        this.currentStatusId = currentStatusId;
    }

    private OffsetDateTime lastStatusUpdate;

    public OffsetDateTime getLastStatusUpdate()
    {
        return this.lastStatusUpdate;
    }

    public void setLastStatusUpdate(OffsetDateTime lastStatusUpdate)
    {
        this.lastStatusUpdate = lastStatusUpdate;
    }

    private String workEffortPurposeTypeId;

    public String getWorkEffortPurposeTypeId()
    {
        return this.workEffortPurposeTypeId;
    }

    public void setWorkEffortPurposeTypeId(String workEffortPurposeTypeId)
    {
        this.workEffortPurposeTypeId = workEffortPurposeTypeId;
    }

    private String workEffortParentId;

    public String getWorkEffortParentId()
    {
        return this.workEffortParentId;
    }

    public void setWorkEffortParentId(String workEffortParentId)
    {
        this.workEffortParentId = workEffortParentId;
    }

    private String scopeEnumId;

    public String getScopeEnumId()
    {
        return this.scopeEnumId;
    }

    public void setScopeEnumId(String scopeEnumId)
    {
        this.scopeEnumId = scopeEnumId;
    }

    private Long priority;

    public Long getPriority()
    {
        return this.priority;
    }

    public void setPriority(Long priority)
    {
        this.priority = priority;
    }

    private Long percentComplete;

    public Long getPercentComplete()
    {
        return this.percentComplete;
    }

    public void setPercentComplete(Long percentComplete)
    {
        this.percentComplete = percentComplete;
    }

    private String workEffortName;

    public String getWorkEffortName()
    {
        return this.workEffortName;
    }

    public void setWorkEffortName(String workEffortName)
    {
        this.workEffortName = workEffortName;
    }

    private String showAsEnumId;

    public String getShowAsEnumId()
    {
        return this.showAsEnumId;
    }

    public void setShowAsEnumId(String showAsEnumId)
    {
        this.showAsEnumId = showAsEnumId;
    }

    private String sendNotificationEmail;

    public String getSendNotificationEmail()
    {
        return this.sendNotificationEmail;
    }

    public void setSendNotificationEmail(String sendNotificationEmail)
    {
        this.sendNotificationEmail = sendNotificationEmail;
    }

    private String description;

    public String getDescription()
    {
        return this.description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    private String locationDesc;

    public String getLocationDesc()
    {
        return this.locationDesc;
    }

    public void setLocationDesc(String locationDesc)
    {
        this.locationDesc = locationDesc;
    }

    private OffsetDateTime estimatedStartDate;

    public OffsetDateTime getEstimatedStartDate()
    {
        return this.estimatedStartDate;
    }

    public void setEstimatedStartDate(OffsetDateTime estimatedStartDate)
    {
        this.estimatedStartDate = estimatedStartDate;
    }

    private OffsetDateTime estimatedCompletionDate;

    public OffsetDateTime getEstimatedCompletionDate()
    {
        return this.estimatedCompletionDate;
    }

    public void setEstimatedCompletionDate(OffsetDateTime estimatedCompletionDate)
    {
        this.estimatedCompletionDate = estimatedCompletionDate;
    }

    private OffsetDateTime actualStartDate;

    public OffsetDateTime getActualStartDate()
    {
        return this.actualStartDate;
    }

    public void setActualStartDate(OffsetDateTime actualStartDate)
    {
        this.actualStartDate = actualStartDate;
    }

    private OffsetDateTime actualCompletionDate;

    public OffsetDateTime getActualCompletionDate()
    {
        return this.actualCompletionDate;
    }

    public void setActualCompletionDate(OffsetDateTime actualCompletionDate)
    {
        this.actualCompletionDate = actualCompletionDate;
    }

    private Double estimatedMilliSeconds;

    public Double getEstimatedMilliSeconds()
    {
        return this.estimatedMilliSeconds;
    }

    public void setEstimatedMilliSeconds(Double estimatedMilliSeconds)
    {
        this.estimatedMilliSeconds = estimatedMilliSeconds;
    }

    private Double estimatedSetupMillis;

    public Double getEstimatedSetupMillis()
    {
        return this.estimatedSetupMillis;
    }

    public void setEstimatedSetupMillis(Double estimatedSetupMillis)
    {
        this.estimatedSetupMillis = estimatedSetupMillis;
    }

    private String estimateCalcMethod;

    public String getEstimateCalcMethod()
    {
        return this.estimateCalcMethod;
    }

    public void setEstimateCalcMethod(String estimateCalcMethod)
    {
        this.estimateCalcMethod = estimateCalcMethod;
    }

    private Double actualMilliSeconds;

    public Double getActualMilliSeconds()
    {
        return this.actualMilliSeconds;
    }

    public void setActualMilliSeconds(Double actualMilliSeconds)
    {
        this.actualMilliSeconds = actualMilliSeconds;
    }

    private Double actualSetupMillis;

    public Double getActualSetupMillis()
    {
        return this.actualSetupMillis;
    }

    public void setActualSetupMillis(Double actualSetupMillis)
    {
        this.actualSetupMillis = actualSetupMillis;
    }

    private Double totalMilliSecondsAllowed;

    public Double getTotalMilliSecondsAllowed()
    {
        return this.totalMilliSecondsAllowed;
    }

    public void setTotalMilliSecondsAllowed(Double totalMilliSecondsAllowed)
    {
        this.totalMilliSecondsAllowed = totalMilliSecondsAllowed;
    }

    private java.math.BigDecimal totalMoneyAllowed;

    public java.math.BigDecimal getTotalMoneyAllowed()
    {
        return this.totalMoneyAllowed;
    }

    public void setTotalMoneyAllowed(java.math.BigDecimal totalMoneyAllowed)
    {
        this.totalMoneyAllowed = totalMoneyAllowed;
    }

    private String moneyUomId;

    public String getMoneyUomId()
    {
        return this.moneyUomId;
    }

    public void setMoneyUomId(String moneyUomId)
    {
        this.moneyUomId = moneyUomId;
    }

    private String specialTerms;

    public String getSpecialTerms()
    {
        return this.specialTerms;
    }

    public void setSpecialTerms(String specialTerms)
    {
        this.specialTerms = specialTerms;
    }

    private Long timeTransparency;

    public Long getTimeTransparency()
    {
        return this.timeTransparency;
    }

    public void setTimeTransparency(Long timeTransparency)
    {
        this.timeTransparency = timeTransparency;
    }

    private String universalId;

    public String getUniversalId()
    {
        return this.universalId;
    }

    public void setUniversalId(String universalId)
    {
        this.universalId = universalId;
    }

    private String sourceReferenceId;

    public String getSourceReferenceId()
    {
        return this.sourceReferenceId;
    }

    public void setSourceReferenceId(String sourceReferenceId)
    {
        this.sourceReferenceId = sourceReferenceId;
    }

    private String fixedAssetId;

    public String getFixedAssetId()
    {
        return this.fixedAssetId;
    }

    public void setFixedAssetId(String fixedAssetId)
    {
        this.fixedAssetId = fixedAssetId;
    }

    private String facilityId;

    public String getFacilityId()
    {
        return this.facilityId;
    }

    public void setFacilityId(String facilityId)
    {
        this.facilityId = facilityId;
    }

    private String infoUrl;

    public String getInfoUrl()
    {
        return this.infoUrl;
    }

    public void setInfoUrl(String infoUrl)
    {
        this.infoUrl = infoUrl;
    }

    private String recurrenceInfoId;

    public String getRecurrenceInfoId()
    {
        return this.recurrenceInfoId;
    }

    public void setRecurrenceInfoId(String recurrenceInfoId)
    {
        this.recurrenceInfoId = recurrenceInfoId;
    }

    private String tempExprId;

    public String getTempExprId()
    {
        return this.tempExprId;
    }

    public void setTempExprId(String tempExprId)
    {
        this.tempExprId = tempExprId;
    }

    private String runtimeDataId;

    public String getRuntimeDataId()
    {
        return this.runtimeDataId;
    }

    public void setRuntimeDataId(String runtimeDataId)
    {
        this.runtimeDataId = runtimeDataId;
    }

    private String noteId;

    public String getNoteId()
    {
        return this.noteId;
    }

    public void setNoteId(String noteId)
    {
        this.noteId = noteId;
    }

    private String serviceLoaderName;

    public String getServiceLoaderName()
    {
        return this.serviceLoaderName;
    }

    public void setServiceLoaderName(String serviceLoaderName)
    {
        this.serviceLoaderName = serviceLoaderName;
    }

    private java.math.BigDecimal quantityToProduce;

    public java.math.BigDecimal getQuantityToProduce()
    {
        return this.quantityToProduce;
    }

    public void setQuantityToProduce(java.math.BigDecimal quantityToProduce)
    {
        this.quantityToProduce = quantityToProduce;
    }

    private java.math.BigDecimal quantityProduced;

    public java.math.BigDecimal getQuantityProduced()
    {
        return this.quantityProduced;
    }

    public void setQuantityProduced(java.math.BigDecimal quantityProduced)
    {
        this.quantityProduced = quantityProduced;
    }

    private java.math.BigDecimal quantityRejected;

    public java.math.BigDecimal getQuantityRejected()
    {
        return this.quantityRejected;
    }

    public void setQuantityRejected(java.math.BigDecimal quantityRejected)
    {
        this.quantityRejected = quantityRejected;
    }

    private java.math.BigDecimal reservPersons;

    public java.math.BigDecimal getReservPersons()
    {
        return this.reservPersons;
    }

    public void setReservPersons(java.math.BigDecimal reservPersons)
    {
        this.reservPersons = reservPersons;
    }

    private java.math.BigDecimal reserv2ndPPPerc;

    public java.math.BigDecimal getReserv2ndPPPerc()
    {
        return this.reserv2ndPPPerc;
    }

    public void setReserv2ndPPPerc(java.math.BigDecimal reserv2ndPPPerc)
    {
        this.reserv2ndPPPerc = reserv2ndPPPerc;
    }

    private java.math.BigDecimal reservNthPPPerc;

    public java.math.BigDecimal getReservNthPPPerc()
    {
        return this.reservNthPPPerc;
    }

    public void setReservNthPPPerc(java.math.BigDecimal reservNthPPPerc)
    {
        this.reservNthPPPerc = reservNthPPPerc;
    }

    private String accommodationMapId;

    public String getAccommodationMapId()
    {
        return this.accommodationMapId;
    }

    public void setAccommodationMapId(String accommodationMapId)
    {
        this.accommodationMapId = accommodationMapId;
    }

    private String accommodationSpotId;

    public String getAccommodationSpotId()
    {
        return this.accommodationSpotId;
    }

    public void setAccommodationSpotId(String accommodationSpotId)
    {
        this.accommodationSpotId = accommodationSpotId;
    }

    private Long revisionNumber;

    public Long getRevisionNumber()
    {
        return this.revisionNumber;
    }

    public void setRevisionNumber(Long revisionNumber)
    {
        this.revisionNumber = revisionNumber;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public WorkEffortStateDto[] toWorkEffortStateDtoArray(Iterable<WorkEffortState> states) {
            return toWorkEffortStateDtoList(states).toArray(new WorkEffortStateDto[0]);
        }

        public List<WorkEffortStateDto> toWorkEffortStateDtoList(Iterable<WorkEffortState> states) {
            ArrayList<WorkEffortStateDto> stateDtos = new ArrayList();
            for (WorkEffortState s : states) {
                WorkEffortStateDto dto = toWorkEffortStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public WorkEffortStateDto toWorkEffortStateDto(WorkEffortState state)
        {
            if(state == null) {
                return null;
            }
            WorkEffortStateDto dto = new WorkEffortStateDto();
            if (returnedFieldsContains("WorkEffortId")) {
                dto.setWorkEffortId(state.getWorkEffortId());
            }
            if (returnedFieldsContains("WorkEffortTypeId")) {
                dto.setWorkEffortTypeId(state.getWorkEffortTypeId());
            }
            if (returnedFieldsContains("CurrentStatusId")) {
                dto.setCurrentStatusId(state.getCurrentStatusId());
            }
            if (returnedFieldsContains("LastStatusUpdate")) {
                dto.setLastStatusUpdate(state.getLastStatusUpdate());
            }
            if (returnedFieldsContains("WorkEffortPurposeTypeId")) {
                dto.setWorkEffortPurposeTypeId(state.getWorkEffortPurposeTypeId());
            }
            if (returnedFieldsContains("WorkEffortParentId")) {
                dto.setWorkEffortParentId(state.getWorkEffortParentId());
            }
            if (returnedFieldsContains("ScopeEnumId")) {
                dto.setScopeEnumId(state.getScopeEnumId());
            }
            if (returnedFieldsContains("Priority")) {
                dto.setPriority(state.getPriority());
            }
            if (returnedFieldsContains("PercentComplete")) {
                dto.setPercentComplete(state.getPercentComplete());
            }
            if (returnedFieldsContains("WorkEffortName")) {
                dto.setWorkEffortName(state.getWorkEffortName());
            }
            if (returnedFieldsContains("ShowAsEnumId")) {
                dto.setShowAsEnumId(state.getShowAsEnumId());
            }
            if (returnedFieldsContains("SendNotificationEmail")) {
                dto.setSendNotificationEmail(state.getSendNotificationEmail());
            }
            if (returnedFieldsContains("Description")) {
                dto.setDescription(state.getDescription());
            }
            if (returnedFieldsContains("LocationDesc")) {
                dto.setLocationDesc(state.getLocationDesc());
            }
            if (returnedFieldsContains("EstimatedStartDate")) {
                dto.setEstimatedStartDate(state.getEstimatedStartDate());
            }
            if (returnedFieldsContains("EstimatedCompletionDate")) {
                dto.setEstimatedCompletionDate(state.getEstimatedCompletionDate());
            }
            if (returnedFieldsContains("ActualStartDate")) {
                dto.setActualStartDate(state.getActualStartDate());
            }
            if (returnedFieldsContains("ActualCompletionDate")) {
                dto.setActualCompletionDate(state.getActualCompletionDate());
            }
            if (returnedFieldsContains("EstimatedMilliSeconds")) {
                dto.setEstimatedMilliSeconds(state.getEstimatedMilliSeconds());
            }
            if (returnedFieldsContains("EstimatedSetupMillis")) {
                dto.setEstimatedSetupMillis(state.getEstimatedSetupMillis());
            }
            if (returnedFieldsContains("EstimateCalcMethod")) {
                dto.setEstimateCalcMethod(state.getEstimateCalcMethod());
            }
            if (returnedFieldsContains("ActualMilliSeconds")) {
                dto.setActualMilliSeconds(state.getActualMilliSeconds());
            }
            if (returnedFieldsContains("ActualSetupMillis")) {
                dto.setActualSetupMillis(state.getActualSetupMillis());
            }
            if (returnedFieldsContains("TotalMilliSecondsAllowed")) {
                dto.setTotalMilliSecondsAllowed(state.getTotalMilliSecondsAllowed());
            }
            if (returnedFieldsContains("TotalMoneyAllowed")) {
                dto.setTotalMoneyAllowed(state.getTotalMoneyAllowed());
            }
            if (returnedFieldsContains("MoneyUomId")) {
                dto.setMoneyUomId(state.getMoneyUomId());
            }
            if (returnedFieldsContains("SpecialTerms")) {
                dto.setSpecialTerms(state.getSpecialTerms());
            }
            if (returnedFieldsContains("TimeTransparency")) {
                dto.setTimeTransparency(state.getTimeTransparency());
            }
            if (returnedFieldsContains("UniversalId")) {
                dto.setUniversalId(state.getUniversalId());
            }
            if (returnedFieldsContains("SourceReferenceId")) {
                dto.setSourceReferenceId(state.getSourceReferenceId());
            }
            if (returnedFieldsContains("FixedAssetId")) {
                dto.setFixedAssetId(state.getFixedAssetId());
            }
            if (returnedFieldsContains("FacilityId")) {
                dto.setFacilityId(state.getFacilityId());
            }
            if (returnedFieldsContains("InfoUrl")) {
                dto.setInfoUrl(state.getInfoUrl());
            }
            if (returnedFieldsContains("RecurrenceInfoId")) {
                dto.setRecurrenceInfoId(state.getRecurrenceInfoId());
            }
            if (returnedFieldsContains("TempExprId")) {
                dto.setTempExprId(state.getTempExprId());
            }
            if (returnedFieldsContains("RuntimeDataId")) {
                dto.setRuntimeDataId(state.getRuntimeDataId());
            }
            if (returnedFieldsContains("NoteId")) {
                dto.setNoteId(state.getNoteId());
            }
            if (returnedFieldsContains("ServiceLoaderName")) {
                dto.setServiceLoaderName(state.getServiceLoaderName());
            }
            if (returnedFieldsContains("QuantityToProduce")) {
                dto.setQuantityToProduce(state.getQuantityToProduce());
            }
            if (returnedFieldsContains("QuantityProduced")) {
                dto.setQuantityProduced(state.getQuantityProduced());
            }
            if (returnedFieldsContains("QuantityRejected")) {
                dto.setQuantityRejected(state.getQuantityRejected());
            }
            if (returnedFieldsContains("ReservPersons")) {
                dto.setReservPersons(state.getReservPersons());
            }
            if (returnedFieldsContains("Reserv2ndPPPerc")) {
                dto.setReserv2ndPPPerc(state.getReserv2ndPPPerc());
            }
            if (returnedFieldsContains("ReservNthPPPerc")) {
                dto.setReservNthPPPerc(state.getReservNthPPPerc());
            }
            if (returnedFieldsContains("AccommodationMapId")) {
                dto.setAccommodationMapId(state.getAccommodationMapId());
            }
            if (returnedFieldsContains("AccommodationSpotId")) {
                dto.setAccommodationSpotId(state.getAccommodationSpotId());
            }
            if (returnedFieldsContains("RevisionNumber")) {
                dto.setRevisionNumber(state.getRevisionNumber());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

