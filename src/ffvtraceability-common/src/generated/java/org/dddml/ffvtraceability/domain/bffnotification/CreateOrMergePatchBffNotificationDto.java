// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.bffnotification;

import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchBffNotificationDto extends AbstractBffNotificationCommandDto implements BffNotificationCommand.CreateOrMergePatchBffNotification {

    /**
     * Type of notification (e.g., new order created, order cancelled, receipt created, receipt modified)
     */
    private String notificationTypeId;

    public String getNotificationTypeId()
    {
        return this.notificationTypeId;
    }

    public void setNotificationTypeId(String notificationTypeId)
    {
        this.notificationTypeId = notificationTypeId;
    }

    /**
     * Type of the referenced document (e.g., purchase order, receipt, quality inspection)
     */
    private String referenceDocumentTypeId;

    public String getReferenceDocumentTypeId()
    {
        return this.referenceDocumentTypeId;
    }

    public void setReferenceDocumentTypeId(String referenceDocumentTypeId)
    {
        this.referenceDocumentTypeId = referenceDocumentTypeId;
    }

    /**
     * Unique identifier of the referenced document
     */
    private String referenceDocumentId;

    public String getReferenceDocumentId()
    {
        return this.referenceDocumentId;
    }

    public void setReferenceDocumentId(String referenceDocumentId)
    {
        this.referenceDocumentId = referenceDocumentId;
    }

    /**
     * Human-readable business number of the referenced document
     */
    private String referenceDocumentNumber;

    public String getReferenceDocumentNumber()
    {
        return this.referenceDocumentNumber;
    }

    public void setReferenceDocumentNumber(String referenceDocumentNumber)
    {
        this.referenceDocumentNumber = referenceDocumentNumber;
    }

    /**
     * Content of the notification message
     */
    private String notificationContent;

    public String getNotificationContent()
    {
        return this.notificationContent;
    }

    public void setNotificationContent(String notificationContent)
    {
        this.notificationContent = notificationContent;
    }

    /**
     * Status of the notification (e.g., unread, read)
     */
    private String statusId;

    public String getStatusId()
    {
        return this.statusId;
    }

    public void setStatusId(String statusId)
    {
        this.statusId = statusId;
    }

    /**
     * Priority level of the notification
     */
    private Long priority;

    public Long getPriority()
    {
        return this.priority;
    }

    public void setPriority(Long priority)
    {
        this.priority = priority;
    }

    /**
     * Identifier of the notification recipient
     */
    private String recipientId;

    public String getRecipientId()
    {
        return this.recipientId;
    }

    public void setRecipientId(String recipientId)
    {
        this.recipientId = recipientId;
    }


    private Boolean isPropertyNotificationTypeIdRemoved;

    public Boolean getIsPropertyNotificationTypeIdRemoved()
    {
        return this.isPropertyNotificationTypeIdRemoved;
    }

    public void setIsPropertyNotificationTypeIdRemoved(Boolean removed)
    {
        this.isPropertyNotificationTypeIdRemoved = removed;
    }

    private Boolean isPropertyReferenceDocumentTypeIdRemoved;

    public Boolean getIsPropertyReferenceDocumentTypeIdRemoved()
    {
        return this.isPropertyReferenceDocumentTypeIdRemoved;
    }

    public void setIsPropertyReferenceDocumentTypeIdRemoved(Boolean removed)
    {
        this.isPropertyReferenceDocumentTypeIdRemoved = removed;
    }

    private Boolean isPropertyReferenceDocumentIdRemoved;

    public Boolean getIsPropertyReferenceDocumentIdRemoved()
    {
        return this.isPropertyReferenceDocumentIdRemoved;
    }

    public void setIsPropertyReferenceDocumentIdRemoved(Boolean removed)
    {
        this.isPropertyReferenceDocumentIdRemoved = removed;
    }

    private Boolean isPropertyReferenceDocumentNumberRemoved;

    public Boolean getIsPropertyReferenceDocumentNumberRemoved()
    {
        return this.isPropertyReferenceDocumentNumberRemoved;
    }

    public void setIsPropertyReferenceDocumentNumberRemoved(Boolean removed)
    {
        this.isPropertyReferenceDocumentNumberRemoved = removed;
    }

    private Boolean isPropertyNotificationContentRemoved;

    public Boolean getIsPropertyNotificationContentRemoved()
    {
        return this.isPropertyNotificationContentRemoved;
    }

    public void setIsPropertyNotificationContentRemoved(Boolean removed)
    {
        this.isPropertyNotificationContentRemoved = removed;
    }

    private Boolean isPropertyStatusIdRemoved;

    public Boolean getIsPropertyStatusIdRemoved()
    {
        return this.isPropertyStatusIdRemoved;
    }

    public void setIsPropertyStatusIdRemoved(Boolean removed)
    {
        this.isPropertyStatusIdRemoved = removed;
    }

    private Boolean isPropertyPriorityRemoved;

    public Boolean getIsPropertyPriorityRemoved()
    {
        return this.isPropertyPriorityRemoved;
    }

    public void setIsPropertyPriorityRemoved(Boolean removed)
    {
        this.isPropertyPriorityRemoved = removed;
    }

    private Boolean isPropertyRecipientIdRemoved;

    public Boolean getIsPropertyRecipientIdRemoved()
    {
        return this.isPropertyRecipientIdRemoved;
    }

    public void setIsPropertyRecipientIdRemoved(Boolean removed)
    {
        this.isPropertyRecipientIdRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchBffNotification command)
    {
        ((AbstractBffNotificationCommandDto) this).copyTo(command);
        command.setNotificationTypeId(this.getNotificationTypeId());
        command.setReferenceDocumentTypeId(this.getReferenceDocumentTypeId());
        command.setReferenceDocumentId(this.getReferenceDocumentId());
        command.setReferenceDocumentNumber(this.getReferenceDocumentNumber());
        command.setNotificationContent(this.getNotificationContent());
        command.setStatusId(this.getStatusId());
        command.setPriority(this.getPriority());
        command.setRecipientId(this.getRecipientId());
    }

    public BffNotificationCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractBffNotificationCommand.SimpleCreateBffNotification command = new AbstractBffNotificationCommand.SimpleCreateBffNotification();
            copyTo((AbstractBffNotificationCommand.AbstractCreateBffNotification) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractBffNotificationCommand.SimpleMergePatchBffNotification command = new AbstractBffNotificationCommand.SimpleMergePatchBffNotification();
            copyTo((AbstractBffNotificationCommand.SimpleMergePatchBffNotification) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public BffNotificationCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateBffNotificationDto command = new CreateBffNotificationDto();
            copyTo((CreateBffNotification) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchBffNotificationDto command = new MergePatchBffNotificationDto();
            copyTo((MergePatchBffNotification) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateBffNotification command)
    {
        copyTo((CreateOrMergePatchBffNotification) command);
    }

    public void copyTo(MergePatchBffNotification command)
    {
        copyTo((CreateOrMergePatchBffNotification) command);
        command.setIsPropertyNotificationTypeIdRemoved(this.getIsPropertyNotificationTypeIdRemoved());
        command.setIsPropertyReferenceDocumentTypeIdRemoved(this.getIsPropertyReferenceDocumentTypeIdRemoved());
        command.setIsPropertyReferenceDocumentIdRemoved(this.getIsPropertyReferenceDocumentIdRemoved());
        command.setIsPropertyReferenceDocumentNumberRemoved(this.getIsPropertyReferenceDocumentNumberRemoved());
        command.setIsPropertyNotificationContentRemoved(this.getIsPropertyNotificationContentRemoved());
        command.setIsPropertyStatusIdRemoved(this.getIsPropertyStatusIdRemoved());
        command.setIsPropertyPriorityRemoved(this.getIsPropertyPriorityRemoved());
        command.setIsPropertyRecipientIdRemoved(this.getIsPropertyRecipientIdRemoved());
    }

    public static class CreateBffNotificationDto extends CreateOrMergePatchBffNotificationDto implements BffNotificationCommand.CreateBffNotification
    {
        public CreateBffNotificationDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public BffNotificationCommand.CreateBffNotification toCreateBffNotification()
        {
            return (BffNotificationCommand.CreateBffNotification) toCommand();
        }

    }

    public static class MergePatchBffNotificationDto extends CreateOrMergePatchBffNotificationDto implements BffNotificationCommand.MergePatchBffNotification
    {
        public MergePatchBffNotificationDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public BffNotificationCommand.MergePatchBffNotification toMergePatchBffNotification()
        {
            return (BffNotificationCommand.MergePatchBffNotification) toCommand();
        }

    }

}

