// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.lottype;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface LotTypeCommand extends Command {

    String getLotTypeId();

    void setLotTypeId(String lotTypeId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(LotTypeState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((LotTypeCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (isCreationCommand((LotTypeCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(LotTypeCommand c) {
        if ((c instanceof LotTypeCommand.CreateLotType) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(LotTypeState.VERSION_NULL)))
            return true;
        if ((c instanceof LotTypeCommand.MergePatchLotType))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(LotTypeState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchLotType extends LotTypeCommand {
        String getDescription();

        void setDescription(String description);

    }

    interface CreateLotType extends CreateOrMergePatchLotType {
    }

    interface MergePatchLotType extends CreateOrMergePatchLotType {
        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);


    }

    interface DeleteLotType extends LotTypeCommand {
    }

}

