// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.party;

import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchPartyIdentificationDto extends AbstractPartyIdentificationCommandDto implements PartyIdentificationCommand.CreateOrMergePatchPartyIdentification {

    /**
     * Id Value
     */
    private String idValue;

    public String getIdValue()
    {
        return this.idValue;
    }

    public void setIdValue(String idValue)
    {
        this.idValue = idValue;
    }

    /**
     * Verified
     */
    private String verified;

    public String getVerified()
    {
        return this.verified;
    }

    public void setVerified(String verified)
    {
        this.verified = verified;
    }

    /**
     * Active
     */
    private Boolean active;

    public Boolean getActive()
    {
        return this.active;
    }

    public void setActive(Boolean active)
    {
        this.active = active;
    }


    private Boolean isPropertyIdValueRemoved;

    public Boolean getIsPropertyIdValueRemoved()
    {
        return this.isPropertyIdValueRemoved;
    }

    public void setIsPropertyIdValueRemoved(Boolean removed)
    {
        this.isPropertyIdValueRemoved = removed;
    }

    private Boolean isPropertyVerifiedRemoved;

    public Boolean getIsPropertyVerifiedRemoved()
    {
        return this.isPropertyVerifiedRemoved;
    }

    public void setIsPropertyVerifiedRemoved(Boolean removed)
    {
        this.isPropertyVerifiedRemoved = removed;
    }

    private Boolean isPropertyActiveRemoved;

    public Boolean getIsPropertyActiveRemoved()
    {
        return this.isPropertyActiveRemoved;
    }

    public void setIsPropertyActiveRemoved(Boolean removed)
    {
        this.isPropertyActiveRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchPartyIdentification command)
    {
        ((AbstractPartyIdentificationCommandDto) this).copyTo(command);
        command.setIdValue(this.getIdValue());
        command.setVerified(this.getVerified());
        command.setActive(this.getActive());
    }

    public PartyIdentificationCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractPartyIdentificationCommand.SimpleCreatePartyIdentification command = new AbstractPartyIdentificationCommand.SimpleCreatePartyIdentification();
            copyTo((AbstractPartyIdentificationCommand.AbstractCreatePartyIdentification) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractPartyIdentificationCommand.SimpleMergePatchPartyIdentification command = new AbstractPartyIdentificationCommand.SimpleMergePatchPartyIdentification();
            copyTo((AbstractPartyIdentificationCommand.SimpleMergePatchPartyIdentification) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            AbstractPartyIdentificationCommand.SimpleRemovePartyIdentification command = new AbstractPartyIdentificationCommand.SimpleRemovePartyIdentification();
            ((AbstractPartyIdentificationCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public PartyIdentificationCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreatePartyIdentificationDto command = new CreatePartyIdentificationDto();
            copyTo((CreatePartyIdentification) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchPartyIdentificationDto command = new MergePatchPartyIdentificationDto();
            copyTo((MergePatchPartyIdentification) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            RemovePartyIdentificationDto command = new RemovePartyIdentificationDto();
            ((AbstractPartyIdentificationCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreatePartyIdentification command)
    {
        copyTo((CreateOrMergePatchPartyIdentification) command);
    }

    public void copyTo(MergePatchPartyIdentification command)
    {
        copyTo((CreateOrMergePatchPartyIdentification) command);
        command.setIsPropertyIdValueRemoved(this.getIsPropertyIdValueRemoved());
        command.setIsPropertyVerifiedRemoved(this.getIsPropertyVerifiedRemoved());
        command.setIsPropertyActiveRemoved(this.getIsPropertyActiveRemoved());
    }

    public static class CreatePartyIdentificationDto extends CreateOrMergePatchPartyIdentificationDto implements PartyIdentificationCommand.CreatePartyIdentification
    {
        public CreatePartyIdentificationDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public PartyIdentificationCommand.CreatePartyIdentification toCreatePartyIdentification()
        {
            return (PartyIdentificationCommand.CreatePartyIdentification) toCommand();
        }

    }

    public static class MergePatchPartyIdentificationDto extends CreateOrMergePatchPartyIdentificationDto implements PartyIdentificationCommand.MergePatchPartyIdentification
    {
        public MergePatchPartyIdentificationDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public PartyIdentificationCommand.MergePatchPartyIdentification toMergePatchPartyIdentification()
        {
            return (PartyIdentificationCommand.MergePatchPartyIdentification) toCommand();
        }

    }

}

