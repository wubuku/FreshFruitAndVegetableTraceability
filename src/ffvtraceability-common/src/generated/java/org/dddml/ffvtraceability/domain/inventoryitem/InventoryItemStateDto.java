// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.inventoryitem;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class InventoryItemStateDto {

    private String inventoryItemId;

    public String getInventoryItemId()
    {
        return this.inventoryItemId;
    }

    public void setInventoryItemId(String inventoryItemId)
    {
        this.inventoryItemId = inventoryItemId;
    }

    private String inventoryItemTypeId;

    public String getInventoryItemTypeId()
    {
        return this.inventoryItemTypeId;
    }

    public void setInventoryItemTypeId(String inventoryItemTypeId)
    {
        this.inventoryItemTypeId = inventoryItemTypeId;
    }

    private String productId;

    public String getProductId()
    {
        return this.productId;
    }

    public void setProductId(String productId)
    {
        this.productId = productId;
    }

    private String partyId;

    public String getPartyId()
    {
        return this.partyId;
    }

    public void setPartyId(String partyId)
    {
        this.partyId = partyId;
    }

    private String ownerPartyId;

    public String getOwnerPartyId()
    {
        return this.ownerPartyId;
    }

    public void setOwnerPartyId(String ownerPartyId)
    {
        this.ownerPartyId = ownerPartyId;
    }

    private String statusId;

    public String getStatusId()
    {
        return this.statusId;
    }

    public void setStatusId(String statusId)
    {
        this.statusId = statusId;
    }

    private OffsetDateTime datetimeReceived;

    public OffsetDateTime getDatetimeReceived()
    {
        return this.datetimeReceived;
    }

    public void setDatetimeReceived(OffsetDateTime datetimeReceived)
    {
        this.datetimeReceived = datetimeReceived;
    }

    private OffsetDateTime datetimeManufactured;

    public OffsetDateTime getDatetimeManufactured()
    {
        return this.datetimeManufactured;
    }

    public void setDatetimeManufactured(OffsetDateTime datetimeManufactured)
    {
        this.datetimeManufactured = datetimeManufactured;
    }

    private OffsetDateTime expireDate;

    public OffsetDateTime getExpireDate()
    {
        return this.expireDate;
    }

    public void setExpireDate(OffsetDateTime expireDate)
    {
        this.expireDate = expireDate;
    }

    private String facilityId;

    public String getFacilityId()
    {
        return this.facilityId;
    }

    public void setFacilityId(String facilityId)
    {
        this.facilityId = facilityId;
    }

    private String containerId;

    public String getContainerId()
    {
        return this.containerId;
    }

    public void setContainerId(String containerId)
    {
        this.containerId = containerId;
    }

    private String lotId;

    public String getLotId()
    {
        return this.lotId;
    }

    public void setLotId(String lotId)
    {
        this.lotId = lotId;
    }

    private String uomId;

    public String getUomId()
    {
        return this.uomId;
    }

    public void setUomId(String uomId)
    {
        this.uomId = uomId;
    }

    private String binNumber;

    public String getBinNumber()
    {
        return this.binNumber;
    }

    public void setBinNumber(String binNumber)
    {
        this.binNumber = binNumber;
    }

    private String locationSeqId;

    public String getLocationSeqId()
    {
        return this.locationSeqId;
    }

    public void setLocationSeqId(String locationSeqId)
    {
        this.locationSeqId = locationSeqId;
    }

    private String comments;

    public String getComments()
    {
        return this.comments;
    }

    public void setComments(String comments)
    {
        this.comments = comments;
    }

    private java.math.BigDecimal quantityOnHandTotal;

    public java.math.BigDecimal getQuantityOnHandTotal()
    {
        return this.quantityOnHandTotal;
    }

    public void setQuantityOnHandTotal(java.math.BigDecimal quantityOnHandTotal)
    {
        this.quantityOnHandTotal = quantityOnHandTotal;
    }

    private java.math.BigDecimal availableToPromiseTotal;

    public java.math.BigDecimal getAvailableToPromiseTotal()
    {
        return this.availableToPromiseTotal;
    }

    public void setAvailableToPromiseTotal(java.math.BigDecimal availableToPromiseTotal)
    {
        this.availableToPromiseTotal = availableToPromiseTotal;
    }

    private java.math.BigDecimal accountingQuantityTotal;

    public java.math.BigDecimal getAccountingQuantityTotal()
    {
        return this.accountingQuantityTotal;
    }

    public void setAccountingQuantityTotal(java.math.BigDecimal accountingQuantityTotal)
    {
        this.accountingQuantityTotal = accountingQuantityTotal;
    }

    private String serialNumber;

    public String getSerialNumber()
    {
        return this.serialNumber;
    }

    public void setSerialNumber(String serialNumber)
    {
        this.serialNumber = serialNumber;
    }

    private String softIdentifier;

    public String getSoftIdentifier()
    {
        return this.softIdentifier;
    }

    public void setSoftIdentifier(String softIdentifier)
    {
        this.softIdentifier = softIdentifier;
    }

    private String activationNumber;

    public String getActivationNumber()
    {
        return this.activationNumber;
    }

    public void setActivationNumber(String activationNumber)
    {
        this.activationNumber = activationNumber;
    }

    private OffsetDateTime activationValidThru;

    public OffsetDateTime getActivationValidThru()
    {
        return this.activationValidThru;
    }

    public void setActivationValidThru(OffsetDateTime activationValidThru)
    {
        this.activationValidThru = activationValidThru;
    }

    private java.math.BigDecimal unitCost;

    public java.math.BigDecimal getUnitCost()
    {
        return this.unitCost;
    }

    public void setUnitCost(java.math.BigDecimal unitCost)
    {
        this.unitCost = unitCost;
    }

    private String currencyUomId;

    public String getCurrencyUomId()
    {
        return this.currencyUomId;
    }

    public void setCurrencyUomId(String currencyUomId)
    {
        this.currencyUomId = currencyUomId;
    }

    private String fixedAssetId;

    public String getFixedAssetId()
    {
        return this.fixedAssetId;
    }

    public void setFixedAssetId(String fixedAssetId)
    {
        this.fixedAssetId = fixedAssetId;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }

    private InventoryItemDetailStateDto[] details;

    public InventoryItemDetailStateDto[] getDetails()
    {
        return this.details;
    }    

    public void setDetails(InventoryItemDetailStateDto[] details)
    {
        this.details = details;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{"Details"});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public InventoryItemStateDto[] toInventoryItemStateDtoArray(Iterable<InventoryItemState> states) {
            return toInventoryItemStateDtoList(states).toArray(new InventoryItemStateDto[0]);
        }

        public List<InventoryItemStateDto> toInventoryItemStateDtoList(Iterable<InventoryItemState> states) {
            ArrayList<InventoryItemStateDto> stateDtos = new ArrayList();
            for (InventoryItemState s : states) {
                InventoryItemStateDto dto = toInventoryItemStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public InventoryItemStateDto toInventoryItemStateDto(InventoryItemState state)
        {
            if(state == null) {
                return null;
            }
            InventoryItemStateDto dto = new InventoryItemStateDto();
            if (returnedFieldsContains("InventoryItemId")) {
                dto.setInventoryItemId(state.getInventoryItemId());
            }
            if (returnedFieldsContains("InventoryItemTypeId")) {
                dto.setInventoryItemTypeId(state.getInventoryItemTypeId());
            }
            if (returnedFieldsContains("ProductId")) {
                dto.setProductId(state.getProductId());
            }
            if (returnedFieldsContains("PartyId")) {
                dto.setPartyId(state.getPartyId());
            }
            if (returnedFieldsContains("OwnerPartyId")) {
                dto.setOwnerPartyId(state.getOwnerPartyId());
            }
            if (returnedFieldsContains("StatusId")) {
                dto.setStatusId(state.getStatusId());
            }
            if (returnedFieldsContains("DatetimeReceived")) {
                dto.setDatetimeReceived(state.getDatetimeReceived());
            }
            if (returnedFieldsContains("DatetimeManufactured")) {
                dto.setDatetimeManufactured(state.getDatetimeManufactured());
            }
            if (returnedFieldsContains("ExpireDate")) {
                dto.setExpireDate(state.getExpireDate());
            }
            if (returnedFieldsContains("FacilityId")) {
                dto.setFacilityId(state.getFacilityId());
            }
            if (returnedFieldsContains("ContainerId")) {
                dto.setContainerId(state.getContainerId());
            }
            if (returnedFieldsContains("LotId")) {
                dto.setLotId(state.getLotId());
            }
            if (returnedFieldsContains("UomId")) {
                dto.setUomId(state.getUomId());
            }
            if (returnedFieldsContains("BinNumber")) {
                dto.setBinNumber(state.getBinNumber());
            }
            if (returnedFieldsContains("LocationSeqId")) {
                dto.setLocationSeqId(state.getLocationSeqId());
            }
            if (returnedFieldsContains("Comments")) {
                dto.setComments(state.getComments());
            }
            if (returnedFieldsContains("QuantityOnHandTotal")) {
                dto.setQuantityOnHandTotal(state.getQuantityOnHandTotal());
            }
            if (returnedFieldsContains("AvailableToPromiseTotal")) {
                dto.setAvailableToPromiseTotal(state.getAvailableToPromiseTotal());
            }
            if (returnedFieldsContains("AccountingQuantityTotal")) {
                dto.setAccountingQuantityTotal(state.getAccountingQuantityTotal());
            }
            if (returnedFieldsContains("SerialNumber")) {
                dto.setSerialNumber(state.getSerialNumber());
            }
            if (returnedFieldsContains("SoftIdentifier")) {
                dto.setSoftIdentifier(state.getSoftIdentifier());
            }
            if (returnedFieldsContains("ActivationNumber")) {
                dto.setActivationNumber(state.getActivationNumber());
            }
            if (returnedFieldsContains("ActivationValidThru")) {
                dto.setActivationValidThru(state.getActivationValidThru());
            }
            if (returnedFieldsContains("UnitCost")) {
                dto.setUnitCost(state.getUnitCost());
            }
            if (returnedFieldsContains("CurrencyUomId")) {
                dto.setCurrencyUomId(state.getCurrencyUomId());
            }
            if (returnedFieldsContains("FixedAssetId")) {
                dto.setFixedAssetId(state.getFixedAssetId());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            if (returnedFieldsContains("Details")) {
                ArrayList<InventoryItemDetailStateDto> arrayList = new ArrayList();
                if (state.getDetails() != null) {
                    InventoryItemDetailStateDto.DtoConverter conv = new InventoryItemDetailStateDto.DtoConverter();
                    String returnFS = CollectionUtils.mapGetValueIgnoringCase(getReturnedFields(), "Details");
                    if(returnFS != null) { conv.setReturnedFieldsString(returnFS); } else { conv.setAllFieldsReturned(this.getAllFieldsReturned()); }
                    for (InventoryItemDetailState s : state.getDetails()) {
                        arrayList.add(conv.toInventoryItemDetailStateDto(s));
                    }
                }
                dto.setDetails(arrayList.toArray(new InventoryItemDetailStateDto[0]));
            }
            return dto;
        }

    }
}

