// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.facility;

import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchFacilityIdentificationDto extends AbstractFacilityIdentificationCommandDto implements FacilityIdentificationCommand.CreateOrMergePatchFacilityIdentification {

    /**
     * Id Value
     */
    private String idValue;

    public String getIdValue()
    {
        return this.idValue;
    }

    public void setIdValue(String idValue)
    {
        this.idValue = idValue;
    }


    private Boolean isPropertyIdValueRemoved;

    public Boolean getIsPropertyIdValueRemoved()
    {
        return this.isPropertyIdValueRemoved;
    }

    public void setIsPropertyIdValueRemoved(Boolean removed)
    {
        this.isPropertyIdValueRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchFacilityIdentification command)
    {
        ((AbstractFacilityIdentificationCommandDto) this).copyTo(command);
        command.setIdValue(this.getIdValue());
    }

    public FacilityIdentificationCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractFacilityIdentificationCommand.SimpleCreateFacilityIdentification command = new AbstractFacilityIdentificationCommand.SimpleCreateFacilityIdentification();
            copyTo((AbstractFacilityIdentificationCommand.AbstractCreateFacilityIdentification) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractFacilityIdentificationCommand.SimpleMergePatchFacilityIdentification command = new AbstractFacilityIdentificationCommand.SimpleMergePatchFacilityIdentification();
            copyTo((AbstractFacilityIdentificationCommand.SimpleMergePatchFacilityIdentification) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            AbstractFacilityIdentificationCommand.SimpleRemoveFacilityIdentification command = new AbstractFacilityIdentificationCommand.SimpleRemoveFacilityIdentification();
            ((AbstractFacilityIdentificationCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public FacilityIdentificationCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateFacilityIdentificationDto command = new CreateFacilityIdentificationDto();
            copyTo((CreateFacilityIdentification) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchFacilityIdentificationDto command = new MergePatchFacilityIdentificationDto();
            copyTo((MergePatchFacilityIdentification) command);
            return command;
        } 
        else if (COMMAND_TYPE_REMOVE.equals(getCommandType())) {
            RemoveFacilityIdentificationDto command = new RemoveFacilityIdentificationDto();
            ((AbstractFacilityIdentificationCommandDto) this).copyTo(command);
            return command;
        }
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateFacilityIdentification command)
    {
        copyTo((CreateOrMergePatchFacilityIdentification) command);
    }

    public void copyTo(MergePatchFacilityIdentification command)
    {
        copyTo((CreateOrMergePatchFacilityIdentification) command);
        command.setIsPropertyIdValueRemoved(this.getIsPropertyIdValueRemoved());
    }

    public static class CreateFacilityIdentificationDto extends CreateOrMergePatchFacilityIdentificationDto implements FacilityIdentificationCommand.CreateFacilityIdentification
    {
        public CreateFacilityIdentificationDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public FacilityIdentificationCommand.CreateFacilityIdentification toCreateFacilityIdentification()
        {
            return (FacilityIdentificationCommand.CreateFacilityIdentification) toCommand();
        }

    }

    public static class MergePatchFacilityIdentificationDto extends CreateOrMergePatchFacilityIdentificationDto implements FacilityIdentificationCommand.MergePatchFacilityIdentification
    {
        public MergePatchFacilityIdentificationDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public FacilityIdentificationCommand.MergePatchFacilityIdentification toMergePatchFacilityIdentification()
        {
            return (FacilityIdentificationCommand.MergePatchFacilityIdentification) toCommand();
        }

    }

}

