// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.workeffortinventoryassign;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractWorkEffortInventoryAssignEvent extends AbstractEvent implements WorkEffortInventoryAssignEvent.SqlWorkEffortInventoryAssignEvent {
    private WorkEffortInventoryAssignEventId workEffortInventoryAssignEventId = new WorkEffortInventoryAssignEventId();

    public WorkEffortInventoryAssignEventId getWorkEffortInventoryAssignEventId() {
        return this.workEffortInventoryAssignEventId;
    }

    public void setWorkEffortInventoryAssignEventId(WorkEffortInventoryAssignEventId eventId) {
        this.workEffortInventoryAssignEventId = eventId;
    }
    
    public WorkEffortInventoryAssignId getWorkEffortInventoryAssignId() {
        return getWorkEffortInventoryAssignEventId().getWorkEffortInventoryAssignId();
    }

    public void setWorkEffortInventoryAssignId(WorkEffortInventoryAssignId workEffortInventoryAssignId) {
        getWorkEffortInventoryAssignEventId().setWorkEffortInventoryAssignId(workEffortInventoryAssignId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getWorkEffortInventoryAssignEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getWorkEffortInventoryAssignEventId().setVersion(version);
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractWorkEffortInventoryAssignEvent() {
    }

    protected AbstractWorkEffortInventoryAssignEvent(WorkEffortInventoryAssignEventId eventId) {
        this.workEffortInventoryAssignEventId = eventId;
    }


    public abstract String getEventType();

    public static class WorkEffortInventoryAssignLobEvent extends AbstractWorkEffortInventoryAssignEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "WorkEffortInventoryAssignLobEvent";
        }

    }


    public static abstract class AbstractWorkEffortInventoryAssignStateEvent extends AbstractWorkEffortInventoryAssignEvent implements WorkEffortInventoryAssignEvent.WorkEffortInventoryAssignStateEvent {
        private String statusId;

        public String getStatusId()
        {
            return this.statusId;
        }

        public void setStatusId(String statusId)
        {
            this.statusId = statusId;
        }

        private Double quantity;

        public Double getQuantity()
        {
            return this.quantity;
        }

        public void setQuantity(Double quantity)
        {
            this.quantity = quantity;
        }

        protected AbstractWorkEffortInventoryAssignStateEvent(WorkEffortInventoryAssignEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractWorkEffortInventoryAssignStateCreated extends AbstractWorkEffortInventoryAssignStateEvent implements WorkEffortInventoryAssignEvent.WorkEffortInventoryAssignStateCreated
    {
        public AbstractWorkEffortInventoryAssignStateCreated() {
            this(new WorkEffortInventoryAssignEventId());
        }

        public AbstractWorkEffortInventoryAssignStateCreated(WorkEffortInventoryAssignEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractWorkEffortInventoryAssignStateMergePatched extends AbstractWorkEffortInventoryAssignStateEvent implements WorkEffortInventoryAssignEvent.WorkEffortInventoryAssignStateMergePatched
    {
        public AbstractWorkEffortInventoryAssignStateMergePatched() {
            this(new WorkEffortInventoryAssignEventId());
        }

        public AbstractWorkEffortInventoryAssignStateMergePatched(WorkEffortInventoryAssignEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyStatusIdRemoved;

        public Boolean getIsPropertyStatusIdRemoved() {
            return this.isPropertyStatusIdRemoved;
        }

        public void setIsPropertyStatusIdRemoved(Boolean removed) {
            this.isPropertyStatusIdRemoved = removed;
        }

        private Boolean isPropertyQuantityRemoved;

        public Boolean getIsPropertyQuantityRemoved() {
            return this.isPropertyQuantityRemoved;
        }

        public void setIsPropertyQuantityRemoved(Boolean removed) {
            this.isPropertyQuantityRemoved = removed;
        }


    }



    public static class SimpleWorkEffortInventoryAssignStateCreated extends AbstractWorkEffortInventoryAssignStateCreated
    {
        public SimpleWorkEffortInventoryAssignStateCreated() {
        }

        public SimpleWorkEffortInventoryAssignStateCreated(WorkEffortInventoryAssignEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleWorkEffortInventoryAssignStateMergePatched extends AbstractWorkEffortInventoryAssignStateMergePatched
    {
        public SimpleWorkEffortInventoryAssignStateMergePatched() {
        }

        public SimpleWorkEffortInventoryAssignStateMergePatched(WorkEffortInventoryAssignEventId eventId) {
            super(eventId);
        }
    }

}

