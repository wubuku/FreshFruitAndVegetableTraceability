// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.document;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class DocumentStateDto {

    private String documentId;

    public String getDocumentId()
    {
        return this.documentId;
    }

    public void setDocumentId(String documentId)
    {
        this.documentId = documentId;
    }

    private String documentTypeId;

    public String getDocumentTypeId()
    {
        return this.documentTypeId;
    }

    public void setDocumentTypeId(String documentTypeId)
    {
        this.documentTypeId = documentTypeId;
    }

    private String comments;

    public String getComments()
    {
        return this.comments;
    }

    public void setComments(String comments)
    {
        this.comments = comments;
    }

    private String documentLocation;

    public String getDocumentLocation()
    {
        return this.documentLocation;
    }

    public void setDocumentLocation(String documentLocation)
    {
        this.documentLocation = documentLocation;
    }

    private String documentText;

    public String getDocumentText()
    {
        return this.documentText;
    }

    public void setDocumentText(String documentText)
    {
        this.documentText = documentText;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public DocumentStateDto[] toDocumentStateDtoArray(Iterable<DocumentState> states) {
            return toDocumentStateDtoList(states).toArray(new DocumentStateDto[0]);
        }

        public List<DocumentStateDto> toDocumentStateDtoList(Iterable<DocumentState> states) {
            ArrayList<DocumentStateDto> stateDtos = new ArrayList();
            for (DocumentState s : states) {
                DocumentStateDto dto = toDocumentStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public DocumentStateDto toDocumentStateDto(DocumentState state)
        {
            if(state == null) {
                return null;
            }
            DocumentStateDto dto = new DocumentStateDto();
            if (returnedFieldsContains("DocumentId")) {
                dto.setDocumentId(state.getDocumentId());
            }
            if (returnedFieldsContains("DocumentTypeId")) {
                dto.setDocumentTypeId(state.getDocumentTypeId());
            }
            if (returnedFieldsContains("Comments")) {
                dto.setComments(state.getComments());
            }
            if (returnedFieldsContains("DocumentLocation")) {
                dto.setDocumentLocation(state.getDocumentLocation());
            }
            if (returnedFieldsContains("DocumentText")) {
                dto.setDocumentText(state.getDocumentText());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

