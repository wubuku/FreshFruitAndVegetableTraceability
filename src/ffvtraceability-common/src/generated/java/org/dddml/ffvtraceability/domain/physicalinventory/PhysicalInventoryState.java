// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.physicalinventory;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;

public interface PhysicalInventoryState
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getPhysicalInventoryId();

    OffsetDateTime getPhysicalInventoryDate();

    String getPartyId();

    String getGeneralComments();

    Long getVersion();

    String getCreatedBy();

    OffsetDateTime getCreatedAt();

    String getUpdatedBy();

    OffsetDateTime getUpdatedAt();

    String getTenantId();

    EntityStateCollection<String, InventoryItemVarianceState> getInventoryItemVariances();

    interface MutablePhysicalInventoryState extends PhysicalInventoryState {
        void setPhysicalInventoryId(String physicalInventoryId);

        void setPhysicalInventoryDate(OffsetDateTime physicalInventoryDate);

        void setPartyId(String partyId);

        void setGeneralComments(String generalComments);

        void setVersion(Long version);

        void setCreatedBy(String createdBy);

        void setCreatedAt(OffsetDateTime createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(OffsetDateTime updatedAt);

        void setTenantId(String tenantId);

        EntityStateCollection.MutableEntityStateCollection<String, InventoryItemVarianceState> getInventoryItemVariances();


        void mutate(Event e);

        //void when(PhysicalInventoryEvent.PhysicalInventoryStateCreated e);

        //void when(PhysicalInventoryEvent.PhysicalInventoryStateMergePatched e);

    }

    interface SqlPhysicalInventoryState extends MutablePhysicalInventoryState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

