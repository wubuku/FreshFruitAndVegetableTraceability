// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.productcategory;

import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;

public class CreateOrMergePatchProductCategoryDto extends AbstractProductCategoryCommandDto implements ProductCategoryCommand.CreateOrMergePatchProductCategory {

    /**
     * Product Category Type Id
     */
    private String productCategoryTypeId;

    public String getProductCategoryTypeId()
    {
        return this.productCategoryTypeId;
    }

    public void setProductCategoryTypeId(String productCategoryTypeId)
    {
        this.productCategoryTypeId = productCategoryTypeId;
    }

    /**
     * Primary Parent Category Id
     */
    private String primaryParentCategoryId;

    public String getPrimaryParentCategoryId()
    {
        return this.primaryParentCategoryId;
    }

    public void setPrimaryParentCategoryId(String primaryParentCategoryId)
    {
        this.primaryParentCategoryId = primaryParentCategoryId;
    }

    /**
     * Category Name
     */
    private String categoryName;

    public String getCategoryName()
    {
        return this.categoryName;
    }

    public void setCategoryName(String categoryName)
    {
        this.categoryName = categoryName;
    }

    /**
     * Description
     */
    private String description;

    public String getDescription()
    {
        return this.description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    /**
     * Category Image Url
     */
    private String categoryImageUrl;

    public String getCategoryImageUrl()
    {
        return this.categoryImageUrl;
    }

    public void setCategoryImageUrl(String categoryImageUrl)
    {
        this.categoryImageUrl = categoryImageUrl;
    }

    /**
     * Detail Screen
     */
    private String detailScreen;

    public String getDetailScreen()
    {
        return this.detailScreen;
    }

    public void setDetailScreen(String detailScreen)
    {
        this.detailScreen = detailScreen;
    }

    /**
     * Show In Select
     */
    private Boolean showInSelect;

    public Boolean getShowInSelect()
    {
        return this.showInSelect;
    }

    public void setShowInSelect(Boolean showInSelect)
    {
        this.showInSelect = showInSelect;
    }


    private Boolean isPropertyProductCategoryTypeIdRemoved;

    public Boolean getIsPropertyProductCategoryTypeIdRemoved()
    {
        return this.isPropertyProductCategoryTypeIdRemoved;
    }

    public void setIsPropertyProductCategoryTypeIdRemoved(Boolean removed)
    {
        this.isPropertyProductCategoryTypeIdRemoved = removed;
    }

    private Boolean isPropertyPrimaryParentCategoryIdRemoved;

    public Boolean getIsPropertyPrimaryParentCategoryIdRemoved()
    {
        return this.isPropertyPrimaryParentCategoryIdRemoved;
    }

    public void setIsPropertyPrimaryParentCategoryIdRemoved(Boolean removed)
    {
        this.isPropertyPrimaryParentCategoryIdRemoved = removed;
    }

    private Boolean isPropertyCategoryNameRemoved;

    public Boolean getIsPropertyCategoryNameRemoved()
    {
        return this.isPropertyCategoryNameRemoved;
    }

    public void setIsPropertyCategoryNameRemoved(Boolean removed)
    {
        this.isPropertyCategoryNameRemoved = removed;
    }

    private Boolean isPropertyDescriptionRemoved;

    public Boolean getIsPropertyDescriptionRemoved()
    {
        return this.isPropertyDescriptionRemoved;
    }

    public void setIsPropertyDescriptionRemoved(Boolean removed)
    {
        this.isPropertyDescriptionRemoved = removed;
    }

    private Boolean isPropertyCategoryImageUrlRemoved;

    public Boolean getIsPropertyCategoryImageUrlRemoved()
    {
        return this.isPropertyCategoryImageUrlRemoved;
    }

    public void setIsPropertyCategoryImageUrlRemoved(Boolean removed)
    {
        this.isPropertyCategoryImageUrlRemoved = removed;
    }

    private Boolean isPropertyDetailScreenRemoved;

    public Boolean getIsPropertyDetailScreenRemoved()
    {
        return this.isPropertyDetailScreenRemoved;
    }

    public void setIsPropertyDetailScreenRemoved(Boolean removed)
    {
        this.isPropertyDetailScreenRemoved = removed;
    }

    private Boolean isPropertyShowInSelectRemoved;

    public Boolean getIsPropertyShowInSelectRemoved()
    {
        return this.isPropertyShowInSelectRemoved;
    }

    public void setIsPropertyShowInSelectRemoved(Boolean removed)
    {
        this.isPropertyShowInSelectRemoved = removed;
    }

    public void copyTo(CreateOrMergePatchProductCategory command)
    {
        ((AbstractProductCategoryCommandDto) this).copyTo(command);
        command.setProductCategoryTypeId(this.getProductCategoryTypeId());
        command.setPrimaryParentCategoryId(this.getPrimaryParentCategoryId());
        command.setCategoryName(this.getCategoryName());
        command.setDescription(this.getDescription());
        command.setCategoryImageUrl(this.getCategoryImageUrl());
        command.setDetailScreen(this.getDetailScreen());
        command.setShowInSelect(this.getShowInSelect());
    }

    public ProductCategoryCommand toCommand()
    {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType())) {
            AbstractProductCategoryCommand.SimpleCreateProductCategory command = new AbstractProductCategoryCommand.SimpleCreateProductCategory();
            copyTo((AbstractProductCategoryCommand.AbstractCreateProductCategory) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            AbstractProductCategoryCommand.SimpleMergePatchProductCategory command = new AbstractProductCategoryCommand.SimpleMergePatchProductCategory();
            copyTo((AbstractProductCategoryCommand.SimpleMergePatchProductCategory) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }


    public ProductCategoryCommand toSubclass() {
        if (getCommandType() == null) {
            setCommandType(COMMAND_TYPE_MERGE_PATCH);
        }
        if (COMMAND_TYPE_CREATE.equals(getCommandType()) || null == getCommandType()) {
            CreateProductCategoryDto command = new CreateProductCategoryDto();
            copyTo((CreateProductCategory) command);
            return command;
        } else if (COMMAND_TYPE_MERGE_PATCH.equals(getCommandType())) {
            MergePatchProductCategoryDto command = new MergePatchProductCategoryDto();
            copyTo((MergePatchProductCategory) command);
            return command;
        } 
        throw new UnsupportedOperationException("Unknown command type:" + getCommandType());
    }

    public void copyTo(CreateProductCategory command)
    {
        copyTo((CreateOrMergePatchProductCategory) command);
    }

    public void copyTo(MergePatchProductCategory command)
    {
        copyTo((CreateOrMergePatchProductCategory) command);
        command.setIsPropertyProductCategoryTypeIdRemoved(this.getIsPropertyProductCategoryTypeIdRemoved());
        command.setIsPropertyPrimaryParentCategoryIdRemoved(this.getIsPropertyPrimaryParentCategoryIdRemoved());
        command.setIsPropertyCategoryNameRemoved(this.getIsPropertyCategoryNameRemoved());
        command.setIsPropertyDescriptionRemoved(this.getIsPropertyDescriptionRemoved());
        command.setIsPropertyCategoryImageUrlRemoved(this.getIsPropertyCategoryImageUrlRemoved());
        command.setIsPropertyDetailScreenRemoved(this.getIsPropertyDetailScreenRemoved());
        command.setIsPropertyShowInSelectRemoved(this.getIsPropertyShowInSelectRemoved());
    }

    public static class CreateProductCategoryDto extends CreateOrMergePatchProductCategoryDto implements ProductCategoryCommand.CreateProductCategory
    {
        public CreateProductCategoryDto() {
            this.commandType = COMMAND_TYPE_CREATE;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }
        public ProductCategoryCommand.CreateProductCategory toCreateProductCategory()
        {
            return (ProductCategoryCommand.CreateProductCategory) toCommand();
        }

    }

    public static class MergePatchProductCategoryDto extends CreateOrMergePatchProductCategoryDto implements ProductCategoryCommand.MergePatchProductCategory
    {
        public MergePatchProductCategoryDto() {
            this.commandType = COMMAND_TYPE_MERGE_PATCH;
        }

        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }
        public ProductCategoryCommand.MergePatchProductCategory toMergePatchProductCategory()
        {
            return (ProductCategoryCommand.MergePatchProductCategory) toCommand();
        }

    }

}

