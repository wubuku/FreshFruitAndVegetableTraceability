// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.order;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractOrderContactMechEvent extends AbstractEvent implements OrderContactMechEvent.SqlOrderContactMechEvent {
    private OrderContactMechEventId orderContactMechEventId = new OrderContactMechEventId();

    public OrderContactMechEventId getOrderContactMechEventId() {
        return this.orderContactMechEventId;
    }

    public void setOrderContactMechEventId(OrderContactMechEventId eventId) {
        this.orderContactMechEventId = eventId;
    }
    
    public String getContactMechPurposeTypeId() {
        return getOrderContactMechEventId().getContactMechPurposeTypeId();
    }

    public void setContactMechPurposeTypeId(String contactMechPurposeTypeId) {
        getOrderContactMechEventId().setContactMechPurposeTypeId(contactMechPurposeTypeId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    protected AbstractOrderContactMechEvent() {
    }

    protected AbstractOrderContactMechEvent(OrderContactMechEventId eventId) {
        this.orderContactMechEventId = eventId;
    }


    public abstract String getEventType();


    public static abstract class AbstractOrderContactMechStateEvent extends AbstractOrderContactMechEvent implements OrderContactMechEvent.OrderContactMechStateEvent {
        private Long version;

        public Long getVersion()
        {
            return this.version;
        }

        public void setVersion(Long version)
        {
            this.version = version;
        }

        private String contactMechId;

        public String getContactMechId()
        {
            return this.contactMechId;
        }

        public void setContactMechId(String contactMechId)
        {
            this.contactMechId = contactMechId;
        }

        protected AbstractOrderContactMechStateEvent(OrderContactMechEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractOrderContactMechStateCreated extends AbstractOrderContactMechStateEvent implements OrderContactMechEvent.OrderContactMechStateCreated
    {
        public AbstractOrderContactMechStateCreated() {
            this(new OrderContactMechEventId());
        }

        public AbstractOrderContactMechStateCreated(OrderContactMechEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractOrderContactMechStateMergePatched extends AbstractOrderContactMechStateEvent implements OrderContactMechEvent.OrderContactMechStateMergePatched
    {
        public AbstractOrderContactMechStateMergePatched() {
            this(new OrderContactMechEventId());
        }

        public AbstractOrderContactMechStateMergePatched(OrderContactMechEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyContactMechIdRemoved;

        public Boolean getIsPropertyContactMechIdRemoved() {
            return this.isPropertyContactMechIdRemoved;
        }

        public void setIsPropertyContactMechIdRemoved(Boolean removed) {
            this.isPropertyContactMechIdRemoved = removed;
        }


    }


    public static abstract class AbstractOrderContactMechStateRemoved extends AbstractOrderContactMechStateEvent implements OrderContactMechEvent.OrderContactMechStateRemoved
    {
        public AbstractOrderContactMechStateRemoved() {
            this(new OrderContactMechEventId());
        }

        public AbstractOrderContactMechStateRemoved(OrderContactMechEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.REMOVED;
        }

    }

    public static class SimpleOrderContactMechStateCreated extends AbstractOrderContactMechStateCreated
    {
        public SimpleOrderContactMechStateCreated() {
        }

        public SimpleOrderContactMechStateCreated(OrderContactMechEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleOrderContactMechStateMergePatched extends AbstractOrderContactMechStateMergePatched
    {
        public SimpleOrderContactMechStateMergePatched() {
        }

        public SimpleOrderContactMechStateMergePatched(OrderContactMechEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleOrderContactMechStateRemoved extends AbstractOrderContactMechStateRemoved
    {
        public SimpleOrderContactMechStateRemoved() {
        }

        public SimpleOrderContactMechStateRemoved(OrderContactMechEventId eventId) {
            super(eventId);
        }
    }

}

