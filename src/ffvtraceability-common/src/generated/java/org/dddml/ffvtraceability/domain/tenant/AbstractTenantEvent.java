// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.tenant;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractTenantEvent extends AbstractEvent implements TenantEvent.SqlTenantEvent {
    private TenantEventId tenantEventId = new TenantEventId();

    public TenantEventId getTenantEventId() {
        return this.tenantEventId;
    }

    public void setTenantEventId(TenantEventId eventId) {
        this.tenantEventId = eventId;
    }
    
    public String getTenantId() {
        return getTenantEventId().getTenantId();
    }

    public void setTenantId(String tenantId) {
        getTenantEventId().setTenantId(tenantId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getTenantEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getTenantEventId().setVersion(version);
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractTenantEvent() {
    }

    protected AbstractTenantEvent(TenantEventId eventId) {
        this.tenantEventId = eventId;
    }


    public abstract String getEventType();

    public static class TenantLobEvent extends AbstractTenantEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "TenantLobEvent";
        }

    }


    public static abstract class AbstractTenantStateEvent extends AbstractTenantEvent implements TenantEvent.TenantStateEvent {
        private String partyId;

        public String getPartyId()
        {
            return this.partyId;
        }

        public void setPartyId(String partyId)
        {
            this.partyId = partyId;
        }

        private String timeZoneId;

        public String getTimeZoneId()
        {
            return this.timeZoneId;
        }

        public void setTimeZoneId(String timeZoneId)
        {
            this.timeZoneId = timeZoneId;
        }

        private String dateTimeFormat;

        public String getDateTimeFormat()
        {
            return this.dateTimeFormat;
        }

        public void setDateTimeFormat(String dateTimeFormat)
        {
            this.dateTimeFormat = dateTimeFormat;
        }

        private String description;

        public String getDescription()
        {
            return this.description;
        }

        public void setDescription(String description)
        {
            this.description = description;
        }

        private String longDescription;

        public String getLongDescription()
        {
            return this.longDescription;
        }

        public void setLongDescription(String longDescription)
        {
            this.longDescription = longDescription;
        }

        protected AbstractTenantStateEvent(TenantEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractTenantStateCreated extends AbstractTenantStateEvent implements TenantEvent.TenantStateCreated
    {
        public AbstractTenantStateCreated() {
            this(new TenantEventId());
        }

        public AbstractTenantStateCreated(TenantEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractTenantStateMergePatched extends AbstractTenantStateEvent implements TenantEvent.TenantStateMergePatched
    {
        public AbstractTenantStateMergePatched() {
            this(new TenantEventId());
        }

        public AbstractTenantStateMergePatched(TenantEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyPartyIdRemoved;

        public Boolean getIsPropertyPartyIdRemoved() {
            return this.isPropertyPartyIdRemoved;
        }

        public void setIsPropertyPartyIdRemoved(Boolean removed) {
            this.isPropertyPartyIdRemoved = removed;
        }

        private Boolean isPropertyTimeZoneIdRemoved;

        public Boolean getIsPropertyTimeZoneIdRemoved() {
            return this.isPropertyTimeZoneIdRemoved;
        }

        public void setIsPropertyTimeZoneIdRemoved(Boolean removed) {
            this.isPropertyTimeZoneIdRemoved = removed;
        }

        private Boolean isPropertyDateTimeFormatRemoved;

        public Boolean getIsPropertyDateTimeFormatRemoved() {
            return this.isPropertyDateTimeFormatRemoved;
        }

        public void setIsPropertyDateTimeFormatRemoved(Boolean removed) {
            this.isPropertyDateTimeFormatRemoved = removed;
        }

        private Boolean isPropertyDescriptionRemoved;

        public Boolean getIsPropertyDescriptionRemoved() {
            return this.isPropertyDescriptionRemoved;
        }

        public void setIsPropertyDescriptionRemoved(Boolean removed) {
            this.isPropertyDescriptionRemoved = removed;
        }

        private Boolean isPropertyLongDescriptionRemoved;

        public Boolean getIsPropertyLongDescriptionRemoved() {
            return this.isPropertyLongDescriptionRemoved;
        }

        public void setIsPropertyLongDescriptionRemoved(Boolean removed) {
            this.isPropertyLongDescriptionRemoved = removed;
        }


    }



    public static class SimpleTenantStateCreated extends AbstractTenantStateCreated
    {
        public SimpleTenantStateCreated() {
        }

        public SimpleTenantStateCreated(TenantEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleTenantStateMergePatched extends AbstractTenantStateMergePatched
    {
        public SimpleTenantStateMergePatched() {
        }

        public SimpleTenantStateMergePatched(TenantEventId eventId) {
            super(eventId);
        }
    }

}

