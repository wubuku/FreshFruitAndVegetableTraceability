// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.inventoryitem;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;

public interface InventoryItemState
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getInventoryItemId();

    String getInventoryItemTypeId();

    String getProductId();

    String getPartyId();

    String getOwnerPartyId();

    String getStatusId();

    OffsetDateTime getDatetimeReceived();

    OffsetDateTime getDatetimeManufactured();

    OffsetDateTime getExpireDate();

    String getFacilityId();

    String getContainerId();

    String getLotId();

    String getUomId();

    String getBinNumber();

    String getLocationSeqId();

    String getComments();

    java.math.BigDecimal getQuantityOnHandTotal();

    java.math.BigDecimal getAvailableToPromiseTotal();

    java.math.BigDecimal getAccountingQuantityTotal();

    String getSerialNumber();

    String getSoftIdentifier();

    String getActivationNumber();

    OffsetDateTime getActivationValidThru();

    java.math.BigDecimal getUnitCost();

    String getCurrencyUomId();

    String getFixedAssetId();

    String getInventoryItemAttributeHash();

    Long getVersion();

    String getCreatedBy();

    OffsetDateTime getCreatedAt();

    String getUpdatedBy();

    OffsetDateTime getUpdatedAt();

    EntityStateCollection<String, InventoryItemDetailState> getDetails();

    interface MutableInventoryItemState extends InventoryItemState {
        void setInventoryItemId(String inventoryItemId);

        void setInventoryItemTypeId(String inventoryItemTypeId);

        void setProductId(String productId);

        void setPartyId(String partyId);

        void setOwnerPartyId(String ownerPartyId);

        void setStatusId(String statusId);

        void setDatetimeReceived(OffsetDateTime datetimeReceived);

        void setDatetimeManufactured(OffsetDateTime datetimeManufactured);

        void setExpireDate(OffsetDateTime expireDate);

        void setFacilityId(String facilityId);

        void setContainerId(String containerId);

        void setLotId(String lotId);

        void setUomId(String uomId);

        void setBinNumber(String binNumber);

        void setLocationSeqId(String locationSeqId);

        void setComments(String comments);

        void setQuantityOnHandTotal(java.math.BigDecimal quantityOnHandTotal);

        void setAvailableToPromiseTotal(java.math.BigDecimal availableToPromiseTotal);

        void setAccountingQuantityTotal(java.math.BigDecimal accountingQuantityTotal);

        void setSerialNumber(String serialNumber);

        void setSoftIdentifier(String softIdentifier);

        void setActivationNumber(String activationNumber);

        void setActivationValidThru(OffsetDateTime activationValidThru);

        void setUnitCost(java.math.BigDecimal unitCost);

        void setCurrencyUomId(String currencyUomId);

        void setFixedAssetId(String fixedAssetId);

        void setInventoryItemAttributeHash(String inventoryItemAttributeHash);

        void setVersion(Long version);

        void setCreatedBy(String createdBy);

        void setCreatedAt(OffsetDateTime createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(OffsetDateTime updatedAt);


        void mutate(Event e);

        //void when(InventoryItemEvent.InventoryItemStateCreated e);

        //void when(InventoryItemEvent.InventoryItemStateMergePatched e);

    }

    interface SqlInventoryItemState extends MutableInventoryItemState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

