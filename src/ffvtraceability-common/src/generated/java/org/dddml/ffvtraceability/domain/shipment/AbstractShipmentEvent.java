// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.shipment;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractShipmentEvent extends AbstractEvent implements ShipmentEvent.SqlShipmentEvent {
    private ShipmentEventId shipmentEventId = new ShipmentEventId();

    public ShipmentEventId getShipmentEventId() {
        return this.shipmentEventId;
    }

    public void setShipmentEventId(ShipmentEventId eventId) {
        this.shipmentEventId = eventId;
    }
    
    public String getShipmentId() {
        return getShipmentEventId().getShipmentId();
    }

    public void setShipmentId(String shipmentId) {
        getShipmentEventId().setShipmentId(shipmentId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getShipmentEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getShipmentEventId().setVersion(version);
    }

    private String tenantId;

    public String getTenantId() {
        return this.tenantId;
    }

    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractShipmentEvent() {
    }

    protected AbstractShipmentEvent(ShipmentEventId eventId) {
        this.shipmentEventId = eventId;
    }

    protected ShipmentItemEventDao getShipmentItemEventDao() {
        return (ShipmentItemEventDao)ApplicationContext.current.get("shipmentItemEventDao");
    }

    protected ShipmentItemEventId newShipmentItemEventId(String shipmentItemSeqId)
    {
        ShipmentItemEventId eventId = new ShipmentItemEventId(this.getShipmentEventId().getShipmentId(), 
            shipmentItemSeqId, 
            this.getShipmentEventId().getVersion());
        return eventId;
    }

    protected void throwOnInconsistentEventIds(ShipmentItemEvent.SqlShipmentItemEvent e)
    {
        throwOnInconsistentEventIds(this, e);
    }

    public static void throwOnInconsistentEventIds(ShipmentEvent.SqlShipmentEvent oe, ShipmentItemEvent.SqlShipmentItemEvent e)
    {
        if (!oe.getShipmentEventId().getShipmentId().equals(e.getShipmentItemEventId().getShipmentId()))
        { 
            throw DomainError.named("inconsistentEventIds", "Outer Id ShipmentId %1$s but inner id ShipmentId %2$s", 
                oe.getShipmentEventId().getShipmentId(), e.getShipmentItemEventId().getShipmentId());
        }
    }

    protected ShipmentPackageEventDao getShipmentPackageEventDao() {
        return (ShipmentPackageEventDao)ApplicationContext.current.get("shipmentPackageEventDao");
    }

    protected ShipmentPackageEventId newShipmentPackageEventId(String shipmentPackageSeqId)
    {
        ShipmentPackageEventId eventId = new ShipmentPackageEventId(this.getShipmentEventId().getShipmentId(), 
            shipmentPackageSeqId, 
            this.getShipmentEventId().getVersion());
        return eventId;
    }

    protected void throwOnInconsistentEventIds(ShipmentPackageEvent.SqlShipmentPackageEvent e)
    {
        throwOnInconsistentEventIds(this, e);
    }

    public static void throwOnInconsistentEventIds(ShipmentEvent.SqlShipmentEvent oe, ShipmentPackageEvent.SqlShipmentPackageEvent e)
    {
        if (!oe.getShipmentEventId().getShipmentId().equals(e.getShipmentPackageEventId().getShipmentId()))
        { 
            throw DomainError.named("inconsistentEventIds", "Outer Id ShipmentId %1$s but inner id ShipmentId %2$s", 
                oe.getShipmentEventId().getShipmentId(), e.getShipmentPackageEventId().getShipmentId());
        }
    }

    public ShipmentItemEvent.ShipmentItemStateCreated newShipmentItemStateCreated(String shipmentItemSeqId) {
        return new AbstractShipmentItemEvent.SimpleShipmentItemStateCreated(newShipmentItemEventId(shipmentItemSeqId));
    }

    public ShipmentItemEvent.ShipmentItemStateMergePatched newShipmentItemStateMergePatched(String shipmentItemSeqId) {
        return new AbstractShipmentItemEvent.SimpleShipmentItemStateMergePatched(newShipmentItemEventId(shipmentItemSeqId));
    }

    public ShipmentPackageEvent.ShipmentPackageStateCreated newShipmentPackageStateCreated(String shipmentPackageSeqId) {
        return new AbstractShipmentPackageEvent.SimpleShipmentPackageStateCreated(newShipmentPackageEventId(shipmentPackageSeqId));
    }

    public ShipmentPackageEvent.ShipmentPackageStateMergePatched newShipmentPackageStateMergePatched(String shipmentPackageSeqId) {
        return new AbstractShipmentPackageEvent.SimpleShipmentPackageStateMergePatched(newShipmentPackageEventId(shipmentPackageSeqId));
    }


    public abstract String getEventType();

    public static class ShipmentLobEvent extends AbstractShipmentEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "ShipmentLobEvent";
        }

    }

    public static class ShipmentActionEvent extends ShipmentLobEvent implements ShipmentEvent.ShipmentActionEvent {

        @Override
        public String getEventType() {
            return "ShipmentActionEvent";
        }

        public String getValue() {
            Object val = getDynamicProperties().get("value");
            if (val instanceof String) {
                return (String) val;
            }
            return ApplicationContext.current.getTypeConverter().convertValue(val, String.class);
        }

        public void setValue(String value) {
            getDynamicProperties().put("value", value);
        }

    }

    public static class ShipmentQaActionEvent extends ShipmentLobEvent implements ShipmentEvent.ShipmentQaActionEvent {

        @Override
        public String getEventType() {
            return "ShipmentQaActionEvent";
        }

        public String getValue() {
            Object val = getDynamicProperties().get("value");
            if (val instanceof String) {
                return (String) val;
            }
            return ApplicationContext.current.getTypeConverter().convertValue(val, String.class);
        }

        public void setValue(String value) {
            getDynamicProperties().put("value", value);
        }

    }


    public static abstract class AbstractShipmentStateEvent extends AbstractShipmentEvent implements ShipmentEvent.ShipmentStateEvent {
        private String shipmentTypeId;

        public String getShipmentTypeId()
        {
            return this.shipmentTypeId;
        }

        public void setShipmentTypeId(String shipmentTypeId)
        {
            this.shipmentTypeId = shipmentTypeId;
        }

        private String statusId;

        public String getStatusId()
        {
            return this.statusId;
        }

        public void setStatusId(String statusId)
        {
            this.statusId = statusId;
        }

        private String qaStatusId;

        public String getQaStatusId()
        {
            return this.qaStatusId;
        }

        public void setQaStatusId(String qaStatusId)
        {
            this.qaStatusId = qaStatusId;
        }

        private String primaryOrderId;

        public String getPrimaryOrderId()
        {
            return this.primaryOrderId;
        }

        public void setPrimaryOrderId(String primaryOrderId)
        {
            this.primaryOrderId = primaryOrderId;
        }

        private String primaryReturnId;

        public String getPrimaryReturnId()
        {
            return this.primaryReturnId;
        }

        public void setPrimaryReturnId(String primaryReturnId)
        {
            this.primaryReturnId = primaryReturnId;
        }

        private String primaryShipGroupSeqId;

        public String getPrimaryShipGroupSeqId()
        {
            return this.primaryShipGroupSeqId;
        }

        public void setPrimaryShipGroupSeqId(String primaryShipGroupSeqId)
        {
            this.primaryShipGroupSeqId = primaryShipGroupSeqId;
        }

        private String picklistBinId;

        public String getPicklistBinId()
        {
            return this.picklistBinId;
        }

        public void setPicklistBinId(String picklistBinId)
        {
            this.picklistBinId = picklistBinId;
        }

        private OffsetDateTime estimatedReadyDate;

        public OffsetDateTime getEstimatedReadyDate()
        {
            return this.estimatedReadyDate;
        }

        public void setEstimatedReadyDate(OffsetDateTime estimatedReadyDate)
        {
            this.estimatedReadyDate = estimatedReadyDate;
        }

        private OffsetDateTime estimatedShipDate;

        public OffsetDateTime getEstimatedShipDate()
        {
            return this.estimatedShipDate;
        }

        public void setEstimatedShipDate(OffsetDateTime estimatedShipDate)
        {
            this.estimatedShipDate = estimatedShipDate;
        }

        private String estimatedShipWorkEffId;

        public String getEstimatedShipWorkEffId()
        {
            return this.estimatedShipWorkEffId;
        }

        public void setEstimatedShipWorkEffId(String estimatedShipWorkEffId)
        {
            this.estimatedShipWorkEffId = estimatedShipWorkEffId;
        }

        private OffsetDateTime estimatedArrivalDate;

        public OffsetDateTime getEstimatedArrivalDate()
        {
            return this.estimatedArrivalDate;
        }

        public void setEstimatedArrivalDate(OffsetDateTime estimatedArrivalDate)
        {
            this.estimatedArrivalDate = estimatedArrivalDate;
        }

        private String estimatedArrivalWorkEffId;

        public String getEstimatedArrivalWorkEffId()
        {
            return this.estimatedArrivalWorkEffId;
        }

        public void setEstimatedArrivalWorkEffId(String estimatedArrivalWorkEffId)
        {
            this.estimatedArrivalWorkEffId = estimatedArrivalWorkEffId;
        }

        private OffsetDateTime latestCancelDate;

        public OffsetDateTime getLatestCancelDate()
        {
            return this.latestCancelDate;
        }

        public void setLatestCancelDate(OffsetDateTime latestCancelDate)
        {
            this.latestCancelDate = latestCancelDate;
        }

        private java.math.BigDecimal estimatedShipCost;

        public java.math.BigDecimal getEstimatedShipCost()
        {
            return this.estimatedShipCost;
        }

        public void setEstimatedShipCost(java.math.BigDecimal estimatedShipCost)
        {
            this.estimatedShipCost = estimatedShipCost;
        }

        private String currencyUomId;

        public String getCurrencyUomId()
        {
            return this.currencyUomId;
        }

        public void setCurrencyUomId(String currencyUomId)
        {
            this.currencyUomId = currencyUomId;
        }

        private String handlingInstructions;

        public String getHandlingInstructions()
        {
            return this.handlingInstructions;
        }

        public void setHandlingInstructions(String handlingInstructions)
        {
            this.handlingInstructions = handlingInstructions;
        }

        private String originFacilityId;

        public String getOriginFacilityId()
        {
            return this.originFacilityId;
        }

        public void setOriginFacilityId(String originFacilityId)
        {
            this.originFacilityId = originFacilityId;
        }

        private String destinationFacilityId;

        public String getDestinationFacilityId()
        {
            return this.destinationFacilityId;
        }

        public void setDestinationFacilityId(String destinationFacilityId)
        {
            this.destinationFacilityId = destinationFacilityId;
        }

        private String originContactMechId;

        public String getOriginContactMechId()
        {
            return this.originContactMechId;
        }

        public void setOriginContactMechId(String originContactMechId)
        {
            this.originContactMechId = originContactMechId;
        }

        private String originTelecomNumberId;

        public String getOriginTelecomNumberId()
        {
            return this.originTelecomNumberId;
        }

        public void setOriginTelecomNumberId(String originTelecomNumberId)
        {
            this.originTelecomNumberId = originTelecomNumberId;
        }

        private String destinationContactMechId;

        public String getDestinationContactMechId()
        {
            return this.destinationContactMechId;
        }

        public void setDestinationContactMechId(String destinationContactMechId)
        {
            this.destinationContactMechId = destinationContactMechId;
        }

        private String destinationTelecomNumberId;

        public String getDestinationTelecomNumberId()
        {
            return this.destinationTelecomNumberId;
        }

        public void setDestinationTelecomNumberId(String destinationTelecomNumberId)
        {
            this.destinationTelecomNumberId = destinationTelecomNumberId;
        }

        private String partyIdTo;

        public String getPartyIdTo()
        {
            return this.partyIdTo;
        }

        public void setPartyIdTo(String partyIdTo)
        {
            this.partyIdTo = partyIdTo;
        }

        private String partyIdFrom;

        public String getPartyIdFrom()
        {
            return this.partyIdFrom;
        }

        public void setPartyIdFrom(String partyIdFrom)
        {
            this.partyIdFrom = partyIdFrom;
        }

        private java.math.BigDecimal additionalShippingCharge;

        public java.math.BigDecimal getAdditionalShippingCharge()
        {
            return this.additionalShippingCharge;
        }

        public void setAdditionalShippingCharge(java.math.BigDecimal additionalShippingCharge)
        {
            this.additionalShippingCharge = additionalShippingCharge;
        }

        private String addtlShippingChargeDesc;

        public String getAddtlShippingChargeDesc()
        {
            return this.addtlShippingChargeDesc;
        }

        public void setAddtlShippingChargeDesc(String addtlShippingChargeDesc)
        {
            this.addtlShippingChargeDesc = addtlShippingChargeDesc;
        }

        private String receivedBy;

        public String getReceivedBy()
        {
            return this.receivedBy;
        }

        public void setReceivedBy(String receivedBy)
        {
            this.receivedBy = receivedBy;
        }

        private OffsetDateTime datetimeReceived;

        public OffsetDateTime getDatetimeReceived()
        {
            return this.datetimeReceived;
        }

        public void setDatetimeReceived(OffsetDateTime datetimeReceived)
        {
            this.datetimeReceived = datetimeReceived;
        }

        protected AbstractShipmentStateEvent(ShipmentEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractShipmentStateCreated extends AbstractShipmentStateEvent implements ShipmentEvent.ShipmentStateCreated, Saveable
    {
        public AbstractShipmentStateCreated() {
            this(new ShipmentEventId());
        }

        public AbstractShipmentStateCreated(ShipmentEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

        private Map<ShipmentItemEventId, ShipmentItemEvent.ShipmentItemStateCreated> shipmentItemEvents = new HashMap<ShipmentItemEventId, ShipmentItemEvent.ShipmentItemStateCreated>();
        
        private Iterable<ShipmentItemEvent.ShipmentItemStateCreated> readOnlyShipmentItemEvents;

        public Iterable<ShipmentItemEvent.ShipmentItemStateCreated> getShipmentItemEvents()
        {
            if (!getEventReadOnly())
            {
                return this.shipmentItemEvents.values();
            }
            else
            {
                if (readOnlyShipmentItemEvents != null) { return readOnlyShipmentItemEvents; }
                ShipmentItemEventDao eventDao = getShipmentItemEventDao();
                List<ShipmentItemEvent.ShipmentItemStateCreated> eL = new ArrayList<ShipmentItemEvent.ShipmentItemStateCreated>();
                for (ShipmentItemEvent e : eventDao.findByShipmentEventId(this.getShipmentEventId()))
                {
                    ((ShipmentItemEvent.SqlShipmentItemEvent)e).setEventReadOnly(true);
                    eL.add((ShipmentItemEvent.ShipmentItemStateCreated)e);
                }
                return (readOnlyShipmentItemEvents = eL);
            }
        }

        public void setShipmentItemEvents(Iterable<ShipmentItemEvent.ShipmentItemStateCreated> es)
        {
            if (es != null)
            {
                for (ShipmentItemEvent.ShipmentItemStateCreated e : es)
                {
                    addShipmentItemEvent(e);
                }
            }
            else { this.shipmentItemEvents.clear(); }
        }
        
        public void addShipmentItemEvent(ShipmentItemEvent.ShipmentItemStateCreated e)
        {
            throwOnInconsistentEventIds((ShipmentItemEvent.SqlShipmentItemEvent)e);
            this.shipmentItemEvents.put(((ShipmentItemEvent.SqlShipmentItemEvent)e).getShipmentItemEventId(), e);
        }

        private Map<ShipmentPackageEventId, ShipmentPackageEvent.ShipmentPackageStateCreated> shipmentPackageEvents = new HashMap<ShipmentPackageEventId, ShipmentPackageEvent.ShipmentPackageStateCreated>();
        
        private Iterable<ShipmentPackageEvent.ShipmentPackageStateCreated> readOnlyShipmentPackageEvents;

        public Iterable<ShipmentPackageEvent.ShipmentPackageStateCreated> getShipmentPackageEvents()
        {
            if (!getEventReadOnly())
            {
                return this.shipmentPackageEvents.values();
            }
            else
            {
                if (readOnlyShipmentPackageEvents != null) { return readOnlyShipmentPackageEvents; }
                ShipmentPackageEventDao eventDao = getShipmentPackageEventDao();
                List<ShipmentPackageEvent.ShipmentPackageStateCreated> eL = new ArrayList<ShipmentPackageEvent.ShipmentPackageStateCreated>();
                for (ShipmentPackageEvent e : eventDao.findByShipmentEventId(this.getShipmentEventId()))
                {
                    ((ShipmentPackageEvent.SqlShipmentPackageEvent)e).setEventReadOnly(true);
                    eL.add((ShipmentPackageEvent.ShipmentPackageStateCreated)e);
                }
                return (readOnlyShipmentPackageEvents = eL);
            }
        }

        public void setShipmentPackageEvents(Iterable<ShipmentPackageEvent.ShipmentPackageStateCreated> es)
        {
            if (es != null)
            {
                for (ShipmentPackageEvent.ShipmentPackageStateCreated e : es)
                {
                    addShipmentPackageEvent(e);
                }
            }
            else { this.shipmentPackageEvents.clear(); }
        }
        
        public void addShipmentPackageEvent(ShipmentPackageEvent.ShipmentPackageStateCreated e)
        {
            throwOnInconsistentEventIds((ShipmentPackageEvent.SqlShipmentPackageEvent)e);
            this.shipmentPackageEvents.put(((ShipmentPackageEvent.SqlShipmentPackageEvent)e).getShipmentPackageEventId(), e);
        }

        public void save()
        {
            for (ShipmentItemEvent.ShipmentItemStateCreated e : this.getShipmentItemEvents()) {
                getShipmentItemEventDao().save(e);
            }
            for (ShipmentPackageEvent.ShipmentPackageStateCreated e : this.getShipmentPackageEvents()) {
                getShipmentPackageEventDao().save(e);
            }
        }
    }


    public static abstract class AbstractShipmentStateMergePatched extends AbstractShipmentStateEvent implements ShipmentEvent.ShipmentStateMergePatched, Saveable
    {
        public AbstractShipmentStateMergePatched() {
            this(new ShipmentEventId());
        }

        public AbstractShipmentStateMergePatched(ShipmentEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyShipmentTypeIdRemoved;

        public Boolean getIsPropertyShipmentTypeIdRemoved() {
            return this.isPropertyShipmentTypeIdRemoved;
        }

        public void setIsPropertyShipmentTypeIdRemoved(Boolean removed) {
            this.isPropertyShipmentTypeIdRemoved = removed;
        }

        private Boolean isPropertyStatusIdRemoved;

        public Boolean getIsPropertyStatusIdRemoved() {
            return this.isPropertyStatusIdRemoved;
        }

        public void setIsPropertyStatusIdRemoved(Boolean removed) {
            this.isPropertyStatusIdRemoved = removed;
        }

        private Boolean isPropertyQaStatusIdRemoved;

        public Boolean getIsPropertyQaStatusIdRemoved() {
            return this.isPropertyQaStatusIdRemoved;
        }

        public void setIsPropertyQaStatusIdRemoved(Boolean removed) {
            this.isPropertyQaStatusIdRemoved = removed;
        }

        private Boolean isPropertyPrimaryOrderIdRemoved;

        public Boolean getIsPropertyPrimaryOrderIdRemoved() {
            return this.isPropertyPrimaryOrderIdRemoved;
        }

        public void setIsPropertyPrimaryOrderIdRemoved(Boolean removed) {
            this.isPropertyPrimaryOrderIdRemoved = removed;
        }

        private Boolean isPropertyPrimaryReturnIdRemoved;

        public Boolean getIsPropertyPrimaryReturnIdRemoved() {
            return this.isPropertyPrimaryReturnIdRemoved;
        }

        public void setIsPropertyPrimaryReturnIdRemoved(Boolean removed) {
            this.isPropertyPrimaryReturnIdRemoved = removed;
        }

        private Boolean isPropertyPrimaryShipGroupSeqIdRemoved;

        public Boolean getIsPropertyPrimaryShipGroupSeqIdRemoved() {
            return this.isPropertyPrimaryShipGroupSeqIdRemoved;
        }

        public void setIsPropertyPrimaryShipGroupSeqIdRemoved(Boolean removed) {
            this.isPropertyPrimaryShipGroupSeqIdRemoved = removed;
        }

        private Boolean isPropertyPicklistBinIdRemoved;

        public Boolean getIsPropertyPicklistBinIdRemoved() {
            return this.isPropertyPicklistBinIdRemoved;
        }

        public void setIsPropertyPicklistBinIdRemoved(Boolean removed) {
            this.isPropertyPicklistBinIdRemoved = removed;
        }

        private Boolean isPropertyEstimatedReadyDateRemoved;

        public Boolean getIsPropertyEstimatedReadyDateRemoved() {
            return this.isPropertyEstimatedReadyDateRemoved;
        }

        public void setIsPropertyEstimatedReadyDateRemoved(Boolean removed) {
            this.isPropertyEstimatedReadyDateRemoved = removed;
        }

        private Boolean isPropertyEstimatedShipDateRemoved;

        public Boolean getIsPropertyEstimatedShipDateRemoved() {
            return this.isPropertyEstimatedShipDateRemoved;
        }

        public void setIsPropertyEstimatedShipDateRemoved(Boolean removed) {
            this.isPropertyEstimatedShipDateRemoved = removed;
        }

        private Boolean isPropertyEstimatedShipWorkEffIdRemoved;

        public Boolean getIsPropertyEstimatedShipWorkEffIdRemoved() {
            return this.isPropertyEstimatedShipWorkEffIdRemoved;
        }

        public void setIsPropertyEstimatedShipWorkEffIdRemoved(Boolean removed) {
            this.isPropertyEstimatedShipWorkEffIdRemoved = removed;
        }

        private Boolean isPropertyEstimatedArrivalDateRemoved;

        public Boolean getIsPropertyEstimatedArrivalDateRemoved() {
            return this.isPropertyEstimatedArrivalDateRemoved;
        }

        public void setIsPropertyEstimatedArrivalDateRemoved(Boolean removed) {
            this.isPropertyEstimatedArrivalDateRemoved = removed;
        }

        private Boolean isPropertyEstimatedArrivalWorkEffIdRemoved;

        public Boolean getIsPropertyEstimatedArrivalWorkEffIdRemoved() {
            return this.isPropertyEstimatedArrivalWorkEffIdRemoved;
        }

        public void setIsPropertyEstimatedArrivalWorkEffIdRemoved(Boolean removed) {
            this.isPropertyEstimatedArrivalWorkEffIdRemoved = removed;
        }

        private Boolean isPropertyLatestCancelDateRemoved;

        public Boolean getIsPropertyLatestCancelDateRemoved() {
            return this.isPropertyLatestCancelDateRemoved;
        }

        public void setIsPropertyLatestCancelDateRemoved(Boolean removed) {
            this.isPropertyLatestCancelDateRemoved = removed;
        }

        private Boolean isPropertyEstimatedShipCostRemoved;

        public Boolean getIsPropertyEstimatedShipCostRemoved() {
            return this.isPropertyEstimatedShipCostRemoved;
        }

        public void setIsPropertyEstimatedShipCostRemoved(Boolean removed) {
            this.isPropertyEstimatedShipCostRemoved = removed;
        }

        private Boolean isPropertyCurrencyUomIdRemoved;

        public Boolean getIsPropertyCurrencyUomIdRemoved() {
            return this.isPropertyCurrencyUomIdRemoved;
        }

        public void setIsPropertyCurrencyUomIdRemoved(Boolean removed) {
            this.isPropertyCurrencyUomIdRemoved = removed;
        }

        private Boolean isPropertyHandlingInstructionsRemoved;

        public Boolean getIsPropertyHandlingInstructionsRemoved() {
            return this.isPropertyHandlingInstructionsRemoved;
        }

        public void setIsPropertyHandlingInstructionsRemoved(Boolean removed) {
            this.isPropertyHandlingInstructionsRemoved = removed;
        }

        private Boolean isPropertyOriginFacilityIdRemoved;

        public Boolean getIsPropertyOriginFacilityIdRemoved() {
            return this.isPropertyOriginFacilityIdRemoved;
        }

        public void setIsPropertyOriginFacilityIdRemoved(Boolean removed) {
            this.isPropertyOriginFacilityIdRemoved = removed;
        }

        private Boolean isPropertyDestinationFacilityIdRemoved;

        public Boolean getIsPropertyDestinationFacilityIdRemoved() {
            return this.isPropertyDestinationFacilityIdRemoved;
        }

        public void setIsPropertyDestinationFacilityIdRemoved(Boolean removed) {
            this.isPropertyDestinationFacilityIdRemoved = removed;
        }

        private Boolean isPropertyOriginContactMechIdRemoved;

        public Boolean getIsPropertyOriginContactMechIdRemoved() {
            return this.isPropertyOriginContactMechIdRemoved;
        }

        public void setIsPropertyOriginContactMechIdRemoved(Boolean removed) {
            this.isPropertyOriginContactMechIdRemoved = removed;
        }

        private Boolean isPropertyOriginTelecomNumberIdRemoved;

        public Boolean getIsPropertyOriginTelecomNumberIdRemoved() {
            return this.isPropertyOriginTelecomNumberIdRemoved;
        }

        public void setIsPropertyOriginTelecomNumberIdRemoved(Boolean removed) {
            this.isPropertyOriginTelecomNumberIdRemoved = removed;
        }

        private Boolean isPropertyDestinationContactMechIdRemoved;

        public Boolean getIsPropertyDestinationContactMechIdRemoved() {
            return this.isPropertyDestinationContactMechIdRemoved;
        }

        public void setIsPropertyDestinationContactMechIdRemoved(Boolean removed) {
            this.isPropertyDestinationContactMechIdRemoved = removed;
        }

        private Boolean isPropertyDestinationTelecomNumberIdRemoved;

        public Boolean getIsPropertyDestinationTelecomNumberIdRemoved() {
            return this.isPropertyDestinationTelecomNumberIdRemoved;
        }

        public void setIsPropertyDestinationTelecomNumberIdRemoved(Boolean removed) {
            this.isPropertyDestinationTelecomNumberIdRemoved = removed;
        }

        private Boolean isPropertyPartyIdToRemoved;

        public Boolean getIsPropertyPartyIdToRemoved() {
            return this.isPropertyPartyIdToRemoved;
        }

        public void setIsPropertyPartyIdToRemoved(Boolean removed) {
            this.isPropertyPartyIdToRemoved = removed;
        }

        private Boolean isPropertyPartyIdFromRemoved;

        public Boolean getIsPropertyPartyIdFromRemoved() {
            return this.isPropertyPartyIdFromRemoved;
        }

        public void setIsPropertyPartyIdFromRemoved(Boolean removed) {
            this.isPropertyPartyIdFromRemoved = removed;
        }

        private Boolean isPropertyAdditionalShippingChargeRemoved;

        public Boolean getIsPropertyAdditionalShippingChargeRemoved() {
            return this.isPropertyAdditionalShippingChargeRemoved;
        }

        public void setIsPropertyAdditionalShippingChargeRemoved(Boolean removed) {
            this.isPropertyAdditionalShippingChargeRemoved = removed;
        }

        private Boolean isPropertyAddtlShippingChargeDescRemoved;

        public Boolean getIsPropertyAddtlShippingChargeDescRemoved() {
            return this.isPropertyAddtlShippingChargeDescRemoved;
        }

        public void setIsPropertyAddtlShippingChargeDescRemoved(Boolean removed) {
            this.isPropertyAddtlShippingChargeDescRemoved = removed;
        }

        private Boolean isPropertyReceivedByRemoved;

        public Boolean getIsPropertyReceivedByRemoved() {
            return this.isPropertyReceivedByRemoved;
        }

        public void setIsPropertyReceivedByRemoved(Boolean removed) {
            this.isPropertyReceivedByRemoved = removed;
        }

        private Boolean isPropertyDatetimeReceivedRemoved;

        public Boolean getIsPropertyDatetimeReceivedRemoved() {
            return this.isPropertyDatetimeReceivedRemoved;
        }

        public void setIsPropertyDatetimeReceivedRemoved(Boolean removed) {
            this.isPropertyDatetimeReceivedRemoved = removed;
        }


        private Map<ShipmentItemEventId, ShipmentItemEvent> shipmentItemEvents = new HashMap<ShipmentItemEventId, ShipmentItemEvent>();
        
        private Iterable<ShipmentItemEvent> readOnlyShipmentItemEvents;

        public Iterable<ShipmentItemEvent> getShipmentItemEvents()
        {
            if (!getEventReadOnly())
            {
                return this.shipmentItemEvents.values();
            }
            else
            {
                if (readOnlyShipmentItemEvents != null) { return readOnlyShipmentItemEvents; }
                ShipmentItemEventDao eventDao = getShipmentItemEventDao();
                List<ShipmentItemEvent> eL = new ArrayList<ShipmentItemEvent>();
                for (ShipmentItemEvent e : eventDao.findByShipmentEventId(this.getShipmentEventId()))
                {
                    ((ShipmentItemEvent.SqlShipmentItemEvent)e).setEventReadOnly(true);
                    eL.add((ShipmentItemEvent)e);
                }
                return (readOnlyShipmentItemEvents = eL);
            }
        }

        public void setShipmentItemEvents(Iterable<ShipmentItemEvent> es)
        {
            if (es != null)
            {
                for (ShipmentItemEvent e : es)
                {
                    addShipmentItemEvent(e);
                }
            }
            else { this.shipmentItemEvents.clear(); }
        }
        
        public void addShipmentItemEvent(ShipmentItemEvent e)
        {
            throwOnInconsistentEventIds((ShipmentItemEvent.SqlShipmentItemEvent)e);
            this.shipmentItemEvents.put(((ShipmentItemEvent.SqlShipmentItemEvent)e).getShipmentItemEventId(), e);
        }

        private Map<ShipmentPackageEventId, ShipmentPackageEvent> shipmentPackageEvents = new HashMap<ShipmentPackageEventId, ShipmentPackageEvent>();
        
        private Iterable<ShipmentPackageEvent> readOnlyShipmentPackageEvents;

        public Iterable<ShipmentPackageEvent> getShipmentPackageEvents()
        {
            if (!getEventReadOnly())
            {
                return this.shipmentPackageEvents.values();
            }
            else
            {
                if (readOnlyShipmentPackageEvents != null) { return readOnlyShipmentPackageEvents; }
                ShipmentPackageEventDao eventDao = getShipmentPackageEventDao();
                List<ShipmentPackageEvent> eL = new ArrayList<ShipmentPackageEvent>();
                for (ShipmentPackageEvent e : eventDao.findByShipmentEventId(this.getShipmentEventId()))
                {
                    ((ShipmentPackageEvent.SqlShipmentPackageEvent)e).setEventReadOnly(true);
                    eL.add((ShipmentPackageEvent)e);
                }
                return (readOnlyShipmentPackageEvents = eL);
            }
        }

        public void setShipmentPackageEvents(Iterable<ShipmentPackageEvent> es)
        {
            if (es != null)
            {
                for (ShipmentPackageEvent e : es)
                {
                    addShipmentPackageEvent(e);
                }
            }
            else { this.shipmentPackageEvents.clear(); }
        }
        
        public void addShipmentPackageEvent(ShipmentPackageEvent e)
        {
            throwOnInconsistentEventIds((ShipmentPackageEvent.SqlShipmentPackageEvent)e);
            this.shipmentPackageEvents.put(((ShipmentPackageEvent.SqlShipmentPackageEvent)e).getShipmentPackageEventId(), e);
        }

        public void save()
        {
            for (ShipmentItemEvent e : this.getShipmentItemEvents()) {
                getShipmentItemEventDao().save(e);
            }
            for (ShipmentPackageEvent e : this.getShipmentPackageEvents()) {
                getShipmentPackageEventDao().save(e);
            }
        }
    }



    public static class SimpleShipmentStateCreated extends AbstractShipmentStateCreated
    {
        public SimpleShipmentStateCreated() {
        }

        public SimpleShipmentStateCreated(ShipmentEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleShipmentStateMergePatched extends AbstractShipmentStateMergePatched
    {
        public SimpleShipmentStateMergePatched() {
        }

        public SimpleShipmentStateMergePatched(ShipmentEventId eventId) {
            super(eventId);
        }
    }

}

