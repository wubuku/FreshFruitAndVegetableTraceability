// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.inventorytransfer;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface InventoryTransferCommand extends Command {

    String getInventoryTransferId();

    void setInventoryTransferId(String inventoryTransferId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(InventoryTransferState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((InventoryTransferCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (isCreationCommand((InventoryTransferCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(InventoryTransferCommand c) {
        if ((c instanceof InventoryTransferCommand.CreateInventoryTransfer) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(InventoryTransferState.VERSION_NULL)))
            return true;
        if ((c instanceof InventoryTransferCommand.MergePatchInventoryTransfer))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(InventoryTransferState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchInventoryTransfer extends InventoryTransferCommand {
        String getStatusId();

        void setStatusId(String statusId);

        String getInventoryItemId();

        void setInventoryItemId(String inventoryItemId);

        String getFacilityId();

        void setFacilityId(String facilityId);

        String getLocationSeqId();

        void setLocationSeqId(String locationSeqId);

        String getContainerId();

        void setContainerId(String containerId);

        String getFacilityIdTo();

        void setFacilityIdTo(String facilityIdTo);

        String getLocationSeqIdTo();

        void setLocationSeqIdTo(String locationSeqIdTo);

        String getContainerIdTo();

        void setContainerIdTo(String containerIdTo);

        String getItemIssuanceId();

        void setItemIssuanceId(String itemIssuanceId);

        OffsetDateTime getSendDate();

        void setSendDate(OffsetDateTime sendDate);

        OffsetDateTime getReceiveDate();

        void setReceiveDate(OffsetDateTime receiveDate);

        String getComments();

        void setComments(String comments);

    }

    interface CreateInventoryTransfer extends CreateOrMergePatchInventoryTransfer {
    }

    interface MergePatchInventoryTransfer extends CreateOrMergePatchInventoryTransfer {
        Boolean getIsPropertyStatusIdRemoved();

        void setIsPropertyStatusIdRemoved(Boolean removed);

        Boolean getIsPropertyInventoryItemIdRemoved();

        void setIsPropertyInventoryItemIdRemoved(Boolean removed);

        Boolean getIsPropertyFacilityIdRemoved();

        void setIsPropertyFacilityIdRemoved(Boolean removed);

        Boolean getIsPropertyLocationSeqIdRemoved();

        void setIsPropertyLocationSeqIdRemoved(Boolean removed);

        Boolean getIsPropertyContainerIdRemoved();

        void setIsPropertyContainerIdRemoved(Boolean removed);

        Boolean getIsPropertyFacilityIdToRemoved();

        void setIsPropertyFacilityIdToRemoved(Boolean removed);

        Boolean getIsPropertyLocationSeqIdToRemoved();

        void setIsPropertyLocationSeqIdToRemoved(Boolean removed);

        Boolean getIsPropertyContainerIdToRemoved();

        void setIsPropertyContainerIdToRemoved(Boolean removed);

        Boolean getIsPropertyItemIssuanceIdRemoved();

        void setIsPropertyItemIssuanceIdRemoved(Boolean removed);

        Boolean getIsPropertySendDateRemoved();

        void setIsPropertySendDateRemoved(Boolean removed);

        Boolean getIsPropertyReceiveDateRemoved();

        void setIsPropertyReceiveDateRemoved(Boolean removed);

        Boolean getIsPropertyCommentsRemoved();

        void setIsPropertyCommentsRemoved(Boolean removed);


    }

    interface DeleteInventoryTransfer extends InventoryTransferCommand {
    }

}

