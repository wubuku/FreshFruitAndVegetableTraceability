// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.uom;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface UomCommand extends Command {

    String getUomId();

    void setUomId(String uomId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(UomState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((UomCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (isCreationCommand((UomCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(UomCommand c) {
        if ((c instanceof UomCommand.CreateUom) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(UomState.VERSION_NULL)))
            return true;
        if ((c instanceof UomCommand.MergePatchUom))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(UomState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchUom extends UomCommand {
        String getUomTypeId();

        void setUomTypeId(String uomTypeId);

        String getAbbreviation();

        void setAbbreviation(String abbreviation);

        Long getNumericCode();

        void setNumericCode(Long numericCode);

        String getGs1AI();

        void setGs1AI(String gs1AI);

        String getDescription();

        void setDescription(String description);

        String getActive();

        void setActive(String active);

        String getUomName();

        void setUomName(String uomName);

    }

    interface CreateUom extends CreateOrMergePatchUom {
    }

    interface MergePatchUom extends CreateOrMergePatchUom {
        Boolean getIsPropertyUomTypeIdRemoved();

        void setIsPropertyUomTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyAbbreviationRemoved();

        void setIsPropertyAbbreviationRemoved(Boolean removed);

        Boolean getIsPropertyNumericCodeRemoved();

        void setIsPropertyNumericCodeRemoved(Boolean removed);

        Boolean getIsPropertyGs1AIRemoved();

        void setIsPropertyGs1AIRemoved(Boolean removed);

        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyActiveRemoved();

        void setIsPropertyActiveRemoved(Boolean removed);

        Boolean getIsPropertyUomNameRemoved();

        void setIsPropertyUomNameRemoved(Boolean removed);


    }

    interface DeleteUom extends UomCommand {
    }

}

