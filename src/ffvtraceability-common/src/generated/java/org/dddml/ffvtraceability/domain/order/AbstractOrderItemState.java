// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.order;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.order.OrderItemEvent.*;

public abstract class AbstractOrderItemState implements OrderItemState.SqlOrderItemState {

    private OrderItemId orderItemId = new OrderItemId();

    public OrderItemId getOrderItemId() {
        return this.orderItemId;
    }

    public void setOrderItemId(OrderItemId orderItemId) {
        this.orderItemId = orderItemId;
    }

    private transient OrderHeaderState orderHeaderState;

    public OrderHeaderState getOrderHeaderState() {
        return orderHeaderState;
    }

    public void setOrderHeaderState(OrderHeaderState s) {
        orderHeaderState = s;
    }
    
    private OrderHeaderState protectedOrderHeaderState;

    protected OrderHeaderState getProtectedOrderHeaderState() {
        return protectedOrderHeaderState;
    }

    protected void setProtectedOrderHeaderState(OrderHeaderState protectedOrderHeaderState) {
        this.protectedOrderHeaderState = protectedOrderHeaderState;
    }

    public String getOrderId() {
        return this.getOrderItemId().getOrderId();
    }
        
    public void setOrderId(String orderId) {
        this.getOrderItemId().setOrderId(orderId);
    }

    public String getOrderItemSeqId() {
        return this.getOrderItemId().getOrderItemSeqId();
    }
        
    public void setOrderItemSeqId(String orderItemSeqId) {
        this.getOrderItemId().setOrderItemSeqId(orderItemSeqId);
    }

    private String externalId;

    public String getExternalId() {
        return this.externalId;
    }

    public void setExternalId(String externalId) {
        this.externalId = externalId;
    }

    private String orderItemTypeId;

    public String getOrderItemTypeId() {
        return this.orderItemTypeId;
    }

    public void setOrderItemTypeId(String orderItemTypeId) {
        this.orderItemTypeId = orderItemTypeId;
    }

    private String orderItemGroupSeqId;

    public String getOrderItemGroupSeqId() {
        return this.orderItemGroupSeqId;
    }

    public void setOrderItemGroupSeqId(String orderItemGroupSeqId) {
        this.orderItemGroupSeqId = orderItemGroupSeqId;
    }

    private String isItemGroupPrimary;

    public String getIsItemGroupPrimary() {
        return this.isItemGroupPrimary;
    }

    public void setIsItemGroupPrimary(String isItemGroupPrimary) {
        this.isItemGroupPrimary = isItemGroupPrimary;
    }

    private String fromInventoryItemId;

    public String getFromInventoryItemId() {
        return this.fromInventoryItemId;
    }

    public void setFromInventoryItemId(String fromInventoryItemId) {
        this.fromInventoryItemId = fromInventoryItemId;
    }

    private String budgetId;

    public String getBudgetId() {
        return this.budgetId;
    }

    public void setBudgetId(String budgetId) {
        this.budgetId = budgetId;
    }

    private String budgetItemSeqId;

    public String getBudgetItemSeqId() {
        return this.budgetItemSeqId;
    }

    public void setBudgetItemSeqId(String budgetItemSeqId) {
        this.budgetItemSeqId = budgetItemSeqId;
    }

    private String productId;

    public String getProductId() {
        return this.productId;
    }

    public void setProductId(String productId) {
        this.productId = productId;
    }

    private String supplierProductId;

    public String getSupplierProductId() {
        return this.supplierProductId;
    }

    public void setSupplierProductId(String supplierProductId) {
        this.supplierProductId = supplierProductId;
    }

    private String productFeatureId;

    public String getProductFeatureId() {
        return this.productFeatureId;
    }

    public void setProductFeatureId(String productFeatureId) {
        this.productFeatureId = productFeatureId;
    }

    private String prodCatalogId;

    public String getProdCatalogId() {
        return this.prodCatalogId;
    }

    public void setProdCatalogId(String prodCatalogId) {
        this.prodCatalogId = prodCatalogId;
    }

    private String productCategoryId;

    public String getProductCategoryId() {
        return this.productCategoryId;
    }

    public void setProductCategoryId(String productCategoryId) {
        this.productCategoryId = productCategoryId;
    }

    private String isPromo;

    public String getIsPromo() {
        return this.isPromo;
    }

    public void setIsPromo(String isPromo) {
        this.isPromo = isPromo;
    }

    private String quoteId;

    public String getQuoteId() {
        return this.quoteId;
    }

    public void setQuoteId(String quoteId) {
        this.quoteId = quoteId;
    }

    private String quoteItemSeqId;

    public String getQuoteItemSeqId() {
        return this.quoteItemSeqId;
    }

    public void setQuoteItemSeqId(String quoteItemSeqId) {
        this.quoteItemSeqId = quoteItemSeqId;
    }

    private String shoppingListId;

    public String getShoppingListId() {
        return this.shoppingListId;
    }

    public void setShoppingListId(String shoppingListId) {
        this.shoppingListId = shoppingListId;
    }

    private String shoppingListItemSeqId;

    public String getShoppingListItemSeqId() {
        return this.shoppingListItemSeqId;
    }

    public void setShoppingListItemSeqId(String shoppingListItemSeqId) {
        this.shoppingListItemSeqId = shoppingListItemSeqId;
    }

    private String subscriptionId;

    public String getSubscriptionId() {
        return this.subscriptionId;
    }

    public void setSubscriptionId(String subscriptionId) {
        this.subscriptionId = subscriptionId;
    }

    private String deploymentId;

    public String getDeploymentId() {
        return this.deploymentId;
    }

    public void setDeploymentId(String deploymentId) {
        this.deploymentId = deploymentId;
    }

    private java.math.BigDecimal quantity;

    public java.math.BigDecimal getQuantity() {
        return this.quantity;
    }

    public void setQuantity(java.math.BigDecimal quantity) {
        this.quantity = quantity;
    }

    private java.math.BigDecimal cancelQuantity;

    public java.math.BigDecimal getCancelQuantity() {
        return this.cancelQuantity;
    }

    public void setCancelQuantity(java.math.BigDecimal cancelQuantity) {
        this.cancelQuantity = cancelQuantity;
    }

    private java.math.BigDecimal selectedAmount;

    public java.math.BigDecimal getSelectedAmount() {
        return this.selectedAmount;
    }

    public void setSelectedAmount(java.math.BigDecimal selectedAmount) {
        this.selectedAmount = selectedAmount;
    }

    private java.math.BigDecimal unitPrice;

    public java.math.BigDecimal getUnitPrice() {
        return this.unitPrice;
    }

    public void setUnitPrice(java.math.BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    private java.math.BigDecimal unitListPrice;

    public java.math.BigDecimal getUnitListPrice() {
        return this.unitListPrice;
    }

    public void setUnitListPrice(java.math.BigDecimal unitListPrice) {
        this.unitListPrice = unitListPrice;
    }

    private java.math.BigDecimal unitAverageCost;

    public java.math.BigDecimal getUnitAverageCost() {
        return this.unitAverageCost;
    }

    public void setUnitAverageCost(java.math.BigDecimal unitAverageCost) {
        this.unitAverageCost = unitAverageCost;
    }

    private java.math.BigDecimal unitRecurringPrice;

    public java.math.BigDecimal getUnitRecurringPrice() {
        return this.unitRecurringPrice;
    }

    public void setUnitRecurringPrice(java.math.BigDecimal unitRecurringPrice) {
        this.unitRecurringPrice = unitRecurringPrice;
    }

    private String isModifiedPrice;

    public String getIsModifiedPrice() {
        return this.isModifiedPrice;
    }

    public void setIsModifiedPrice(String isModifiedPrice) {
        this.isModifiedPrice = isModifiedPrice;
    }

    private String recurringFreqUomId;

    public String getRecurringFreqUomId() {
        return this.recurringFreqUomId;
    }

    public void setRecurringFreqUomId(String recurringFreqUomId) {
        this.recurringFreqUomId = recurringFreqUomId;
    }

    private String itemDescription;

    public String getItemDescription() {
        return this.itemDescription;
    }

    public void setItemDescription(String itemDescription) {
        this.itemDescription = itemDescription;
    }

    private String comments;

    public String getComments() {
        return this.comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    private String correspondingPoId;

    public String getCorrespondingPoId() {
        return this.correspondingPoId;
    }

    public void setCorrespondingPoId(String correspondingPoId) {
        this.correspondingPoId = correspondingPoId;
    }

    private String statusId;

    public String getStatusId() {
        return this.statusId;
    }

    public void setStatusId(String statusId) {
        this.statusId = statusId;
    }

    private String syncStatusId;

    public String getSyncStatusId() {
        return this.syncStatusId;
    }

    public void setSyncStatusId(String syncStatusId) {
        this.syncStatusId = syncStatusId;
    }

    private String fulfillmentStatusId;

    public String getFulfillmentStatusId() {
        return this.fulfillmentStatusId;
    }

    public void setFulfillmentStatusId(String fulfillmentStatusId) {
        this.fulfillmentStatusId = fulfillmentStatusId;
    }

    private OffsetDateTime estimatedShipDate;

    public OffsetDateTime getEstimatedShipDate() {
        return this.estimatedShipDate;
    }

    public void setEstimatedShipDate(OffsetDateTime estimatedShipDate) {
        this.estimatedShipDate = estimatedShipDate;
    }

    private OffsetDateTime estimatedDeliveryDate;

    public OffsetDateTime getEstimatedDeliveryDate() {
        return this.estimatedDeliveryDate;
    }

    public void setEstimatedDeliveryDate(OffsetDateTime estimatedDeliveryDate) {
        this.estimatedDeliveryDate = estimatedDeliveryDate;
    }

    private OffsetDateTime autoCancelDate;

    public OffsetDateTime getAutoCancelDate() {
        return this.autoCancelDate;
    }

    public void setAutoCancelDate(OffsetDateTime autoCancelDate) {
        this.autoCancelDate = autoCancelDate;
    }

    private OffsetDateTime shipBeforeDate;

    public OffsetDateTime getShipBeforeDate() {
        return this.shipBeforeDate;
    }

    public void setShipBeforeDate(OffsetDateTime shipBeforeDate) {
        this.shipBeforeDate = shipBeforeDate;
    }

    private OffsetDateTime shipAfterDate;

    public OffsetDateTime getShipAfterDate() {
        return this.shipAfterDate;
    }

    public void setShipAfterDate(OffsetDateTime shipAfterDate) {
        this.shipAfterDate = shipAfterDate;
    }

    private OffsetDateTime cancelBackOrderDate;

    public OffsetDateTime getCancelBackOrderDate() {
        return this.cancelBackOrderDate;
    }

    public void setCancelBackOrderDate(OffsetDateTime cancelBackOrderDate) {
        this.cancelBackOrderDate = cancelBackOrderDate;
    }

    private String overrideGlAccountId;

    public String getOverrideGlAccountId() {
        return this.overrideGlAccountId;
    }

    public void setOverrideGlAccountId(String overrideGlAccountId) {
        this.overrideGlAccountId = overrideGlAccountId;
    }

    private String salesOpportunityId;

    public String getSalesOpportunityId() {
        return this.salesOpportunityId;
    }

    public void setSalesOpportunityId(String salesOpportunityId) {
        this.salesOpportunityId = salesOpportunityId;
    }

    private Long version;

    public Long getVersion() {
        return this.version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    private Boolean __Deleted__;

    public Boolean get__Deleted__() {
        return this.__Deleted__;
    }

    public void set__Deleted__(Boolean __Deleted__) {
        this.__Deleted__ = __Deleted__;
    }

    public boolean isStateUnsaved() {
        return this.getVersion() == null;
    }

    private Boolean stateReadOnly;

    public Boolean getStateReadOnly() { return this.stateReadOnly; }

    public void setStateReadOnly(Boolean readOnly) { this.stateReadOnly = readOnly; }

    private boolean forReapplying;

    public boolean getForReapplying() {
        return forReapplying;
    }

    public void setForReapplying(boolean forReapplying) {
        this.forReapplying = forReapplying;
    }


    public AbstractOrderItemState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        this.forReapplying = true;

        initializeProperties();
    }
    
    protected void initializeProperties() {
    }

    @Override
    public int hashCode() {
        return getOrderItemSeqId().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) { return true; }
        if (obj instanceof OrderItemState) {
            return Objects.equals(this.getOrderItemSeqId(), ((OrderItemState)obj).getOrderItemSeqId());
        }
        return false;
    }


    public void mutate(Event e) {
        setStateReadOnly(false);
        if (e instanceof OrderItemStateCreated) {
            when((OrderItemStateCreated) e);
        } else if (e instanceof OrderItemStateMergePatched) {
            when((OrderItemStateMergePatched) e);
        } else if (e instanceof OrderItemStateRemoved) {
            when((OrderItemStateRemoved) e);
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void when(OrderItemStateCreated e) {
        throwOnWrongEvent(e);

        this.setExternalId(e.getExternalId());
        this.setOrderItemTypeId(e.getOrderItemTypeId());
        this.setOrderItemGroupSeqId(e.getOrderItemGroupSeqId());
        this.setIsItemGroupPrimary(e.getIsItemGroupPrimary());
        this.setFromInventoryItemId(e.getFromInventoryItemId());
        this.setBudgetId(e.getBudgetId());
        this.setBudgetItemSeqId(e.getBudgetItemSeqId());
        this.setProductId(e.getProductId());
        this.setSupplierProductId(e.getSupplierProductId());
        this.setProductFeatureId(e.getProductFeatureId());
        this.setProdCatalogId(e.getProdCatalogId());
        this.setProductCategoryId(e.getProductCategoryId());
        this.setIsPromo(e.getIsPromo());
        this.setQuoteId(e.getQuoteId());
        this.setQuoteItemSeqId(e.getQuoteItemSeqId());
        this.setShoppingListId(e.getShoppingListId());
        this.setShoppingListItemSeqId(e.getShoppingListItemSeqId());
        this.setSubscriptionId(e.getSubscriptionId());
        this.setDeploymentId(e.getDeploymentId());
        this.setQuantity(e.getQuantity());
        this.setCancelQuantity(e.getCancelQuantity());
        this.setSelectedAmount(e.getSelectedAmount());
        this.setUnitPrice(e.getUnitPrice());
        this.setUnitListPrice(e.getUnitListPrice());
        this.setUnitAverageCost(e.getUnitAverageCost());
        this.setUnitRecurringPrice(e.getUnitRecurringPrice());
        this.setIsModifiedPrice(e.getIsModifiedPrice());
        this.setRecurringFreqUomId(e.getRecurringFreqUomId());
        this.setItemDescription(e.getItemDescription());
        this.setComments(e.getComments());
        this.setCorrespondingPoId(e.getCorrespondingPoId());
        this.setStatusId(e.getStatusId());
        this.setSyncStatusId(e.getSyncStatusId());
        this.setFulfillmentStatusId(e.getFulfillmentStatusId());
        this.setEstimatedShipDate(e.getEstimatedShipDate());
        this.setEstimatedDeliveryDate(e.getEstimatedDeliveryDate());
        this.setAutoCancelDate(e.getAutoCancelDate());
        this.setShipBeforeDate(e.getShipBeforeDate());
        this.setShipAfterDate(e.getShipAfterDate());
        this.setCancelBackOrderDate(e.getCancelBackOrderDate());
        this.setOverrideGlAccountId(e.getOverrideGlAccountId());
        this.setSalesOpportunityId(e.getSalesOpportunityId());

        this.set__Deleted__(false);

        this.setCreatedBy(e.getCreatedBy());
        this.setCreatedAt(e.getCreatedAt());

    }

    public void merge(OrderItemState s) {
        if (s == this) {
            return;
        }
        this.setExternalId(s.getExternalId());
        this.setOrderItemTypeId(s.getOrderItemTypeId());
        this.setOrderItemGroupSeqId(s.getOrderItemGroupSeqId());
        this.setIsItemGroupPrimary(s.getIsItemGroupPrimary());
        this.setFromInventoryItemId(s.getFromInventoryItemId());
        this.setBudgetId(s.getBudgetId());
        this.setBudgetItemSeqId(s.getBudgetItemSeqId());
        this.setProductId(s.getProductId());
        this.setSupplierProductId(s.getSupplierProductId());
        this.setProductFeatureId(s.getProductFeatureId());
        this.setProdCatalogId(s.getProdCatalogId());
        this.setProductCategoryId(s.getProductCategoryId());
        this.setIsPromo(s.getIsPromo());
        this.setQuoteId(s.getQuoteId());
        this.setQuoteItemSeqId(s.getQuoteItemSeqId());
        this.setShoppingListId(s.getShoppingListId());
        this.setShoppingListItemSeqId(s.getShoppingListItemSeqId());
        this.setSubscriptionId(s.getSubscriptionId());
        this.setDeploymentId(s.getDeploymentId());
        this.setQuantity(s.getQuantity());
        this.setCancelQuantity(s.getCancelQuantity());
        this.setSelectedAmount(s.getSelectedAmount());
        this.setUnitPrice(s.getUnitPrice());
        this.setUnitListPrice(s.getUnitListPrice());
        this.setUnitAverageCost(s.getUnitAverageCost());
        this.setUnitRecurringPrice(s.getUnitRecurringPrice());
        this.setIsModifiedPrice(s.getIsModifiedPrice());
        this.setRecurringFreqUomId(s.getRecurringFreqUomId());
        this.setItemDescription(s.getItemDescription());
        this.setComments(s.getComments());
        this.setCorrespondingPoId(s.getCorrespondingPoId());
        this.setStatusId(s.getStatusId());
        this.setSyncStatusId(s.getSyncStatusId());
        this.setFulfillmentStatusId(s.getFulfillmentStatusId());
        this.setEstimatedShipDate(s.getEstimatedShipDate());
        this.setEstimatedDeliveryDate(s.getEstimatedDeliveryDate());
        this.setAutoCancelDate(s.getAutoCancelDate());
        this.setShipBeforeDate(s.getShipBeforeDate());
        this.setShipAfterDate(s.getShipAfterDate());
        this.setCancelBackOrderDate(s.getCancelBackOrderDate());
        this.setOverrideGlAccountId(s.getOverrideGlAccountId());
        this.setSalesOpportunityId(s.getSalesOpportunityId());
    }

    public void when(OrderItemStateMergePatched e) {
        throwOnWrongEvent(e);

        if (e.getExternalId() == null) {
            if (e.getIsPropertyExternalIdRemoved() != null && e.getIsPropertyExternalIdRemoved()) {
                this.setExternalId(null);
            }
        } else {
            this.setExternalId(e.getExternalId());
        }
        if (e.getOrderItemTypeId() == null) {
            if (e.getIsPropertyOrderItemTypeIdRemoved() != null && e.getIsPropertyOrderItemTypeIdRemoved()) {
                this.setOrderItemTypeId(null);
            }
        } else {
            this.setOrderItemTypeId(e.getOrderItemTypeId());
        }
        if (e.getOrderItemGroupSeqId() == null) {
            if (e.getIsPropertyOrderItemGroupSeqIdRemoved() != null && e.getIsPropertyOrderItemGroupSeqIdRemoved()) {
                this.setOrderItemGroupSeqId(null);
            }
        } else {
            this.setOrderItemGroupSeqId(e.getOrderItemGroupSeqId());
        }
        if (e.getIsItemGroupPrimary() == null) {
            if (e.getIsPropertyIsItemGroupPrimaryRemoved() != null && e.getIsPropertyIsItemGroupPrimaryRemoved()) {
                this.setIsItemGroupPrimary(null);
            }
        } else {
            this.setIsItemGroupPrimary(e.getIsItemGroupPrimary());
        }
        if (e.getFromInventoryItemId() == null) {
            if (e.getIsPropertyFromInventoryItemIdRemoved() != null && e.getIsPropertyFromInventoryItemIdRemoved()) {
                this.setFromInventoryItemId(null);
            }
        } else {
            this.setFromInventoryItemId(e.getFromInventoryItemId());
        }
        if (e.getBudgetId() == null) {
            if (e.getIsPropertyBudgetIdRemoved() != null && e.getIsPropertyBudgetIdRemoved()) {
                this.setBudgetId(null);
            }
        } else {
            this.setBudgetId(e.getBudgetId());
        }
        if (e.getBudgetItemSeqId() == null) {
            if (e.getIsPropertyBudgetItemSeqIdRemoved() != null && e.getIsPropertyBudgetItemSeqIdRemoved()) {
                this.setBudgetItemSeqId(null);
            }
        } else {
            this.setBudgetItemSeqId(e.getBudgetItemSeqId());
        }
        if (e.getProductId() == null) {
            if (e.getIsPropertyProductIdRemoved() != null && e.getIsPropertyProductIdRemoved()) {
                this.setProductId(null);
            }
        } else {
            this.setProductId(e.getProductId());
        }
        if (e.getSupplierProductId() == null) {
            if (e.getIsPropertySupplierProductIdRemoved() != null && e.getIsPropertySupplierProductIdRemoved()) {
                this.setSupplierProductId(null);
            }
        } else {
            this.setSupplierProductId(e.getSupplierProductId());
        }
        if (e.getProductFeatureId() == null) {
            if (e.getIsPropertyProductFeatureIdRemoved() != null && e.getIsPropertyProductFeatureIdRemoved()) {
                this.setProductFeatureId(null);
            }
        } else {
            this.setProductFeatureId(e.getProductFeatureId());
        }
        if (e.getProdCatalogId() == null) {
            if (e.getIsPropertyProdCatalogIdRemoved() != null && e.getIsPropertyProdCatalogIdRemoved()) {
                this.setProdCatalogId(null);
            }
        } else {
            this.setProdCatalogId(e.getProdCatalogId());
        }
        if (e.getProductCategoryId() == null) {
            if (e.getIsPropertyProductCategoryIdRemoved() != null && e.getIsPropertyProductCategoryIdRemoved()) {
                this.setProductCategoryId(null);
            }
        } else {
            this.setProductCategoryId(e.getProductCategoryId());
        }
        if (e.getIsPromo() == null) {
            if (e.getIsPropertyIsPromoRemoved() != null && e.getIsPropertyIsPromoRemoved()) {
                this.setIsPromo(null);
            }
        } else {
            this.setIsPromo(e.getIsPromo());
        }
        if (e.getQuoteId() == null) {
            if (e.getIsPropertyQuoteIdRemoved() != null && e.getIsPropertyQuoteIdRemoved()) {
                this.setQuoteId(null);
            }
        } else {
            this.setQuoteId(e.getQuoteId());
        }
        if (e.getQuoteItemSeqId() == null) {
            if (e.getIsPropertyQuoteItemSeqIdRemoved() != null && e.getIsPropertyQuoteItemSeqIdRemoved()) {
                this.setQuoteItemSeqId(null);
            }
        } else {
            this.setQuoteItemSeqId(e.getQuoteItemSeqId());
        }
        if (e.getShoppingListId() == null) {
            if (e.getIsPropertyShoppingListIdRemoved() != null && e.getIsPropertyShoppingListIdRemoved()) {
                this.setShoppingListId(null);
            }
        } else {
            this.setShoppingListId(e.getShoppingListId());
        }
        if (e.getShoppingListItemSeqId() == null) {
            if (e.getIsPropertyShoppingListItemSeqIdRemoved() != null && e.getIsPropertyShoppingListItemSeqIdRemoved()) {
                this.setShoppingListItemSeqId(null);
            }
        } else {
            this.setShoppingListItemSeqId(e.getShoppingListItemSeqId());
        }
        if (e.getSubscriptionId() == null) {
            if (e.getIsPropertySubscriptionIdRemoved() != null && e.getIsPropertySubscriptionIdRemoved()) {
                this.setSubscriptionId(null);
            }
        } else {
            this.setSubscriptionId(e.getSubscriptionId());
        }
        if (e.getDeploymentId() == null) {
            if (e.getIsPropertyDeploymentIdRemoved() != null && e.getIsPropertyDeploymentIdRemoved()) {
                this.setDeploymentId(null);
            }
        } else {
            this.setDeploymentId(e.getDeploymentId());
        }
        if (e.getQuantity() == null) {
            if (e.getIsPropertyQuantityRemoved() != null && e.getIsPropertyQuantityRemoved()) {
                this.setQuantity(null);
            }
        } else {
            this.setQuantity(e.getQuantity());
        }
        if (e.getCancelQuantity() == null) {
            if (e.getIsPropertyCancelQuantityRemoved() != null && e.getIsPropertyCancelQuantityRemoved()) {
                this.setCancelQuantity(null);
            }
        } else {
            this.setCancelQuantity(e.getCancelQuantity());
        }
        if (e.getSelectedAmount() == null) {
            if (e.getIsPropertySelectedAmountRemoved() != null && e.getIsPropertySelectedAmountRemoved()) {
                this.setSelectedAmount(null);
            }
        } else {
            this.setSelectedAmount(e.getSelectedAmount());
        }
        if (e.getUnitPrice() == null) {
            if (e.getIsPropertyUnitPriceRemoved() != null && e.getIsPropertyUnitPriceRemoved()) {
                this.setUnitPrice(null);
            }
        } else {
            this.setUnitPrice(e.getUnitPrice());
        }
        if (e.getUnitListPrice() == null) {
            if (e.getIsPropertyUnitListPriceRemoved() != null && e.getIsPropertyUnitListPriceRemoved()) {
                this.setUnitListPrice(null);
            }
        } else {
            this.setUnitListPrice(e.getUnitListPrice());
        }
        if (e.getUnitAverageCost() == null) {
            if (e.getIsPropertyUnitAverageCostRemoved() != null && e.getIsPropertyUnitAverageCostRemoved()) {
                this.setUnitAverageCost(null);
            }
        } else {
            this.setUnitAverageCost(e.getUnitAverageCost());
        }
        if (e.getUnitRecurringPrice() == null) {
            if (e.getIsPropertyUnitRecurringPriceRemoved() != null && e.getIsPropertyUnitRecurringPriceRemoved()) {
                this.setUnitRecurringPrice(null);
            }
        } else {
            this.setUnitRecurringPrice(e.getUnitRecurringPrice());
        }
        if (e.getIsModifiedPrice() == null) {
            if (e.getIsPropertyIsModifiedPriceRemoved() != null && e.getIsPropertyIsModifiedPriceRemoved()) {
                this.setIsModifiedPrice(null);
            }
        } else {
            this.setIsModifiedPrice(e.getIsModifiedPrice());
        }
        if (e.getRecurringFreqUomId() == null) {
            if (e.getIsPropertyRecurringFreqUomIdRemoved() != null && e.getIsPropertyRecurringFreqUomIdRemoved()) {
                this.setRecurringFreqUomId(null);
            }
        } else {
            this.setRecurringFreqUomId(e.getRecurringFreqUomId());
        }
        if (e.getItemDescription() == null) {
            if (e.getIsPropertyItemDescriptionRemoved() != null && e.getIsPropertyItemDescriptionRemoved()) {
                this.setItemDescription(null);
            }
        } else {
            this.setItemDescription(e.getItemDescription());
        }
        if (e.getComments() == null) {
            if (e.getIsPropertyCommentsRemoved() != null && e.getIsPropertyCommentsRemoved()) {
                this.setComments(null);
            }
        } else {
            this.setComments(e.getComments());
        }
        if (e.getCorrespondingPoId() == null) {
            if (e.getIsPropertyCorrespondingPoIdRemoved() != null && e.getIsPropertyCorrespondingPoIdRemoved()) {
                this.setCorrespondingPoId(null);
            }
        } else {
            this.setCorrespondingPoId(e.getCorrespondingPoId());
        }
        if (e.getStatusId() == null) {
            if (e.getIsPropertyStatusIdRemoved() != null && e.getIsPropertyStatusIdRemoved()) {
                this.setStatusId(null);
            }
        } else {
            this.setStatusId(e.getStatusId());
        }
        if (e.getSyncStatusId() == null) {
            if (e.getIsPropertySyncStatusIdRemoved() != null && e.getIsPropertySyncStatusIdRemoved()) {
                this.setSyncStatusId(null);
            }
        } else {
            this.setSyncStatusId(e.getSyncStatusId());
        }
        if (e.getFulfillmentStatusId() == null) {
            if (e.getIsPropertyFulfillmentStatusIdRemoved() != null && e.getIsPropertyFulfillmentStatusIdRemoved()) {
                this.setFulfillmentStatusId(null);
            }
        } else {
            this.setFulfillmentStatusId(e.getFulfillmentStatusId());
        }
        if (e.getEstimatedShipDate() == null) {
            if (e.getIsPropertyEstimatedShipDateRemoved() != null && e.getIsPropertyEstimatedShipDateRemoved()) {
                this.setEstimatedShipDate(null);
            }
        } else {
            this.setEstimatedShipDate(e.getEstimatedShipDate());
        }
        if (e.getEstimatedDeliveryDate() == null) {
            if (e.getIsPropertyEstimatedDeliveryDateRemoved() != null && e.getIsPropertyEstimatedDeliveryDateRemoved()) {
                this.setEstimatedDeliveryDate(null);
            }
        } else {
            this.setEstimatedDeliveryDate(e.getEstimatedDeliveryDate());
        }
        if (e.getAutoCancelDate() == null) {
            if (e.getIsPropertyAutoCancelDateRemoved() != null && e.getIsPropertyAutoCancelDateRemoved()) {
                this.setAutoCancelDate(null);
            }
        } else {
            this.setAutoCancelDate(e.getAutoCancelDate());
        }
        if (e.getShipBeforeDate() == null) {
            if (e.getIsPropertyShipBeforeDateRemoved() != null && e.getIsPropertyShipBeforeDateRemoved()) {
                this.setShipBeforeDate(null);
            }
        } else {
            this.setShipBeforeDate(e.getShipBeforeDate());
        }
        if (e.getShipAfterDate() == null) {
            if (e.getIsPropertyShipAfterDateRemoved() != null && e.getIsPropertyShipAfterDateRemoved()) {
                this.setShipAfterDate(null);
            }
        } else {
            this.setShipAfterDate(e.getShipAfterDate());
        }
        if (e.getCancelBackOrderDate() == null) {
            if (e.getIsPropertyCancelBackOrderDateRemoved() != null && e.getIsPropertyCancelBackOrderDateRemoved()) {
                this.setCancelBackOrderDate(null);
            }
        } else {
            this.setCancelBackOrderDate(e.getCancelBackOrderDate());
        }
        if (e.getOverrideGlAccountId() == null) {
            if (e.getIsPropertyOverrideGlAccountIdRemoved() != null && e.getIsPropertyOverrideGlAccountIdRemoved()) {
                this.setOverrideGlAccountId(null);
            }
        } else {
            this.setOverrideGlAccountId(e.getOverrideGlAccountId());
        }
        if (e.getSalesOpportunityId() == null) {
            if (e.getIsPropertySalesOpportunityIdRemoved() != null && e.getIsPropertySalesOpportunityIdRemoved()) {
                this.setSalesOpportunityId(null);
            }
        } else {
            this.setSalesOpportunityId(e.getSalesOpportunityId());
        }

        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

    }

    public void when(OrderItemStateRemoved e) {
        throwOnWrongEvent(e);

        this.set__Deleted__(true);
        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

    }

    public void save() {
    }

    protected void throwOnWrongEvent(OrderItemEvent event) {
        String stateEntityIdOrderId = this.getOrderItemId().getOrderId();
        String eventEntityIdOrderId = ((OrderItemEvent.SqlOrderItemEvent)event).getOrderItemEventId().getOrderId();
        if (!stateEntityIdOrderId.equals(eventEntityIdOrderId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id OrderId %1$s in state but entity id OrderId %2$s in event", stateEntityIdOrderId, eventEntityIdOrderId);
        }

        String stateEntityIdOrderItemSeqId = this.getOrderItemId().getOrderItemSeqId();
        String eventEntityIdOrderItemSeqId = ((OrderItemEvent.SqlOrderItemEvent)event).getOrderItemEventId().getOrderItemSeqId();
        if (!stateEntityIdOrderItemSeqId.equals(eventEntityIdOrderItemSeqId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id OrderItemSeqId %1$s in state but entity id OrderItemSeqId %2$s in event", stateEntityIdOrderItemSeqId, eventEntityIdOrderItemSeqId);
        }


        if (getForReapplying()) { return; }
        OrderItemStateEvent stateEvent = event instanceof OrderItemStateEvent ? (OrderItemStateEvent)event : null;
        if (stateEvent == null) { return; }

        Long stateVersion = this.getVersion();
        Long stateEventStateVersion = stateEvent.getVersion();
        //if (stateEventStateVersion == null) {
        stateEventStateVersion = stateVersion == null ? OrderItemState.VERSION_NULL : stateVersion;
        stateEvent.setVersion(stateEventStateVersion);
        //}
        //if (!(stateVersion == null && stateEventStateVersion.equals(OrderItemState.VERSION_NULL)) && !stateEventStateVersion.equals(stateVersion))
        //{
        //    throw DomainError.named("concurrencyConflict", "Conflict between stateVersion (%1$s) and stateEventStateVersion (%2$s)", stateVersion, stateEventStateVersion);
        //}

    }


    public static class SimpleOrderItemState extends AbstractOrderItemState {

        public SimpleOrderItemState() {
        }

        public static SimpleOrderItemState newForReapplying() {
            SimpleOrderItemState s = new SimpleOrderItemState();
            s.initializeForReapplying();
            return s;
        }

    }



}

