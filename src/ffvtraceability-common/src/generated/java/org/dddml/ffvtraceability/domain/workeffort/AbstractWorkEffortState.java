// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.workeffort;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.workeffort.WorkEffortEvent.*;

public abstract class AbstractWorkEffortState implements WorkEffortState.SqlWorkEffortState {

    private String workEffortId;

    public String getWorkEffortId() {
        return this.workEffortId;
    }

    public void setWorkEffortId(String workEffortId) {
        this.workEffortId = workEffortId;
    }

    private String workEffortTypeId;

    public String getWorkEffortTypeId() {
        return this.workEffortTypeId;
    }

    public void setWorkEffortTypeId(String workEffortTypeId) {
        this.workEffortTypeId = workEffortTypeId;
    }

    private String currentStatusId;

    public String getCurrentStatusId() {
        return this.currentStatusId;
    }

    public void setCurrentStatusId(String currentStatusId) {
        this.currentStatusId = currentStatusId;
    }

    private OffsetDateTime lastStatusUpdate;

    public OffsetDateTime getLastStatusUpdate() {
        return this.lastStatusUpdate;
    }

    public void setLastStatusUpdate(OffsetDateTime lastStatusUpdate) {
        this.lastStatusUpdate = lastStatusUpdate;
    }

    private String workEffortPurposeTypeId;

    public String getWorkEffortPurposeTypeId() {
        return this.workEffortPurposeTypeId;
    }

    public void setWorkEffortPurposeTypeId(String workEffortPurposeTypeId) {
        this.workEffortPurposeTypeId = workEffortPurposeTypeId;
    }

    private String workEffortParentId;

    public String getWorkEffortParentId() {
        return this.workEffortParentId;
    }

    public void setWorkEffortParentId(String workEffortParentId) {
        this.workEffortParentId = workEffortParentId;
    }

    private String scopeEnumId;

    public String getScopeEnumId() {
        return this.scopeEnumId;
    }

    public void setScopeEnumId(String scopeEnumId) {
        this.scopeEnumId = scopeEnumId;
    }

    private Long priority;

    public Long getPriority() {
        return this.priority;
    }

    public void setPriority(Long priority) {
        this.priority = priority;
    }

    private Long percentComplete;

    public Long getPercentComplete() {
        return this.percentComplete;
    }

    public void setPercentComplete(Long percentComplete) {
        this.percentComplete = percentComplete;
    }

    private String workEffortName;

    public String getWorkEffortName() {
        return this.workEffortName;
    }

    public void setWorkEffortName(String workEffortName) {
        this.workEffortName = workEffortName;
    }

    private String showAsEnumId;

    public String getShowAsEnumId() {
        return this.showAsEnumId;
    }

    public void setShowAsEnumId(String showAsEnumId) {
        this.showAsEnumId = showAsEnumId;
    }

    private String sendNotificationEmail;

    public String getSendNotificationEmail() {
        return this.sendNotificationEmail;
    }

    public void setSendNotificationEmail(String sendNotificationEmail) {
        this.sendNotificationEmail = sendNotificationEmail;
    }

    private String description;

    public String getDescription() {
        return this.description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    private String locationDesc;

    public String getLocationDesc() {
        return this.locationDesc;
    }

    public void setLocationDesc(String locationDesc) {
        this.locationDesc = locationDesc;
    }

    private OffsetDateTime estimatedStartDate;

    public OffsetDateTime getEstimatedStartDate() {
        return this.estimatedStartDate;
    }

    public void setEstimatedStartDate(OffsetDateTime estimatedStartDate) {
        this.estimatedStartDate = estimatedStartDate;
    }

    private OffsetDateTime estimatedCompletionDate;

    public OffsetDateTime getEstimatedCompletionDate() {
        return this.estimatedCompletionDate;
    }

    public void setEstimatedCompletionDate(OffsetDateTime estimatedCompletionDate) {
        this.estimatedCompletionDate = estimatedCompletionDate;
    }

    private OffsetDateTime actualStartDate;

    public OffsetDateTime getActualStartDate() {
        return this.actualStartDate;
    }

    public void setActualStartDate(OffsetDateTime actualStartDate) {
        this.actualStartDate = actualStartDate;
    }

    private OffsetDateTime actualCompletionDate;

    public OffsetDateTime getActualCompletionDate() {
        return this.actualCompletionDate;
    }

    public void setActualCompletionDate(OffsetDateTime actualCompletionDate) {
        this.actualCompletionDate = actualCompletionDate;
    }

    private Double estimatedMilliSeconds;

    public Double getEstimatedMilliSeconds() {
        return this.estimatedMilliSeconds;
    }

    public void setEstimatedMilliSeconds(Double estimatedMilliSeconds) {
        this.estimatedMilliSeconds = estimatedMilliSeconds;
    }

    private Double estimatedSetupMillis;

    public Double getEstimatedSetupMillis() {
        return this.estimatedSetupMillis;
    }

    public void setEstimatedSetupMillis(Double estimatedSetupMillis) {
        this.estimatedSetupMillis = estimatedSetupMillis;
    }

    private String estimateCalcMethod;

    public String getEstimateCalcMethod() {
        return this.estimateCalcMethod;
    }

    public void setEstimateCalcMethod(String estimateCalcMethod) {
        this.estimateCalcMethod = estimateCalcMethod;
    }

    private Double actualMilliSeconds;

    public Double getActualMilliSeconds() {
        return this.actualMilliSeconds;
    }

    public void setActualMilliSeconds(Double actualMilliSeconds) {
        this.actualMilliSeconds = actualMilliSeconds;
    }

    private Double actualSetupMillis;

    public Double getActualSetupMillis() {
        return this.actualSetupMillis;
    }

    public void setActualSetupMillis(Double actualSetupMillis) {
        this.actualSetupMillis = actualSetupMillis;
    }

    private Double totalMilliSecondsAllowed;

    public Double getTotalMilliSecondsAllowed() {
        return this.totalMilliSecondsAllowed;
    }

    public void setTotalMilliSecondsAllowed(Double totalMilliSecondsAllowed) {
        this.totalMilliSecondsAllowed = totalMilliSecondsAllowed;
    }

    private java.math.BigDecimal totalMoneyAllowed;

    public java.math.BigDecimal getTotalMoneyAllowed() {
        return this.totalMoneyAllowed;
    }

    public void setTotalMoneyAllowed(java.math.BigDecimal totalMoneyAllowed) {
        this.totalMoneyAllowed = totalMoneyAllowed;
    }

    private String moneyUomId;

    public String getMoneyUomId() {
        return this.moneyUomId;
    }

    public void setMoneyUomId(String moneyUomId) {
        this.moneyUomId = moneyUomId;
    }

    private String specialTerms;

    public String getSpecialTerms() {
        return this.specialTerms;
    }

    public void setSpecialTerms(String specialTerms) {
        this.specialTerms = specialTerms;
    }

    private String universalId;

    public String getUniversalId() {
        return this.universalId;
    }

    public void setUniversalId(String universalId) {
        this.universalId = universalId;
    }

    private String sourceReferenceId;

    public String getSourceReferenceId() {
        return this.sourceReferenceId;
    }

    public void setSourceReferenceId(String sourceReferenceId) {
        this.sourceReferenceId = sourceReferenceId;
    }

    private String facilityId;

    public String getFacilityId() {
        return this.facilityId;
    }

    public void setFacilityId(String facilityId) {
        this.facilityId = facilityId;
    }

    private String infoUrl;

    public String getInfoUrl() {
        return this.infoUrl;
    }

    public void setInfoUrl(String infoUrl) {
        this.infoUrl = infoUrl;
    }

    private String tempExprId;

    public String getTempExprId() {
        return this.tempExprId;
    }

    public void setTempExprId(String tempExprId) {
        this.tempExprId = tempExprId;
    }

    private String runtimeDataId;

    public String getRuntimeDataId() {
        return this.runtimeDataId;
    }

    public void setRuntimeDataId(String runtimeDataId) {
        this.runtimeDataId = runtimeDataId;
    }

    private String noteId;

    public String getNoteId() {
        return this.noteId;
    }

    public void setNoteId(String noteId) {
        this.noteId = noteId;
    }

    private String serviceLoaderName;

    public String getServiceLoaderName() {
        return this.serviceLoaderName;
    }

    public void setServiceLoaderName(String serviceLoaderName) {
        this.serviceLoaderName = serviceLoaderName;
    }

    private java.math.BigDecimal quantityToProduce;

    public java.math.BigDecimal getQuantityToProduce() {
        return this.quantityToProduce;
    }

    public void setQuantityToProduce(java.math.BigDecimal quantityToProduce) {
        this.quantityToProduce = quantityToProduce;
    }

    private java.math.BigDecimal quantityProduced;

    public java.math.BigDecimal getQuantityProduced() {
        return this.quantityProduced;
    }

    public void setQuantityProduced(java.math.BigDecimal quantityProduced) {
        this.quantityProduced = quantityProduced;
    }

    private java.math.BigDecimal quantityRejected;

    public java.math.BigDecimal getQuantityRejected() {
        return this.quantityRejected;
    }

    public void setQuantityRejected(java.math.BigDecimal quantityRejected) {
        this.quantityRejected = quantityRejected;
    }

    private java.math.BigDecimal reservPersons;

    public java.math.BigDecimal getReservPersons() {
        return this.reservPersons;
    }

    public void setReservPersons(java.math.BigDecimal reservPersons) {
        this.reservPersons = reservPersons;
    }

    private java.math.BigDecimal reserv2ndPPPerc;

    public java.math.BigDecimal getReserv2ndPPPerc() {
        return this.reserv2ndPPPerc;
    }

    public void setReserv2ndPPPerc(java.math.BigDecimal reserv2ndPPPerc) {
        this.reserv2ndPPPerc = reserv2ndPPPerc;
    }

    private java.math.BigDecimal reservNthPPPerc;

    public java.math.BigDecimal getReservNthPPPerc() {
        return this.reservNthPPPerc;
    }

    public void setReservNthPPPerc(java.math.BigDecimal reservNthPPPerc) {
        this.reservNthPPPerc = reservNthPPPerc;
    }

    private String accommodationMapId;

    public String getAccommodationMapId() {
        return this.accommodationMapId;
    }

    public void setAccommodationMapId(String accommodationMapId) {
        this.accommodationMapId = accommodationMapId;
    }

    private String accommodationSpotId;

    public String getAccommodationSpotId() {
        return this.accommodationSpotId;
    }

    public void setAccommodationSpotId(String accommodationSpotId) {
        this.accommodationSpotId = accommodationSpotId;
    }

    private Long revisionNumber;

    public Long getRevisionNumber() {
        return this.revisionNumber;
    }

    public void setRevisionNumber(Long revisionNumber) {
        this.revisionNumber = revisionNumber;
    }

    private Long version;

    public Long getVersion() {
        return this.version;
    }

    public void setVersion(Long version) {
        this.version = version;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    private String tenantId;

    public String getTenantId() {
        return this.tenantId;
    }

    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    public boolean isStateUnsaved() {
        return this.getVersion() == null;
    }

    private Boolean stateReadOnly;

    public Boolean getStateReadOnly() { return this.stateReadOnly; }

    public void setStateReadOnly(Boolean readOnly) { this.stateReadOnly = readOnly; }

    private boolean forReapplying;

    public boolean getForReapplying() {
        return forReapplying;
    }

    public void setForReapplying(boolean forReapplying) {
        this.forReapplying = forReapplying;
    }

    public AbstractWorkEffortState(List<Event> events) {
        initializeForReapplying();
        if (events != null && events.size() > 0) {
            this.setWorkEffortId(((WorkEffortEvent.SqlWorkEffortEvent) events.get(0)).getWorkEffortEventId().getWorkEffortId());
            for (Event e : events) {
                mutate(e);
                this.setVersion((this.getVersion() == null ? WorkEffortState.VERSION_NULL : this.getVersion()) + 1);
            }
        }
    }


    public AbstractWorkEffortState() {
        initializeProperties();
    }

    protected void initializeForReapplying() {
        this.forReapplying = true;

        initializeProperties();
    }
    
    protected void initializeProperties() {
    }

    @Override
    public int hashCode() {
        return getWorkEffortId().hashCode();
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) { return true; }
        if (obj instanceof WorkEffortState) {
            return Objects.equals(this.getWorkEffortId(), ((WorkEffortState)obj).getWorkEffortId());
        }
        return false;
    }


    public void mutate(Event e) {
        setStateReadOnly(false);
        if (e instanceof WorkEffortStateCreated) {
            when((WorkEffortStateCreated) e);
        } else if (e instanceof WorkEffortStateMergePatched) {
            when((WorkEffortStateMergePatched) e);
        } else {
            throw new UnsupportedOperationException(String.format("Unsupported event type: %1$s", e.getClass().getName()));
        }
    }

    public void when(WorkEffortStateCreated e) {
        throwOnWrongEvent(e);

        this.setWorkEffortTypeId(e.getWorkEffortTypeId());
        this.setCurrentStatusId(e.getCurrentStatusId());
        this.setLastStatusUpdate(e.getLastStatusUpdate());
        this.setWorkEffortPurposeTypeId(e.getWorkEffortPurposeTypeId());
        this.setWorkEffortParentId(e.getWorkEffortParentId());
        this.setScopeEnumId(e.getScopeEnumId());
        this.setPriority(e.getPriority());
        this.setPercentComplete(e.getPercentComplete());
        this.setWorkEffortName(e.getWorkEffortName());
        this.setShowAsEnumId(e.getShowAsEnumId());
        this.setSendNotificationEmail(e.getSendNotificationEmail());
        this.setDescription(e.getDescription());
        this.setLocationDesc(e.getLocationDesc());
        this.setEstimatedStartDate(e.getEstimatedStartDate());
        this.setEstimatedCompletionDate(e.getEstimatedCompletionDate());
        this.setActualStartDate(e.getActualStartDate());
        this.setActualCompletionDate(e.getActualCompletionDate());
        this.setEstimatedMilliSeconds(e.getEstimatedMilliSeconds());
        this.setEstimatedSetupMillis(e.getEstimatedSetupMillis());
        this.setEstimateCalcMethod(e.getEstimateCalcMethod());
        this.setActualMilliSeconds(e.getActualMilliSeconds());
        this.setActualSetupMillis(e.getActualSetupMillis());
        this.setTotalMilliSecondsAllowed(e.getTotalMilliSecondsAllowed());
        this.setTotalMoneyAllowed(e.getTotalMoneyAllowed());
        this.setMoneyUomId(e.getMoneyUomId());
        this.setSpecialTerms(e.getSpecialTerms());
        this.setUniversalId(e.getUniversalId());
        this.setSourceReferenceId(e.getSourceReferenceId());
        this.setFacilityId(e.getFacilityId());
        this.setInfoUrl(e.getInfoUrl());
        this.setTempExprId(e.getTempExprId());
        this.setRuntimeDataId(e.getRuntimeDataId());
        this.setNoteId(e.getNoteId());
        this.setServiceLoaderName(e.getServiceLoaderName());
        this.setQuantityToProduce(e.getQuantityToProduce());
        this.setQuantityProduced(e.getQuantityProduced());
        this.setQuantityRejected(e.getQuantityRejected());
        this.setReservPersons(e.getReservPersons());
        this.setReserv2ndPPPerc(e.getReserv2ndPPPerc());
        this.setReservNthPPPerc(e.getReservNthPPPerc());
        this.setAccommodationMapId(e.getAccommodationMapId());
        this.setAccommodationSpotId(e.getAccommodationSpotId());
        this.setRevisionNumber(e.getRevisionNumber());

        this.setCreatedBy(e.getCreatedBy());
        this.setCreatedAt(e.getCreatedAt());

    }

    public void merge(WorkEffortState s) {
        if (s == this) {
            return;
        }
        this.setWorkEffortTypeId(s.getWorkEffortTypeId());
        this.setCurrentStatusId(s.getCurrentStatusId());
        this.setLastStatusUpdate(s.getLastStatusUpdate());
        this.setWorkEffortPurposeTypeId(s.getWorkEffortPurposeTypeId());
        this.setWorkEffortParentId(s.getWorkEffortParentId());
        this.setScopeEnumId(s.getScopeEnumId());
        this.setPriority(s.getPriority());
        this.setPercentComplete(s.getPercentComplete());
        this.setWorkEffortName(s.getWorkEffortName());
        this.setShowAsEnumId(s.getShowAsEnumId());
        this.setSendNotificationEmail(s.getSendNotificationEmail());
        this.setDescription(s.getDescription());
        this.setLocationDesc(s.getLocationDesc());
        this.setEstimatedStartDate(s.getEstimatedStartDate());
        this.setEstimatedCompletionDate(s.getEstimatedCompletionDate());
        this.setActualStartDate(s.getActualStartDate());
        this.setActualCompletionDate(s.getActualCompletionDate());
        this.setEstimatedMilliSeconds(s.getEstimatedMilliSeconds());
        this.setEstimatedSetupMillis(s.getEstimatedSetupMillis());
        this.setEstimateCalcMethod(s.getEstimateCalcMethod());
        this.setActualMilliSeconds(s.getActualMilliSeconds());
        this.setActualSetupMillis(s.getActualSetupMillis());
        this.setTotalMilliSecondsAllowed(s.getTotalMilliSecondsAllowed());
        this.setTotalMoneyAllowed(s.getTotalMoneyAllowed());
        this.setMoneyUomId(s.getMoneyUomId());
        this.setSpecialTerms(s.getSpecialTerms());
        this.setUniversalId(s.getUniversalId());
        this.setSourceReferenceId(s.getSourceReferenceId());
        this.setFacilityId(s.getFacilityId());
        this.setInfoUrl(s.getInfoUrl());
        this.setTempExprId(s.getTempExprId());
        this.setRuntimeDataId(s.getRuntimeDataId());
        this.setNoteId(s.getNoteId());
        this.setServiceLoaderName(s.getServiceLoaderName());
        this.setQuantityToProduce(s.getQuantityToProduce());
        this.setQuantityProduced(s.getQuantityProduced());
        this.setQuantityRejected(s.getQuantityRejected());
        this.setReservPersons(s.getReservPersons());
        this.setReserv2ndPPPerc(s.getReserv2ndPPPerc());
        this.setReservNthPPPerc(s.getReservNthPPPerc());
        this.setAccommodationMapId(s.getAccommodationMapId());
        this.setAccommodationSpotId(s.getAccommodationSpotId());
        this.setRevisionNumber(s.getRevisionNumber());
    }

    public void when(WorkEffortStateMergePatched e) {
        throwOnWrongEvent(e);

        if (e.getWorkEffortTypeId() == null) {
            if (e.getIsPropertyWorkEffortTypeIdRemoved() != null && e.getIsPropertyWorkEffortTypeIdRemoved()) {
                this.setWorkEffortTypeId(null);
            }
        } else {
            this.setWorkEffortTypeId(e.getWorkEffortTypeId());
        }
        if (e.getCurrentStatusId() == null) {
            if (e.getIsPropertyCurrentStatusIdRemoved() != null && e.getIsPropertyCurrentStatusIdRemoved()) {
                this.setCurrentStatusId(null);
            }
        } else {
            this.setCurrentStatusId(e.getCurrentStatusId());
        }
        if (e.getLastStatusUpdate() == null) {
            if (e.getIsPropertyLastStatusUpdateRemoved() != null && e.getIsPropertyLastStatusUpdateRemoved()) {
                this.setLastStatusUpdate(null);
            }
        } else {
            this.setLastStatusUpdate(e.getLastStatusUpdate());
        }
        if (e.getWorkEffortPurposeTypeId() == null) {
            if (e.getIsPropertyWorkEffortPurposeTypeIdRemoved() != null && e.getIsPropertyWorkEffortPurposeTypeIdRemoved()) {
                this.setWorkEffortPurposeTypeId(null);
            }
        } else {
            this.setWorkEffortPurposeTypeId(e.getWorkEffortPurposeTypeId());
        }
        if (e.getWorkEffortParentId() == null) {
            if (e.getIsPropertyWorkEffortParentIdRemoved() != null && e.getIsPropertyWorkEffortParentIdRemoved()) {
                this.setWorkEffortParentId(null);
            }
        } else {
            this.setWorkEffortParentId(e.getWorkEffortParentId());
        }
        if (e.getScopeEnumId() == null) {
            if (e.getIsPropertyScopeEnumIdRemoved() != null && e.getIsPropertyScopeEnumIdRemoved()) {
                this.setScopeEnumId(null);
            }
        } else {
            this.setScopeEnumId(e.getScopeEnumId());
        }
        if (e.getPriority() == null) {
            if (e.getIsPropertyPriorityRemoved() != null && e.getIsPropertyPriorityRemoved()) {
                this.setPriority(null);
            }
        } else {
            this.setPriority(e.getPriority());
        }
        if (e.getPercentComplete() == null) {
            if (e.getIsPropertyPercentCompleteRemoved() != null && e.getIsPropertyPercentCompleteRemoved()) {
                this.setPercentComplete(null);
            }
        } else {
            this.setPercentComplete(e.getPercentComplete());
        }
        if (e.getWorkEffortName() == null) {
            if (e.getIsPropertyWorkEffortNameRemoved() != null && e.getIsPropertyWorkEffortNameRemoved()) {
                this.setWorkEffortName(null);
            }
        } else {
            this.setWorkEffortName(e.getWorkEffortName());
        }
        if (e.getShowAsEnumId() == null) {
            if (e.getIsPropertyShowAsEnumIdRemoved() != null && e.getIsPropertyShowAsEnumIdRemoved()) {
                this.setShowAsEnumId(null);
            }
        } else {
            this.setShowAsEnumId(e.getShowAsEnumId());
        }
        if (e.getSendNotificationEmail() == null) {
            if (e.getIsPropertySendNotificationEmailRemoved() != null && e.getIsPropertySendNotificationEmailRemoved()) {
                this.setSendNotificationEmail(null);
            }
        } else {
            this.setSendNotificationEmail(e.getSendNotificationEmail());
        }
        if (e.getDescription() == null) {
            if (e.getIsPropertyDescriptionRemoved() != null && e.getIsPropertyDescriptionRemoved()) {
                this.setDescription(null);
            }
        } else {
            this.setDescription(e.getDescription());
        }
        if (e.getLocationDesc() == null) {
            if (e.getIsPropertyLocationDescRemoved() != null && e.getIsPropertyLocationDescRemoved()) {
                this.setLocationDesc(null);
            }
        } else {
            this.setLocationDesc(e.getLocationDesc());
        }
        if (e.getEstimatedStartDate() == null) {
            if (e.getIsPropertyEstimatedStartDateRemoved() != null && e.getIsPropertyEstimatedStartDateRemoved()) {
                this.setEstimatedStartDate(null);
            }
        } else {
            this.setEstimatedStartDate(e.getEstimatedStartDate());
        }
        if (e.getEstimatedCompletionDate() == null) {
            if (e.getIsPropertyEstimatedCompletionDateRemoved() != null && e.getIsPropertyEstimatedCompletionDateRemoved()) {
                this.setEstimatedCompletionDate(null);
            }
        } else {
            this.setEstimatedCompletionDate(e.getEstimatedCompletionDate());
        }
        if (e.getActualStartDate() == null) {
            if (e.getIsPropertyActualStartDateRemoved() != null && e.getIsPropertyActualStartDateRemoved()) {
                this.setActualStartDate(null);
            }
        } else {
            this.setActualStartDate(e.getActualStartDate());
        }
        if (e.getActualCompletionDate() == null) {
            if (e.getIsPropertyActualCompletionDateRemoved() != null && e.getIsPropertyActualCompletionDateRemoved()) {
                this.setActualCompletionDate(null);
            }
        } else {
            this.setActualCompletionDate(e.getActualCompletionDate());
        }
        if (e.getEstimatedMilliSeconds() == null) {
            if (e.getIsPropertyEstimatedMilliSecondsRemoved() != null && e.getIsPropertyEstimatedMilliSecondsRemoved()) {
                this.setEstimatedMilliSeconds(null);
            }
        } else {
            this.setEstimatedMilliSeconds(e.getEstimatedMilliSeconds());
        }
        if (e.getEstimatedSetupMillis() == null) {
            if (e.getIsPropertyEstimatedSetupMillisRemoved() != null && e.getIsPropertyEstimatedSetupMillisRemoved()) {
                this.setEstimatedSetupMillis(null);
            }
        } else {
            this.setEstimatedSetupMillis(e.getEstimatedSetupMillis());
        }
        if (e.getEstimateCalcMethod() == null) {
            if (e.getIsPropertyEstimateCalcMethodRemoved() != null && e.getIsPropertyEstimateCalcMethodRemoved()) {
                this.setEstimateCalcMethod(null);
            }
        } else {
            this.setEstimateCalcMethod(e.getEstimateCalcMethod());
        }
        if (e.getActualMilliSeconds() == null) {
            if (e.getIsPropertyActualMilliSecondsRemoved() != null && e.getIsPropertyActualMilliSecondsRemoved()) {
                this.setActualMilliSeconds(null);
            }
        } else {
            this.setActualMilliSeconds(e.getActualMilliSeconds());
        }
        if (e.getActualSetupMillis() == null) {
            if (e.getIsPropertyActualSetupMillisRemoved() != null && e.getIsPropertyActualSetupMillisRemoved()) {
                this.setActualSetupMillis(null);
            }
        } else {
            this.setActualSetupMillis(e.getActualSetupMillis());
        }
        if (e.getTotalMilliSecondsAllowed() == null) {
            if (e.getIsPropertyTotalMilliSecondsAllowedRemoved() != null && e.getIsPropertyTotalMilliSecondsAllowedRemoved()) {
                this.setTotalMilliSecondsAllowed(null);
            }
        } else {
            this.setTotalMilliSecondsAllowed(e.getTotalMilliSecondsAllowed());
        }
        if (e.getTotalMoneyAllowed() == null) {
            if (e.getIsPropertyTotalMoneyAllowedRemoved() != null && e.getIsPropertyTotalMoneyAllowedRemoved()) {
                this.setTotalMoneyAllowed(null);
            }
        } else {
            this.setTotalMoneyAllowed(e.getTotalMoneyAllowed());
        }
        if (e.getMoneyUomId() == null) {
            if (e.getIsPropertyMoneyUomIdRemoved() != null && e.getIsPropertyMoneyUomIdRemoved()) {
                this.setMoneyUomId(null);
            }
        } else {
            this.setMoneyUomId(e.getMoneyUomId());
        }
        if (e.getSpecialTerms() == null) {
            if (e.getIsPropertySpecialTermsRemoved() != null && e.getIsPropertySpecialTermsRemoved()) {
                this.setSpecialTerms(null);
            }
        } else {
            this.setSpecialTerms(e.getSpecialTerms());
        }
        if (e.getUniversalId() == null) {
            if (e.getIsPropertyUniversalIdRemoved() != null && e.getIsPropertyUniversalIdRemoved()) {
                this.setUniversalId(null);
            }
        } else {
            this.setUniversalId(e.getUniversalId());
        }
        if (e.getSourceReferenceId() == null) {
            if (e.getIsPropertySourceReferenceIdRemoved() != null && e.getIsPropertySourceReferenceIdRemoved()) {
                this.setSourceReferenceId(null);
            }
        } else {
            this.setSourceReferenceId(e.getSourceReferenceId());
        }
        if (e.getFacilityId() == null) {
            if (e.getIsPropertyFacilityIdRemoved() != null && e.getIsPropertyFacilityIdRemoved()) {
                this.setFacilityId(null);
            }
        } else {
            this.setFacilityId(e.getFacilityId());
        }
        if (e.getInfoUrl() == null) {
            if (e.getIsPropertyInfoUrlRemoved() != null && e.getIsPropertyInfoUrlRemoved()) {
                this.setInfoUrl(null);
            }
        } else {
            this.setInfoUrl(e.getInfoUrl());
        }
        if (e.getTempExprId() == null) {
            if (e.getIsPropertyTempExprIdRemoved() != null && e.getIsPropertyTempExprIdRemoved()) {
                this.setTempExprId(null);
            }
        } else {
            this.setTempExprId(e.getTempExprId());
        }
        if (e.getRuntimeDataId() == null) {
            if (e.getIsPropertyRuntimeDataIdRemoved() != null && e.getIsPropertyRuntimeDataIdRemoved()) {
                this.setRuntimeDataId(null);
            }
        } else {
            this.setRuntimeDataId(e.getRuntimeDataId());
        }
        if (e.getNoteId() == null) {
            if (e.getIsPropertyNoteIdRemoved() != null && e.getIsPropertyNoteIdRemoved()) {
                this.setNoteId(null);
            }
        } else {
            this.setNoteId(e.getNoteId());
        }
        if (e.getServiceLoaderName() == null) {
            if (e.getIsPropertyServiceLoaderNameRemoved() != null && e.getIsPropertyServiceLoaderNameRemoved()) {
                this.setServiceLoaderName(null);
            }
        } else {
            this.setServiceLoaderName(e.getServiceLoaderName());
        }
        if (e.getQuantityToProduce() == null) {
            if (e.getIsPropertyQuantityToProduceRemoved() != null && e.getIsPropertyQuantityToProduceRemoved()) {
                this.setQuantityToProduce(null);
            }
        } else {
            this.setQuantityToProduce(e.getQuantityToProduce());
        }
        if (e.getQuantityProduced() == null) {
            if (e.getIsPropertyQuantityProducedRemoved() != null && e.getIsPropertyQuantityProducedRemoved()) {
                this.setQuantityProduced(null);
            }
        } else {
            this.setQuantityProduced(e.getQuantityProduced());
        }
        if (e.getQuantityRejected() == null) {
            if (e.getIsPropertyQuantityRejectedRemoved() != null && e.getIsPropertyQuantityRejectedRemoved()) {
                this.setQuantityRejected(null);
            }
        } else {
            this.setQuantityRejected(e.getQuantityRejected());
        }
        if (e.getReservPersons() == null) {
            if (e.getIsPropertyReservPersonsRemoved() != null && e.getIsPropertyReservPersonsRemoved()) {
                this.setReservPersons(null);
            }
        } else {
            this.setReservPersons(e.getReservPersons());
        }
        if (e.getReserv2ndPPPerc() == null) {
            if (e.getIsPropertyReserv2ndPPPercRemoved() != null && e.getIsPropertyReserv2ndPPPercRemoved()) {
                this.setReserv2ndPPPerc(null);
            }
        } else {
            this.setReserv2ndPPPerc(e.getReserv2ndPPPerc());
        }
        if (e.getReservNthPPPerc() == null) {
            if (e.getIsPropertyReservNthPPPercRemoved() != null && e.getIsPropertyReservNthPPPercRemoved()) {
                this.setReservNthPPPerc(null);
            }
        } else {
            this.setReservNthPPPerc(e.getReservNthPPPerc());
        }
        if (e.getAccommodationMapId() == null) {
            if (e.getIsPropertyAccommodationMapIdRemoved() != null && e.getIsPropertyAccommodationMapIdRemoved()) {
                this.setAccommodationMapId(null);
            }
        } else {
            this.setAccommodationMapId(e.getAccommodationMapId());
        }
        if (e.getAccommodationSpotId() == null) {
            if (e.getIsPropertyAccommodationSpotIdRemoved() != null && e.getIsPropertyAccommodationSpotIdRemoved()) {
                this.setAccommodationSpotId(null);
            }
        } else {
            this.setAccommodationSpotId(e.getAccommodationSpotId());
        }
        if (e.getRevisionNumber() == null) {
            if (e.getIsPropertyRevisionNumberRemoved() != null && e.getIsPropertyRevisionNumberRemoved()) {
                this.setRevisionNumber(null);
            }
        } else {
            this.setRevisionNumber(e.getRevisionNumber());
        }

        this.setUpdatedBy(e.getCreatedBy());
        this.setUpdatedAt(e.getCreatedAt());

    }

    public void save() {
    }

    protected void throwOnWrongEvent(WorkEffortEvent event) {
        String stateEntityId = this.getWorkEffortId(); // Aggregate Id
        String eventEntityId = ((WorkEffortEvent.SqlWorkEffortEvent)event).getWorkEffortEventId().getWorkEffortId(); // EntityBase.Aggregate.GetEventIdPropertyIdName();
        if (!stateEntityId.equals(eventEntityId)) {
            throw DomainError.named("mutateWrongEntity", "Entity Id %1$s in state but entity id %2$s in event", stateEntityId, eventEntityId);
        }


        Long stateVersion = this.getVersion();
        Long eventVersion = ((WorkEffortEvent.SqlWorkEffortEvent)event).getWorkEffortEventId().getVersion();// Event Version
        if (eventVersion == null) {
            throw new NullPointerException("event.getWorkEffortEventId().getVersion() == null");
        }
        if (!(stateVersion == null && eventVersion.equals(VERSION_NULL)) && !eventVersion.equals(stateVersion)) {
            throw DomainError.named("concurrencyConflict", "Conflict between state version (%1$s) and event version (%2$s)", stateVersion, eventVersion == VERSION_NULL ? "NULL" : eventVersion + "");
        }

    }


    public static class SimpleWorkEffortState extends AbstractWorkEffortState {

        public SimpleWorkEffortState() {
        }

        public SimpleWorkEffortState(List<Event> events) {
            super(events);
        }

        public static SimpleWorkEffortState newForReapplying() {
            SimpleWorkEffortState s = new SimpleWorkEffortState();
            s.initializeForReapplying();
            return s;
        }

    }



}

