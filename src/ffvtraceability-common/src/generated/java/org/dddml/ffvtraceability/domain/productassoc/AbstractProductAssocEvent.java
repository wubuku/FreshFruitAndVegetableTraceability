// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.productassoc;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractProductAssocEvent extends AbstractEvent implements ProductAssocEvent.SqlProductAssocEvent {
    private ProductAssocEventId productAssocEventId = new ProductAssocEventId();

    public ProductAssocEventId getProductAssocEventId() {
        return this.productAssocEventId;
    }

    public void setProductAssocEventId(ProductAssocEventId eventId) {
        this.productAssocEventId = eventId;
    }
    
    public ProductAssocId getProductAssocId() {
        return getProductAssocEventId().getProductAssocId();
    }

    public void setProductAssocId(ProductAssocId productAssocId) {
        getProductAssocEventId().setProductAssocId(productAssocId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getProductAssocEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getProductAssocEventId().setVersion(version);
    }

    private String tenantId;

    public String getTenantId() {
        return this.tenantId;
    }

    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractProductAssocEvent() {
    }

    protected AbstractProductAssocEvent(ProductAssocEventId eventId) {
        this.productAssocEventId = eventId;
    }


    public abstract String getEventType();

    public static class ProductAssocLobEvent extends AbstractProductAssocEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "ProductAssocLobEvent";
        }

    }


    public static abstract class AbstractProductAssocStateEvent extends AbstractProductAssocEvent implements ProductAssocEvent.ProductAssocStateEvent {
        private OffsetDateTime thruDate;

        public OffsetDateTime getThruDate()
        {
            return this.thruDate;
        }

        public void setThruDate(OffsetDateTime thruDate)
        {
            this.thruDate = thruDate;
        }

        private Long sequenceNum;

        public Long getSequenceNum()
        {
            return this.sequenceNum;
        }

        public void setSequenceNum(Long sequenceNum)
        {
            this.sequenceNum = sequenceNum;
        }

        private String reason;

        public String getReason()
        {
            return this.reason;
        }

        public void setReason(String reason)
        {
            this.reason = reason;
        }

        private java.math.BigDecimal quantity;

        public java.math.BigDecimal getQuantity()
        {
            return this.quantity;
        }

        public void setQuantity(java.math.BigDecimal quantity)
        {
            this.quantity = quantity;
        }

        private java.math.BigDecimal scrapFactor;

        public java.math.BigDecimal getScrapFactor()
        {
            return this.scrapFactor;
        }

        public void setScrapFactor(java.math.BigDecimal scrapFactor)
        {
            this.scrapFactor = scrapFactor;
        }

        private String instruction;

        public String getInstruction()
        {
            return this.instruction;
        }

        public void setInstruction(String instruction)
        {
            this.instruction = instruction;
        }

        private String routingWorkEffortId;

        public String getRoutingWorkEffortId()
        {
            return this.routingWorkEffortId;
        }

        public void setRoutingWorkEffortId(String routingWorkEffortId)
        {
            this.routingWorkEffortId = routingWorkEffortId;
        }

        private String estimateCalcMethod;

        public String getEstimateCalcMethod()
        {
            return this.estimateCalcMethod;
        }

        public void setEstimateCalcMethod(String estimateCalcMethod)
        {
            this.estimateCalcMethod = estimateCalcMethod;
        }

        private String recurrenceInfoId;

        public String getRecurrenceInfoId()
        {
            return this.recurrenceInfoId;
        }

        public void setRecurrenceInfoId(String recurrenceInfoId)
        {
            this.recurrenceInfoId = recurrenceInfoId;
        }

        protected AbstractProductAssocStateEvent(ProductAssocEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractProductAssocStateCreated extends AbstractProductAssocStateEvent implements ProductAssocEvent.ProductAssocStateCreated
    {
        public AbstractProductAssocStateCreated() {
            this(new ProductAssocEventId());
        }

        public AbstractProductAssocStateCreated(ProductAssocEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractProductAssocStateMergePatched extends AbstractProductAssocStateEvent implements ProductAssocEvent.ProductAssocStateMergePatched
    {
        public AbstractProductAssocStateMergePatched() {
            this(new ProductAssocEventId());
        }

        public AbstractProductAssocStateMergePatched(ProductAssocEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyThruDateRemoved;

        public Boolean getIsPropertyThruDateRemoved() {
            return this.isPropertyThruDateRemoved;
        }

        public void setIsPropertyThruDateRemoved(Boolean removed) {
            this.isPropertyThruDateRemoved = removed;
        }

        private Boolean isPropertySequenceNumRemoved;

        public Boolean getIsPropertySequenceNumRemoved() {
            return this.isPropertySequenceNumRemoved;
        }

        public void setIsPropertySequenceNumRemoved(Boolean removed) {
            this.isPropertySequenceNumRemoved = removed;
        }

        private Boolean isPropertyReasonRemoved;

        public Boolean getIsPropertyReasonRemoved() {
            return this.isPropertyReasonRemoved;
        }

        public void setIsPropertyReasonRemoved(Boolean removed) {
            this.isPropertyReasonRemoved = removed;
        }

        private Boolean isPropertyQuantityRemoved;

        public Boolean getIsPropertyQuantityRemoved() {
            return this.isPropertyQuantityRemoved;
        }

        public void setIsPropertyQuantityRemoved(Boolean removed) {
            this.isPropertyQuantityRemoved = removed;
        }

        private Boolean isPropertyScrapFactorRemoved;

        public Boolean getIsPropertyScrapFactorRemoved() {
            return this.isPropertyScrapFactorRemoved;
        }

        public void setIsPropertyScrapFactorRemoved(Boolean removed) {
            this.isPropertyScrapFactorRemoved = removed;
        }

        private Boolean isPropertyInstructionRemoved;

        public Boolean getIsPropertyInstructionRemoved() {
            return this.isPropertyInstructionRemoved;
        }

        public void setIsPropertyInstructionRemoved(Boolean removed) {
            this.isPropertyInstructionRemoved = removed;
        }

        private Boolean isPropertyRoutingWorkEffortIdRemoved;

        public Boolean getIsPropertyRoutingWorkEffortIdRemoved() {
            return this.isPropertyRoutingWorkEffortIdRemoved;
        }

        public void setIsPropertyRoutingWorkEffortIdRemoved(Boolean removed) {
            this.isPropertyRoutingWorkEffortIdRemoved = removed;
        }

        private Boolean isPropertyEstimateCalcMethodRemoved;

        public Boolean getIsPropertyEstimateCalcMethodRemoved() {
            return this.isPropertyEstimateCalcMethodRemoved;
        }

        public void setIsPropertyEstimateCalcMethodRemoved(Boolean removed) {
            this.isPropertyEstimateCalcMethodRemoved = removed;
        }

        private Boolean isPropertyRecurrenceInfoIdRemoved;

        public Boolean getIsPropertyRecurrenceInfoIdRemoved() {
            return this.isPropertyRecurrenceInfoIdRemoved;
        }

        public void setIsPropertyRecurrenceInfoIdRemoved(Boolean removed) {
            this.isPropertyRecurrenceInfoIdRemoved = removed;
        }


    }


    public static abstract class AbstractProductAssocStateDeleted extends AbstractProductAssocStateEvent implements ProductAssocEvent.ProductAssocStateDeleted
    {
        public AbstractProductAssocStateDeleted() {
            this(new ProductAssocEventId());
        }

        public AbstractProductAssocStateDeleted(ProductAssocEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.DELETED;
        }

    }

    public static class SimpleProductAssocStateCreated extends AbstractProductAssocStateCreated
    {
        public SimpleProductAssocStateCreated() {
        }

        public SimpleProductAssocStateCreated(ProductAssocEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleProductAssocStateMergePatched extends AbstractProductAssocStateMergePatched
    {
        public SimpleProductAssocStateMergePatched() {
        }

        public SimpleProductAssocStateMergePatched(ProductAssocEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleProductAssocStateDeleted extends AbstractProductAssocStateDeleted
    {
        public SimpleProductAssocStateDeleted() {
        }

        public SimpleProductAssocStateDeleted(ProductAssocEventId eventId) {
            super(eventId);
        }
    }

}

