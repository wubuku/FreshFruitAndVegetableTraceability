// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.inventoryitem;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractInventoryItemDetailEvent extends AbstractEvent implements InventoryItemDetailEvent.SqlInventoryItemDetailEvent {
    private InventoryItemDetailState.MutableInventoryItemDetailState state;

    public InventoryItemDetailState.MutableInventoryItemDetailState getInventoryItemDetailState() {
        return state;
    }

    public InventoryItemDetailEventId getInventoryItemDetailEventId() {
        InventoryItemDetailEventId eventId = new InventoryItemDetailEventId(state.getInventoryItemId(), state.getInventoryItemDetailSeqId(), InventoryItemState.VERSION_NULL);
        return eventId;
    }

    public void setInventoryItemDetailEventId(InventoryItemDetailEventId eventId) {
        this.state.setInventoryItemId(eventId.getInventoryItemId());
        this.state.setInventoryItemDetailSeqId(eventId.getInventoryItemDetailSeqId());
    }

    public String getInventoryItemDetailSeqId() {
        return getInventoryItemDetailEventId().getInventoryItemDetailSeqId();
    }

    public void setInventoryItemDetailSeqId(String inventoryItemDetailSeqId) {
        getInventoryItemDetailEventId().setInventoryItemDetailSeqId(inventoryItemDetailSeqId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public String getCreatedBy() {
        return this.state.getCreatedBy();
    }

    public void setCreatedBy(String createdBy) {
        this.state.setCreatedBy(createdBy);
    }

    public OffsetDateTime getCreatedAt() {
        return this.state.getCreatedAt();
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.state.setCreatedAt(createdAt);
    }


    public String getCommandId() {
        return this.state.getCommandId();
    }

    public void setCommandId(String commandId) {
        this.state.setCommandId(commandId);
    }

    protected AbstractInventoryItemDetailEvent() {
        this(new AbstractInventoryItemDetailState.SimpleInventoryItemDetailState());
    }

    protected AbstractInventoryItemDetailEvent(InventoryItemDetailEventId eventId) {
        this(new AbstractInventoryItemDetailState.SimpleInventoryItemDetailState());
        setInventoryItemDetailEventId(eventId);
    }

    protected AbstractInventoryItemDetailEvent(InventoryItemDetailState s) {
        if (s == null) { throw new IllegalArgumentException(); }
        this.state = (InventoryItemDetailState.MutableInventoryItemDetailState)s;
    }


    public abstract String getEventType();


    public static abstract class AbstractInventoryItemDetailStateEvent extends AbstractInventoryItemDetailEvent implements InventoryItemDetailEvent.InventoryItemDetailStateEvent {
        public Long getVersion()
        {
            return this.getInventoryItemDetailState().getVersion();
        }

        public void setVersion(Long version)
        {
            this.getInventoryItemDetailState().setVersion(version);
        }

        public OffsetDateTime getEffectiveDate()
        {
            return this.getInventoryItemDetailState().getEffectiveDate();
        }

        public void setEffectiveDate(OffsetDateTime effectiveDate)
        {
            this.getInventoryItemDetailState().setEffectiveDate(effectiveDate);
        }

        public java.math.BigDecimal getQuantityOnHandDiff()
        {
            return this.getInventoryItemDetailState().getQuantityOnHandDiff();
        }

        public void setQuantityOnHandDiff(java.math.BigDecimal quantityOnHandDiff)
        {
            this.getInventoryItemDetailState().setQuantityOnHandDiff(quantityOnHandDiff);
        }

        public java.math.BigDecimal getAvailableToPromiseDiff()
        {
            return this.getInventoryItemDetailState().getAvailableToPromiseDiff();
        }

        public void setAvailableToPromiseDiff(java.math.BigDecimal availableToPromiseDiff)
        {
            this.getInventoryItemDetailState().setAvailableToPromiseDiff(availableToPromiseDiff);
        }

        public java.math.BigDecimal getAccountingQuantityDiff()
        {
            return this.getInventoryItemDetailState().getAccountingQuantityDiff();
        }

        public void setAccountingQuantityDiff(java.math.BigDecimal accountingQuantityDiff)
        {
            this.getInventoryItemDetailState().setAccountingQuantityDiff(accountingQuantityDiff);
        }

        public java.math.BigDecimal getUnitCost()
        {
            return this.getInventoryItemDetailState().getUnitCost();
        }

        public void setUnitCost(java.math.BigDecimal unitCost)
        {
            this.getInventoryItemDetailState().setUnitCost(unitCost);
        }

        public String getOrderId()
        {
            return this.getInventoryItemDetailState().getOrderId();
        }

        public void setOrderId(String orderId)
        {
            this.getInventoryItemDetailState().setOrderId(orderId);
        }

        public String getOrderItemSeqId()
        {
            return this.getInventoryItemDetailState().getOrderItemSeqId();
        }

        public void setOrderItemSeqId(String orderItemSeqId)
        {
            this.getInventoryItemDetailState().setOrderItemSeqId(orderItemSeqId);
        }

        public String getShipGroupSeqId()
        {
            return this.getInventoryItemDetailState().getShipGroupSeqId();
        }

        public void setShipGroupSeqId(String shipGroupSeqId)
        {
            this.getInventoryItemDetailState().setShipGroupSeqId(shipGroupSeqId);
        }

        public String getShipmentId()
        {
            return this.getInventoryItemDetailState().getShipmentId();
        }

        public void setShipmentId(String shipmentId)
        {
            this.getInventoryItemDetailState().setShipmentId(shipmentId);
        }

        public String getShipmentItemSeqId()
        {
            return this.getInventoryItemDetailState().getShipmentItemSeqId();
        }

        public void setShipmentItemSeqId(String shipmentItemSeqId)
        {
            this.getInventoryItemDetailState().setShipmentItemSeqId(shipmentItemSeqId);
        }

        public String getReturnId()
        {
            return this.getInventoryItemDetailState().getReturnId();
        }

        public void setReturnId(String returnId)
        {
            this.getInventoryItemDetailState().setReturnId(returnId);
        }

        public String getReturnItemSeqId()
        {
            return this.getInventoryItemDetailState().getReturnItemSeqId();
        }

        public void setReturnItemSeqId(String returnItemSeqId)
        {
            this.getInventoryItemDetailState().setReturnItemSeqId(returnItemSeqId);
        }

        public String getWorkEffortId()
        {
            return this.getInventoryItemDetailState().getWorkEffortId();
        }

        public void setWorkEffortId(String workEffortId)
        {
            this.getInventoryItemDetailState().setWorkEffortId(workEffortId);
        }

        public String getFixedAssetId()
        {
            return this.getInventoryItemDetailState().getFixedAssetId();
        }

        public void setFixedAssetId(String fixedAssetId)
        {
            this.getInventoryItemDetailState().setFixedAssetId(fixedAssetId);
        }

        public String getMaintHistSeqId()
        {
            return this.getInventoryItemDetailState().getMaintHistSeqId();
        }

        public void setMaintHistSeqId(String maintHistSeqId)
        {
            this.getInventoryItemDetailState().setMaintHistSeqId(maintHistSeqId);
        }

        public String getItemIssuanceId()
        {
            return this.getInventoryItemDetailState().getItemIssuanceId();
        }

        public void setItemIssuanceId(String itemIssuanceId)
        {
            this.getInventoryItemDetailState().setItemIssuanceId(itemIssuanceId);
        }

        public String getReceiptId()
        {
            return this.getInventoryItemDetailState().getReceiptId();
        }

        public void setReceiptId(String receiptId)
        {
            this.getInventoryItemDetailState().setReceiptId(receiptId);
        }

        public String getPhysicalInventoryId()
        {
            return this.getInventoryItemDetailState().getPhysicalInventoryId();
        }

        public void setPhysicalInventoryId(String physicalInventoryId)
        {
            this.getInventoryItemDetailState().setPhysicalInventoryId(physicalInventoryId);
        }

        public String getReasonEnumId()
        {
            return this.getInventoryItemDetailState().getReasonEnumId();
        }

        public void setReasonEnumId(String reasonEnumId)
        {
            this.getInventoryItemDetailState().setReasonEnumId(reasonEnumId);
        }

        public String getDescription()
        {
            return this.getInventoryItemDetailState().getDescription();
        }

        public void setDescription(String description)
        {
            this.getInventoryItemDetailState().setDescription(description);
        }

        protected AbstractInventoryItemDetailStateEvent(InventoryItemDetailEventId eventId) {
            super(eventId);
        }

        public AbstractInventoryItemDetailStateEvent(InventoryItemDetailState s) {
            super(s);
        }
    }

    public static abstract class AbstractInventoryItemDetailStateCreated extends AbstractInventoryItemDetailStateEvent implements InventoryItemDetailEvent.InventoryItemDetailStateCreated
    {
        public AbstractInventoryItemDetailStateCreated() {
            this(new InventoryItemDetailEventId());
        }

        public AbstractInventoryItemDetailStateCreated(InventoryItemDetailEventId eventId) {
            super(eventId);
        }

        public AbstractInventoryItemDetailStateCreated(InventoryItemDetailState s) {
            super(s);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }



    public static class SimpleInventoryItemDetailStateCreated extends AbstractInventoryItemDetailStateCreated
    {
        public SimpleInventoryItemDetailStateCreated() {
        }

        public SimpleInventoryItemDetailStateCreated(InventoryItemDetailEventId eventId) {
            super(eventId);
        }

        public SimpleInventoryItemDetailStateCreated(InventoryItemDetailState s) {
            super(s);
        }
    }

}

