// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.inventoryitem;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractInventoryItemDetailEvent extends AbstractEvent implements InventoryItemDetailEvent.SqlInventoryItemDetailEvent {
    private InventoryItemDetailState.MutableInventoryItemDetailState state;

    public InventoryItemDetailState.MutableInventoryItemDetailState getInventoryItemDetailState() {
        return state;
    }

    public InventoryItemDetailEventId getInventoryItemDetailEventId() {
        InventoryItemDetailEventId eventId = new InventoryItemDetailEventId(state.getInventoryItemId(), state.getInventoryItemDetailSeqId(), InventoryItemState.VERSION_NULL);
        return eventId;
    }

    public void setInventoryItemDetailEventId(InventoryItemDetailEventId eventId) {
        this.state.setInventoryItemId(eventId.getInventoryItemId());
        this.state.setInventoryItemDetailSeqId(eventId.getInventoryItemDetailSeqId());
    }

    public String getInventoryItemDetailSeqId() {
        return getInventoryItemDetailEventId().getInventoryItemDetailSeqId();
    }

    public void setInventoryItemDetailSeqId(String inventoryItemDetailSeqId) {
        getInventoryItemDetailEventId().setInventoryItemDetailSeqId(inventoryItemDetailSeqId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public String getCreatedBy() {
        return this.state.getCreatedBy();
    }

    public void setCreatedBy(String createdBy) {
        this.state.setCreatedBy(createdBy);
    }

    public OffsetDateTime getCreatedAt() {
        return this.state.getCreatedAt();
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.state.setCreatedAt(createdAt);
    }


    public String getCommandId() {
        return this.state.getCommandId();
    }

    public void setCommandId(String commandId) {
        this.state.setCommandId(commandId);
    }

    protected AbstractInventoryItemDetailEvent() {
        this(new AbstractInventoryItemDetailState.SimpleInventoryItemDetailState());
    }

    protected AbstractInventoryItemDetailEvent(InventoryItemDetailEventId eventId) {
        this(new AbstractInventoryItemDetailState.SimpleInventoryItemDetailState());
        setInventoryItemDetailEventId(eventId);
    }

    protected AbstractInventoryItemDetailEvent(InventoryItemDetailState s) {
        if (s == null) { throw new IllegalArgumentException(); }
        this.state = (InventoryItemDetailState.MutableInventoryItemDetailState)s;
    }


    public abstract String getEventType();


}

