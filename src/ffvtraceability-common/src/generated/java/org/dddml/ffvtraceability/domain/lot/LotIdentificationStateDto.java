// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.lot;

import java.util.*;
import java.math.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;


public class LotIdentificationStateDto {

    private String lotIdentificationTypeId;

    public String getLotIdentificationTypeId()
    {
        return this.lotIdentificationTypeId;
    }

    public void setLotIdentificationTypeId(String lotIdentificationTypeId)
    {
        this.lotIdentificationTypeId = lotIdentificationTypeId;
    }

    private String idValue;

    public String getIdValue()
    {
        return this.idValue;
    }

    public void setIdValue(String idValue)
    {
        this.idValue = idValue;
    }

    private String gtin;

    public String getGtin()
    {
        return this.gtin;
    }

    public void setGtin(String gtin)
    {
        this.gtin = gtin;
    }

    private String gs1Batch;

    public String getGs1Batch()
    {
        return this.gs1Batch;
    }

    public void setGs1Batch(String gs1Batch)
    {
        this.gs1Batch = gs1Batch;
    }

    private String sourceFacilityId;

    public String getSourceFacilityId()
    {
        return this.sourceFacilityId;
    }

    public void setSourceFacilityId(String sourceFacilityId)
    {
        this.sourceFacilityId = sourceFacilityId;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }

    private String lotId;

    public String getLotId()
    {
        return this.lotId;
    }

    public void setLotId(String lotId)
    {
        this.lotId = lotId;
    }

    private String createdBy;

    public String getCreatedBy()
    {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy)
    {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt()
    {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt)
    {
        this.createdAt = createdAt;
    }

    private String updatedBy;

    public String getUpdatedBy()
    {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy)
    {
        this.updatedBy = updatedBy;
    }

    private OffsetDateTime updatedAt;

    public OffsetDateTime getUpdatedAt()
    {
        return this.updatedAt;
    }

    public void setUpdatedAt(OffsetDateTime updatedAt)
    {
        this.updatedAt = updatedAt;
    }


    public static class DtoConverter extends AbstractStateDtoConverter
    {
        public static Collection<String> collectionFieldNames = Arrays.asList(new String[]{});

        @Override
        protected boolean isCollectionField(String fieldName) {
            return CollectionUtils.collectionContainsIgnoringCase(collectionFieldNames, fieldName);
        }

        public LotIdentificationStateDto[] toLotIdentificationStateDtoArray(Iterable<LotIdentificationState> states) {
            return toLotIdentificationStateDtoList(states).toArray(new LotIdentificationStateDto[0]);
        }

        public List<LotIdentificationStateDto> toLotIdentificationStateDtoList(Iterable<LotIdentificationState> states) {
            ArrayList<LotIdentificationStateDto> stateDtos = new ArrayList();
            for (LotIdentificationState s : states) {
                LotIdentificationStateDto dto = toLotIdentificationStateDto(s);
                stateDtos.add(dto);
            }
            return stateDtos;
        }

        public LotIdentificationStateDto toLotIdentificationStateDto(LotIdentificationState state)
        {
            if(state == null) {
                return null;
            }
            LotIdentificationStateDto dto = new LotIdentificationStateDto();
            if (returnedFieldsContains("LotIdentificationTypeId")) {
                dto.setLotIdentificationTypeId(state.getLotIdentificationTypeId());
            }
            if (returnedFieldsContains("IdValue")) {
                dto.setIdValue(state.getIdValue());
            }
            if (returnedFieldsContains("Gtin")) {
                dto.setGtin(state.getGtin());
            }
            if (returnedFieldsContains("Gs1Batch")) {
                dto.setGs1Batch(state.getGs1Batch());
            }
            if (returnedFieldsContains("SourceFacilityId")) {
                dto.setSourceFacilityId(state.getSourceFacilityId());
            }
            if (returnedFieldsContains("Version")) {
                dto.setVersion(state.getVersion());
            }
            if (returnedFieldsContains("LotId")) {
                dto.setLotId(state.getLotId());
            }
            if (returnedFieldsContains("CreatedBy")) {
                dto.setCreatedBy(state.getCreatedBy());
            }
            if (returnedFieldsContains("CreatedAt")) {
                dto.setCreatedAt(state.getCreatedAt());
            }
            if (returnedFieldsContains("UpdatedBy")) {
                dto.setUpdatedBy(state.getUpdatedBy());
            }
            if (returnedFieldsContains("UpdatedAt")) {
                dto.setUpdatedAt(state.getUpdatedAt());
            }
            return dto;
        }

    }
}

