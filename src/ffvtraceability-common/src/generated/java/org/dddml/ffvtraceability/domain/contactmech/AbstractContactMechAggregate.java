// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.contactmech;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;

public abstract class AbstractContactMechAggregate extends AbstractAggregate implements ContactMechAggregate {
    private ContactMechState.MutableContactMechState state;

    private List<Event> changes = new ArrayList<Event>();

    public AbstractContactMechAggregate(ContactMechState state) {
        this.state = (ContactMechState.MutableContactMechState)state;
    }

    public ContactMechState getState() {
        return this.state;
    }

    public List<Event> getChanges() {
        return this.changes;
    }

    public void create(ContactMechCommand.CreateContactMech c) {
        if (c.getVersion() == null) { c.setVersion(ContactMechState.VERSION_NULL); }
        ContactMechEvent e = map(c);
        apply(e);
    }

    public void mergePatch(ContactMechCommand.MergePatchContactMech c) {
        ContactMechEvent e = map(c);
        apply(e);
    }

    public void throwOnInvalidStateTransition(Command c) {
        ContactMechCommand.throwOnInvalidStateTransition(this.state, c);
    }

    protected void apply(Event e) {
        onApplying(e);
        state.mutate(e);
        changes.add(e);
    }

    @Override
    protected void onApplying(Event e) {
        if (state.getVersion() == null) {
            state.setTenantId(TenantContext.getTenantId());
        }
        if (e instanceof ContactMechEvent) {
            ContactMechEvent ee = (ContactMechEvent) e;
            ee.setTenantId(state.getTenantId());
        }
        super.onApplying(e);
    }

    protected ContactMechEvent map(ContactMechCommand.CreateContactMech c) {
        if(ContactMechTypeId.MISC_CONTACT_MECH.equals(c.getContactMechTypeId())) {
            return mapToMiscContactMechEvent(c);
        }
        if(ContactMechTypeId.POSTAL_ADDRESS.equals(c.getContactMechTypeId())) {
            return mapToPostalAddressEvent(c);
        }
        if(ContactMechTypeId.TELECOM_NUMBER.equals(c.getContactMechTypeId())) {
            return mapToTelecomNumberEvent(c);
        }
        throw new IllegalArgumentException();
    }

    protected MiscContactMechEvent mapToMiscContactMechEvent(ContactMechCommand.CreateContactMech c) {
        ContactMechEventId stateEventId = new ContactMechEventId(c.getContactMechId(), c.getVersion());
        MiscContactMechEvent.MiscContactMechStateCreated e = newMiscContactMechStateCreated(stateEventId);
        e.setContactMechTypeId(c.getContactMechTypeId());
        e.setInfoString(c.getInfoString());
        e.setAskForName(c.getAskForName());
        e.setAddress1(c.getAddress1());
        e.setAddress2(c.getAddress2());
        e.setDirections(c.getDirections());
        e.setCity(c.getCity());
        e.setPostalCode(c.getPostalCode());
        e.setPostalCodeExt(c.getPostalCodeExt());
        e.setCountryGeoId(c.getCountryGeoId());
        e.setStateProvinceGeoId(c.getStateProvinceGeoId());
        e.setPostalCodeGeoId(c.getPostalCodeGeoId());
        e.setGeoPointId(c.getGeoPointId());
        e.setEmail(c.getEmail());
        e.setAskForRole(c.getAskForRole());
        e.setTelecomCountryCode(c.getTelecomCountryCode());
        e.setTelecomAreaCode(c.getTelecomAreaCode());
        e.setTelecomContactNumber(c.getTelecomContactNumber());
        e.setPhysicalLocationAddress(c.getPhysicalLocationAddress());
        ((AbstractContactMechEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected PostalAddressEvent mapToPostalAddressEvent(ContactMechCommand.CreateContactMech c) {
        ContactMechEventId stateEventId = new ContactMechEventId(c.getContactMechId(), c.getVersion());
        PostalAddressEvent.PostalAddressStateCreated e = newPostalAddressStateCreated(stateEventId);
        e.setContactMechTypeId(c.getContactMechTypeId());
        e.setInfoString(c.getInfoString());
        e.setAskForName(c.getAskForName());
        e.setAddress1(c.getAddress1());
        e.setAddress2(c.getAddress2());
        e.setDirections(c.getDirections());
        e.setCity(c.getCity());
        e.setPostalCode(c.getPostalCode());
        e.setPostalCodeExt(c.getPostalCodeExt());
        e.setCountryGeoId(c.getCountryGeoId());
        e.setStateProvinceGeoId(c.getStateProvinceGeoId());
        e.setPostalCodeGeoId(c.getPostalCodeGeoId());
        e.setGeoPointId(c.getGeoPointId());
        e.setToName(c.getToName());
        e.setAttnName(c.getAttnName());
        e.setPrefectureGeoId(c.getPrefectureGeoId());
        e.setCountyGeoId(c.getCountyGeoId());
        e.setTownGeoId(c.getTownGeoId());
        e.setAssocTelecomContactMechId(c.getAssocTelecomContactMechId());
        ((AbstractContactMechEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected TelecomNumberEvent mapToTelecomNumberEvent(ContactMechCommand.CreateContactMech c) {
        ContactMechEventId stateEventId = new ContactMechEventId(c.getContactMechId(), c.getVersion());
        TelecomNumberEvent.TelecomNumberStateCreated e = newTelecomNumberStateCreated(stateEventId);
        e.setContactMechTypeId(c.getContactMechTypeId());
        e.setInfoString(c.getInfoString());
        e.setAskForName(c.getAskForName());
        e.setAddress1(c.getAddress1());
        e.setAddress2(c.getAddress2());
        e.setDirections(c.getDirections());
        e.setCity(c.getCity());
        e.setPostalCode(c.getPostalCode());
        e.setPostalCodeExt(c.getPostalCodeExt());
        e.setCountryGeoId(c.getCountryGeoId());
        e.setStateProvinceGeoId(c.getStateProvinceGeoId());
        e.setPostalCodeGeoId(c.getPostalCodeGeoId());
        e.setGeoPointId(c.getGeoPointId());
        e.setCountryCode(c.getCountryCode());
        e.setAreaCode(c.getAreaCode());
        e.setContactNumber(c.getContactNumber());
        ((AbstractContactMechEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected ContactMechEvent map(ContactMechCommand.MergePatchContactMech c) {
        if(c.getContactMechTypeId().equals(ContactMechTypeId.MISC_CONTACT_MECH)) {
            return mapToMiscContactMechEvent(c);
        }
        if(c.getContactMechTypeId().equals(ContactMechTypeId.POSTAL_ADDRESS)) {
            return mapToPostalAddressEvent(c);
        }
        if(c.getContactMechTypeId().equals(ContactMechTypeId.TELECOM_NUMBER)) {
            return mapToTelecomNumberEvent(c);
        }
        throw new IllegalArgumentException();
    }

    protected MiscContactMechEvent mapToMiscContactMechEvent(ContactMechCommand.MergePatchContactMech c) {
        ContactMechEventId stateEventId = new ContactMechEventId(c.getContactMechId(), c.getVersion());
        MiscContactMechEvent.MiscContactMechStateMergePatched e = newMiscContactMechStateMergePatched(stateEventId);
        e.setContactMechTypeId(c.getContactMechTypeId());
        e.setInfoString(c.getInfoString());
        e.setAskForName(c.getAskForName());
        e.setAddress1(c.getAddress1());
        e.setAddress2(c.getAddress2());
        e.setDirections(c.getDirections());
        e.setCity(c.getCity());
        e.setPostalCode(c.getPostalCode());
        e.setPostalCodeExt(c.getPostalCodeExt());
        e.setCountryGeoId(c.getCountryGeoId());
        e.setStateProvinceGeoId(c.getStateProvinceGeoId());
        e.setPostalCodeGeoId(c.getPostalCodeGeoId());
        e.setGeoPointId(c.getGeoPointId());
        e.setEmail(c.getEmail());
        e.setAskForRole(c.getAskForRole());
        e.setTelecomCountryCode(c.getTelecomCountryCode());
        e.setTelecomAreaCode(c.getTelecomAreaCode());
        e.setTelecomContactNumber(c.getTelecomContactNumber());
        e.setPhysicalLocationAddress(c.getPhysicalLocationAddress());
        e.setIsPropertyEmailRemoved(c.getIsPropertyEmailRemoved());
        e.setIsPropertyAskForRoleRemoved(c.getIsPropertyAskForRoleRemoved());
        e.setIsPropertyTelecomCountryCodeRemoved(c.getIsPropertyTelecomCountryCodeRemoved());
        e.setIsPropertyTelecomAreaCodeRemoved(c.getIsPropertyTelecomAreaCodeRemoved());
        e.setIsPropertyTelecomContactNumberRemoved(c.getIsPropertyTelecomContactNumberRemoved());
        e.setIsPropertyPhysicalLocationAddressRemoved(c.getIsPropertyPhysicalLocationAddressRemoved());
        e.setIsPropertyContactMechTypeIdRemoved(c.getIsPropertyContactMechTypeIdRemoved());
        e.setIsPropertyInfoStringRemoved(c.getIsPropertyInfoStringRemoved());
        e.setIsPropertyAskForNameRemoved(c.getIsPropertyAskForNameRemoved());
        e.setIsPropertyAddress1Removed(c.getIsPropertyAddress1Removed());
        e.setIsPropertyAddress2Removed(c.getIsPropertyAddress2Removed());
        e.setIsPropertyDirectionsRemoved(c.getIsPropertyDirectionsRemoved());
        e.setIsPropertyCityRemoved(c.getIsPropertyCityRemoved());
        e.setIsPropertyPostalCodeRemoved(c.getIsPropertyPostalCodeRemoved());
        e.setIsPropertyPostalCodeExtRemoved(c.getIsPropertyPostalCodeExtRemoved());
        e.setIsPropertyCountryGeoIdRemoved(c.getIsPropertyCountryGeoIdRemoved());
        e.setIsPropertyStateProvinceGeoIdRemoved(c.getIsPropertyStateProvinceGeoIdRemoved());
        e.setIsPropertyPostalCodeGeoIdRemoved(c.getIsPropertyPostalCodeGeoIdRemoved());
        e.setIsPropertyGeoPointIdRemoved(c.getIsPropertyGeoPointIdRemoved());
        ((AbstractContactMechEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected PostalAddressEvent mapToPostalAddressEvent(ContactMechCommand.MergePatchContactMech c) {
        ContactMechEventId stateEventId = new ContactMechEventId(c.getContactMechId(), c.getVersion());
        PostalAddressEvent.PostalAddressStateMergePatched e = newPostalAddressStateMergePatched(stateEventId);
        e.setContactMechTypeId(c.getContactMechTypeId());
        e.setInfoString(c.getInfoString());
        e.setAskForName(c.getAskForName());
        e.setAddress1(c.getAddress1());
        e.setAddress2(c.getAddress2());
        e.setDirections(c.getDirections());
        e.setCity(c.getCity());
        e.setPostalCode(c.getPostalCode());
        e.setPostalCodeExt(c.getPostalCodeExt());
        e.setCountryGeoId(c.getCountryGeoId());
        e.setStateProvinceGeoId(c.getStateProvinceGeoId());
        e.setPostalCodeGeoId(c.getPostalCodeGeoId());
        e.setGeoPointId(c.getGeoPointId());
        e.setToName(c.getToName());
        e.setAttnName(c.getAttnName());
        e.setPrefectureGeoId(c.getPrefectureGeoId());
        e.setCountyGeoId(c.getCountyGeoId());
        e.setTownGeoId(c.getTownGeoId());
        e.setAssocTelecomContactMechId(c.getAssocTelecomContactMechId());
        e.setIsPropertyToNameRemoved(c.getIsPropertyToNameRemoved());
        e.setIsPropertyAttnNameRemoved(c.getIsPropertyAttnNameRemoved());
        e.setIsPropertyPrefectureGeoIdRemoved(c.getIsPropertyPrefectureGeoIdRemoved());
        e.setIsPropertyCountyGeoIdRemoved(c.getIsPropertyCountyGeoIdRemoved());
        e.setIsPropertyTownGeoIdRemoved(c.getIsPropertyTownGeoIdRemoved());
        e.setIsPropertyAssocTelecomContactMechIdRemoved(c.getIsPropertyAssocTelecomContactMechIdRemoved());
        e.setIsPropertyContactMechTypeIdRemoved(c.getIsPropertyContactMechTypeIdRemoved());
        e.setIsPropertyInfoStringRemoved(c.getIsPropertyInfoStringRemoved());
        e.setIsPropertyAskForNameRemoved(c.getIsPropertyAskForNameRemoved());
        e.setIsPropertyAddress1Removed(c.getIsPropertyAddress1Removed());
        e.setIsPropertyAddress2Removed(c.getIsPropertyAddress2Removed());
        e.setIsPropertyDirectionsRemoved(c.getIsPropertyDirectionsRemoved());
        e.setIsPropertyCityRemoved(c.getIsPropertyCityRemoved());
        e.setIsPropertyPostalCodeRemoved(c.getIsPropertyPostalCodeRemoved());
        e.setIsPropertyPostalCodeExtRemoved(c.getIsPropertyPostalCodeExtRemoved());
        e.setIsPropertyCountryGeoIdRemoved(c.getIsPropertyCountryGeoIdRemoved());
        e.setIsPropertyStateProvinceGeoIdRemoved(c.getIsPropertyStateProvinceGeoIdRemoved());
        e.setIsPropertyPostalCodeGeoIdRemoved(c.getIsPropertyPostalCodeGeoIdRemoved());
        e.setIsPropertyGeoPointIdRemoved(c.getIsPropertyGeoPointIdRemoved());
        ((AbstractContactMechEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected TelecomNumberEvent mapToTelecomNumberEvent(ContactMechCommand.MergePatchContactMech c) {
        ContactMechEventId stateEventId = new ContactMechEventId(c.getContactMechId(), c.getVersion());
        TelecomNumberEvent.TelecomNumberStateMergePatched e = newTelecomNumberStateMergePatched(stateEventId);
        e.setContactMechTypeId(c.getContactMechTypeId());
        e.setInfoString(c.getInfoString());
        e.setAskForName(c.getAskForName());
        e.setAddress1(c.getAddress1());
        e.setAddress2(c.getAddress2());
        e.setDirections(c.getDirections());
        e.setCity(c.getCity());
        e.setPostalCode(c.getPostalCode());
        e.setPostalCodeExt(c.getPostalCodeExt());
        e.setCountryGeoId(c.getCountryGeoId());
        e.setStateProvinceGeoId(c.getStateProvinceGeoId());
        e.setPostalCodeGeoId(c.getPostalCodeGeoId());
        e.setGeoPointId(c.getGeoPointId());
        e.setCountryCode(c.getCountryCode());
        e.setAreaCode(c.getAreaCode());
        e.setContactNumber(c.getContactNumber());
        e.setIsPropertyCountryCodeRemoved(c.getIsPropertyCountryCodeRemoved());
        e.setIsPropertyAreaCodeRemoved(c.getIsPropertyAreaCodeRemoved());
        e.setIsPropertyContactNumberRemoved(c.getIsPropertyContactNumberRemoved());
        e.setIsPropertyContactMechTypeIdRemoved(c.getIsPropertyContactMechTypeIdRemoved());
        e.setIsPropertyInfoStringRemoved(c.getIsPropertyInfoStringRemoved());
        e.setIsPropertyAskForNameRemoved(c.getIsPropertyAskForNameRemoved());
        e.setIsPropertyAddress1Removed(c.getIsPropertyAddress1Removed());
        e.setIsPropertyAddress2Removed(c.getIsPropertyAddress2Removed());
        e.setIsPropertyDirectionsRemoved(c.getIsPropertyDirectionsRemoved());
        e.setIsPropertyCityRemoved(c.getIsPropertyCityRemoved());
        e.setIsPropertyPostalCodeRemoved(c.getIsPropertyPostalCodeRemoved());
        e.setIsPropertyPostalCodeExtRemoved(c.getIsPropertyPostalCodeExtRemoved());
        e.setIsPropertyCountryGeoIdRemoved(c.getIsPropertyCountryGeoIdRemoved());
        e.setIsPropertyStateProvinceGeoIdRemoved(c.getIsPropertyStateProvinceGeoIdRemoved());
        e.setIsPropertyPostalCodeGeoIdRemoved(c.getIsPropertyPostalCodeGeoIdRemoved());
        e.setIsPropertyGeoPointIdRemoved(c.getIsPropertyGeoPointIdRemoved());
        ((AbstractContactMechEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }


    ////////////////////////
    protected MiscContactMechEvent.MiscContactMechStateCreated newMiscContactMechStateCreated(ContactMechEventId stateEventId) {
        return new AbstractMiscContactMechEvent.SimpleMiscContactMechStateCreated(stateEventId);
    }

    protected MiscContactMechEvent.MiscContactMechStateMergePatched newMiscContactMechStateMergePatched(ContactMechEventId stateEventId) {
        return new AbstractMiscContactMechEvent.SimpleMiscContactMechStateMergePatched(stateEventId);
    }

    protected PostalAddressEvent.PostalAddressStateCreated newPostalAddressStateCreated(ContactMechEventId stateEventId) {
        return new AbstractPostalAddressEvent.SimplePostalAddressStateCreated(stateEventId);
    }

    protected PostalAddressEvent.PostalAddressStateMergePatched newPostalAddressStateMergePatched(ContactMechEventId stateEventId) {
        return new AbstractPostalAddressEvent.SimplePostalAddressStateMergePatched(stateEventId);
    }

    protected TelecomNumberEvent.TelecomNumberStateCreated newTelecomNumberStateCreated(ContactMechEventId stateEventId) {
        return new AbstractTelecomNumberEvent.SimpleTelecomNumberStateCreated(stateEventId);
    }

    protected TelecomNumberEvent.TelecomNumberStateMergePatched newTelecomNumberStateMergePatched(ContactMechEventId stateEventId) {
        return new AbstractTelecomNumberEvent.SimpleTelecomNumberStateMergePatched(stateEventId);
    }


    public static class SimpleContactMechAggregate extends AbstractContactMechAggregate {
        public SimpleContactMechAggregate(ContactMechState state) {
            super(state);
        }

    }

}

