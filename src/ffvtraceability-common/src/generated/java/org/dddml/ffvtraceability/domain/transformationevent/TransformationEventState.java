// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.transformationevent;

import java.util.*;
import java.math.*;
import org.dddml.ffvtraceability.domain.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.specialization.Event;

public interface TransformationEventState extends CriticalTrackingEvent
{
    Long VERSION_ZERO = 0L;

    Long VERSION_NULL = VERSION_ZERO - 1;

    String getEventId();

    KdeTraceabilityLotCode getFoodUsedTlc();

    KdeProductDescription getFoodUsedProductDescription();

    KdeQuantityAndUom getFoodUsedQuantityAndUom();

    KdeTraceabilityLotCode getFoodProducedNewTlc();

    KdeProductDescription getFoodProducedProductDescription();

    KdeQuantityAndUom getFoodProducedQuantityAndUom();

    KdeLocationDescription getTransformationLocation();

    String getDateTransformed();

    Long getVersion();

    String getCreatedBy();

    OffsetDateTime getCreatedAt();

    String getUpdatedBy();

    OffsetDateTime getUpdatedAt();

    String getTenantId();

    Set<KdeReferenceDocument> getReferenceDocuments();

    String getCommandId();

    interface MutableTransformationEventState extends TransformationEventState, CriticalTrackingEvent.MutableCriticalTrackingEvent {
        void setEventId(String eventId);

        void setFoodUsedTlc(KdeTraceabilityLotCode foodUsedTlc);

        void setFoodUsedProductDescription(KdeProductDescription foodUsedProductDescription);

        void setFoodUsedQuantityAndUom(KdeQuantityAndUom foodUsedQuantityAndUom);

        void setFoodProducedNewTlc(KdeTraceabilityLotCode foodProducedNewTlc);

        void setFoodProducedProductDescription(KdeProductDescription foodProducedProductDescription);

        void setFoodProducedQuantityAndUom(KdeQuantityAndUom foodProducedQuantityAndUom);

        void setTransformationLocation(KdeLocationDescription transformationLocation);

        void setDateTransformed(String dateTransformed);

        void setVersion(Long version);

        void setCreatedBy(String createdBy);

        void setCreatedAt(OffsetDateTime createdAt);

        void setUpdatedBy(String updatedBy);

        void setUpdatedAt(OffsetDateTime updatedAt);

        void setTenantId(String tenantId);

        void setReferenceDocuments(Set<KdeReferenceDocument> referenceDocuments);

        void setCommandId(String commandId);

    }

    interface SqlTransformationEventState extends MutableTransformationEventState {

        boolean isStateUnsaved();

        boolean getForReapplying();
    }
}

