// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.workeffortassoc;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractWorkEffortAssocEvent extends AbstractEvent implements WorkEffortAssocEvent.SqlWorkEffortAssocEvent {
    private WorkEffortAssocEventId workEffortAssocEventId = new WorkEffortAssocEventId();

    public WorkEffortAssocEventId getWorkEffortAssocEventId() {
        return this.workEffortAssocEventId;
    }

    public void setWorkEffortAssocEventId(WorkEffortAssocEventId eventId) {
        this.workEffortAssocEventId = eventId;
    }
    
    public WorkEffortAssocId getWorkEffortAssocId() {
        return getWorkEffortAssocEventId().getWorkEffortAssocId();
    }

    public void setWorkEffortAssocId(WorkEffortAssocId workEffortAssocId) {
        getWorkEffortAssocEventId().setWorkEffortAssocId(workEffortAssocId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getWorkEffortAssocEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getWorkEffortAssocEventId().setVersion(version);
    }

    private String tenantId;

    public String getTenantId() {
        return this.tenantId;
    }

    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractWorkEffortAssocEvent() {
    }

    protected AbstractWorkEffortAssocEvent(WorkEffortAssocEventId eventId) {
        this.workEffortAssocEventId = eventId;
    }


    public abstract String getEventType();

    public static class WorkEffortAssocLobEvent extends AbstractWorkEffortAssocEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "WorkEffortAssocLobEvent";
        }

    }


    public static abstract class AbstractWorkEffortAssocStateEvent extends AbstractWorkEffortAssocEvent implements WorkEffortAssocEvent.WorkEffortAssocStateEvent {
        private Long sequenceNum;

        public Long getSequenceNum()
        {
            return this.sequenceNum;
        }

        public void setSequenceNum(Long sequenceNum)
        {
            this.sequenceNum = sequenceNum;
        }

        private OffsetDateTime thruDate;

        public OffsetDateTime getThruDate()
        {
            return this.thruDate;
        }

        public void setThruDate(OffsetDateTime thruDate)
        {
            this.thruDate = thruDate;
        }

        protected AbstractWorkEffortAssocStateEvent(WorkEffortAssocEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractWorkEffortAssocStateCreated extends AbstractWorkEffortAssocStateEvent implements WorkEffortAssocEvent.WorkEffortAssocStateCreated
    {
        public AbstractWorkEffortAssocStateCreated() {
            this(new WorkEffortAssocEventId());
        }

        public AbstractWorkEffortAssocStateCreated(WorkEffortAssocEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractWorkEffortAssocStateMergePatched extends AbstractWorkEffortAssocStateEvent implements WorkEffortAssocEvent.WorkEffortAssocStateMergePatched
    {
        public AbstractWorkEffortAssocStateMergePatched() {
            this(new WorkEffortAssocEventId());
        }

        public AbstractWorkEffortAssocStateMergePatched(WorkEffortAssocEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertySequenceNumRemoved;

        public Boolean getIsPropertySequenceNumRemoved() {
            return this.isPropertySequenceNumRemoved;
        }

        public void setIsPropertySequenceNumRemoved(Boolean removed) {
            this.isPropertySequenceNumRemoved = removed;
        }

        private Boolean isPropertyThruDateRemoved;

        public Boolean getIsPropertyThruDateRemoved() {
            return this.isPropertyThruDateRemoved;
        }

        public void setIsPropertyThruDateRemoved(Boolean removed) {
            this.isPropertyThruDateRemoved = removed;
        }


    }



    public static class SimpleWorkEffortAssocStateCreated extends AbstractWorkEffortAssocStateCreated
    {
        public SimpleWorkEffortAssocStateCreated() {
        }

        public SimpleWorkEffortAssocStateCreated(WorkEffortAssocEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleWorkEffortAssocStateMergePatched extends AbstractWorkEffortAssocStateMergePatched
    {
        public SimpleWorkEffortAssocStateMergePatched() {
        }

        public SimpleWorkEffortAssocStateMergePatched(WorkEffortAssocEventId eventId) {
            super(eventId);
        }
    }

}

