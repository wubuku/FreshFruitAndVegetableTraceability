// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.productcategorytype;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface ProductCategoryTypeCommand extends Command {

    String getProductCategoryTypeId();

    void setProductCategoryTypeId(String productCategoryTypeId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(ProductCategoryTypeState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((ProductCategoryTypeCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (state.getDeleted() != null && state.getDeleted()) {
            throw DomainError.named("zombie", "Can't do anything to deleted aggregate.");
        }
        if (isCreationCommand((ProductCategoryTypeCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(ProductCategoryTypeCommand c) {
        if ((c instanceof ProductCategoryTypeCommand.CreateProductCategoryType) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(ProductCategoryTypeState.VERSION_NULL)))
            return true;
        if ((c instanceof ProductCategoryTypeCommand.MergePatchProductCategoryType))
            return false;
        if ((c instanceof ProductCategoryTypeCommand.DeleteProductCategoryType))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(ProductCategoryTypeState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchProductCategoryType extends ProductCategoryTypeCommand
    {

        String getParentTypeId();

        void setParentTypeId(String parentTypeId);

        String getHasTable();

        void setHasTable(String hasTable);

        String getDescription();

        void setDescription(String description);

    }

    interface CreateProductCategoryType extends CreateOrMergePatchProductCategoryType
    {
    }

    interface MergePatchProductCategoryType extends CreateOrMergePatchProductCategoryType
    {
        Boolean getIsPropertyParentTypeIdRemoved();

        void setIsPropertyParentTypeIdRemoved(Boolean removed);

        Boolean getIsPropertyHasTableRemoved();

        void setIsPropertyHasTableRemoved(Boolean removed);

        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);


    }

    interface DeleteProductCategoryType extends ProductCategoryTypeCommand
    {
    }

}

