// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.geopoint;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.Command;
import org.dddml.ffvtraceability.specialization.DomainError;

public interface GeoPointCommand extends Command {

    String getGeoPointId();

    void setGeoPointId(String geoPointId);

    Long getVersion();

    void setVersion(Long version);

    static void throwOnInvalidStateTransition(GeoPointState state, Command c) {
        if (state.getVersion() == null) {
            if (isCreationCommand((GeoPointCommand)c)) {
                return;
            }
            throw DomainError.named("premature", "Can't do anything to unexistent aggregate");
        }
        if (isCreationCommand((GeoPointCommand)c))
            throw DomainError.named("rebirth", "Can't create aggregate that already exists");
    }

    static boolean isCreationCommand(GeoPointCommand c) {
        if ((c instanceof GeoPointCommand.CreateGeoPoint) 
            && (COMMAND_TYPE_CREATE.equals(c.getCommandType()) || c.getVersion().equals(GeoPointState.VERSION_NULL)))
            return true;
        if ((c instanceof GeoPointCommand.MergePatchGeoPoint))
            return false;
        if (c.getCommandType() != null) {
            String commandType = c.getCommandType();
        }

        if (c.getVersion().equals(GeoPointState.VERSION_NULL))
            return true;
        return false;
    }

    interface CreateOrMergePatchGeoPoint extends GeoPointCommand
    {

        String getGeoPointTypeEnumId();

        void setGeoPointTypeEnumId(String geoPointTypeEnumId);

        String getDescription();

        void setDescription(String description);

        java.math.BigDecimal getLatitude();

        void setLatitude(java.math.BigDecimal latitude);

        java.math.BigDecimal getLongitude();

        void setLongitude(java.math.BigDecimal longitude);

        java.math.BigDecimal getElevation();

        void setElevation(java.math.BigDecimal elevation);

        String getElevationUomId();

        void setElevationUomId(String elevationUomId);

        String getInformation();

        void setInformation(String information);

    }

    interface CreateGeoPoint extends CreateOrMergePatchGeoPoint
    {
    }

    interface MergePatchGeoPoint extends CreateOrMergePatchGeoPoint
    {
        Boolean getIsPropertyGeoPointTypeEnumIdRemoved();

        void setIsPropertyGeoPointTypeEnumIdRemoved(Boolean removed);

        Boolean getIsPropertyDescriptionRemoved();

        void setIsPropertyDescriptionRemoved(Boolean removed);

        Boolean getIsPropertyLatitudeRemoved();

        void setIsPropertyLatitudeRemoved(Boolean removed);

        Boolean getIsPropertyLongitudeRemoved();

        void setIsPropertyLongitudeRemoved(Boolean removed);

        Boolean getIsPropertyElevationRemoved();

        void setIsPropertyElevationRemoved(Boolean removed);

        Boolean getIsPropertyElevationUomIdRemoved();

        void setIsPropertyElevationUomIdRemoved(Boolean removed);

        Boolean getIsPropertyInformationRemoved();

        void setIsPropertyInformationRemoved(Boolean removed);


    }

    interface DeleteGeoPoint extends GeoPointCommand
    {
    }

}

