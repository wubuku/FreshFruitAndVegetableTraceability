// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.attributesetinstance;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;

public abstract class AbstractAttributeSetInstanceAggregate extends AbstractAggregate implements AttributeSetInstanceAggregate {
    private AttributeSetInstanceState.MutableAttributeSetInstanceState state;

    private List<Event> changes = new ArrayList<Event>();

    public AbstractAttributeSetInstanceAggregate(AttributeSetInstanceState state) {
        this.state = (AttributeSetInstanceState.MutableAttributeSetInstanceState)state;
    }

    public AttributeSetInstanceState getState() {
        return this.state;
    }

    public List<Event> getChanges() {
        return this.changes;
    }

    public void create(AttributeSetInstanceCommand.CreateAttributeSetInstance c) {
        if (c.getVersion() == null) { c.setVersion(AttributeSetInstanceState.VERSION_NULL); }
        AttributeSetInstanceEvent e = map(c);
        apply(e);
    }

    public void throwOnInvalidStateTransition(Command c) {
        AttributeSetInstanceCommand.throwOnInvalidStateTransition(this.state, c);
    }

    protected void apply(Event e) {
        onApplying(e);
        state.mutate(e);
        changes.add(e);
    }

    protected AttributeSetInstanceEvent map(AttributeSetInstanceCommand.CreateAttributeSetInstance c) {
        AttributeSetInstanceEventId stateEventId = new AttributeSetInstanceEventId(c.getAttributeSetInstanceId(), c.getVersion());
        AttributeSetInstanceEvent.AttributeSetInstanceStateCreated e = newAttributeSetInstanceStateCreated(stateEventId);
        e.setProperties(c.getProperties());
        e.setActive(c.getActive());
        ((AbstractAttributeSetInstanceEvent)e).setCommandId(c.getCommandId());
        e.setCreatedBy(c.getRequesterId());
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }


    ////////////////////////

    protected AttributeSetInstanceEvent.AttributeSetInstanceStateCreated newAttributeSetInstanceStateCreated(Long version, String commandId, String requesterId) {
        AttributeSetInstanceEventId stateEventId = new AttributeSetInstanceEventId(this.state.getAttributeSetInstanceId(), version);
        AttributeSetInstanceEvent.AttributeSetInstanceStateCreated e = newAttributeSetInstanceStateCreated(stateEventId);
        ((AbstractAttributeSetInstanceEvent)e).setCommandId(commandId);
        e.setCreatedBy(requesterId);
        e.setCreatedAt((OffsetDateTime)ApplicationContext.current.getTimestampService().now(OffsetDateTime.class));
        return e;
    }

    protected AttributeSetInstanceEvent.AttributeSetInstanceStateCreated newAttributeSetInstanceStateCreated(AttributeSetInstanceEventId stateEventId) {
        return new AbstractAttributeSetInstanceEvent.SimpleAttributeSetInstanceStateCreated(stateEventId);
    }


    public static class SimpleAttributeSetInstanceAggregate extends AbstractAttributeSetInstanceAggregate {
        public SimpleAttributeSetInstanceAggregate(AttributeSetInstanceState state) {
            super(state);
        }

    }

}

