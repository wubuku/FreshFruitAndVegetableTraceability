// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.lot;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.Event;

public interface LotEvent extends Event {

    interface SqlLotEvent extends LotEvent {
        LotEventId getLotEventId();

        boolean getEventReadOnly();

        void setEventReadOnly(boolean readOnly);
    }

    String getLotId();

    //void setLotId(String lotId);

    Long getVersion();
    
    //void setVersion(Long version);

    String getCreatedBy();

    void setCreatedBy(String createdBy);

    OffsetDateTime getCreatedAt();

    void setCreatedAt(OffsetDateTime createdAt);

    String getCommandId();

    void setCommandId(String commandId);

    interface LotStateEvent extends LotEvent {
        java.math.BigDecimal getQuantity();

        void setQuantity(java.math.BigDecimal quantity);

        OffsetDateTime getExpirationDate();

        void setExpirationDate(OffsetDateTime expirationDate);

        String getActive();

        void setActive(String active);

    }

    interface LotStateCreated extends LotStateEvent
    {
        Iterable<LotIdentificationEvent.LotIdentificationStateCreated> getLotIdentificationEvents();
        
        void addLotIdentificationEvent(LotIdentificationEvent.LotIdentificationStateCreated e);

        LotIdentificationEvent.LotIdentificationStateCreated newLotIdentificationStateCreated(String lotIdentificationTypeId);

    
    }


    interface LotStateMergePatched extends LotStateEvent
    {
        Boolean getIsPropertyQuantityRemoved();

        void setIsPropertyQuantityRemoved(Boolean removed);

        Boolean getIsPropertyExpirationDateRemoved();

        void setIsPropertyExpirationDateRemoved(Boolean removed);

        Boolean getIsPropertyActiveRemoved();

        void setIsPropertyActiveRemoved(Boolean removed);


        Iterable<LotIdentificationEvent> getLotIdentificationEvents();
        
        void addLotIdentificationEvent(LotIdentificationEvent e);

        LotIdentificationEvent.LotIdentificationStateCreated newLotIdentificationStateCreated(String lotIdentificationTypeId);

        LotIdentificationEvent.LotIdentificationStateMergePatched newLotIdentificationStateMergePatched(String lotIdentificationTypeId);


    }


}

