// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.facilityidentificationtype;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractFacilityIdentificationTypeEvent extends AbstractEvent implements FacilityIdentificationTypeEvent.SqlFacilityIdentificationTypeEvent {
    private FacilityIdentificationTypeEventId facilityIdentificationTypeEventId = new FacilityIdentificationTypeEventId();

    public FacilityIdentificationTypeEventId getFacilityIdentificationTypeEventId() {
        return this.facilityIdentificationTypeEventId;
    }

    public void setFacilityIdentificationTypeEventId(FacilityIdentificationTypeEventId eventId) {
        this.facilityIdentificationTypeEventId = eventId;
    }
    
    public String getFacilityIdentificationTypeId() {
        return getFacilityIdentificationTypeEventId().getFacilityIdentificationTypeId();
    }

    public void setFacilityIdentificationTypeId(String facilityIdentificationTypeId) {
        getFacilityIdentificationTypeEventId().setFacilityIdentificationTypeId(facilityIdentificationTypeId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getFacilityIdentificationTypeEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getFacilityIdentificationTypeEventId().setVersion(version);
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractFacilityIdentificationTypeEvent() {
    }

    protected AbstractFacilityIdentificationTypeEvent(FacilityIdentificationTypeEventId eventId) {
        this.facilityIdentificationTypeEventId = eventId;
    }


    public abstract String getEventType();

    public static class FacilityIdentificationTypeLobEvent extends AbstractFacilityIdentificationTypeEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "FacilityIdentificationTypeLobEvent";
        }

    }


    public static abstract class AbstractFacilityIdentificationTypeStateEvent extends AbstractFacilityIdentificationTypeEvent implements FacilityIdentificationTypeEvent.FacilityIdentificationTypeStateEvent {
        private String description;

        public String getDescription()
        {
            return this.description;
        }

        public void setDescription(String description)
        {
            this.description = description;
        }

        protected AbstractFacilityIdentificationTypeStateEvent(FacilityIdentificationTypeEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractFacilityIdentificationTypeStateCreated extends AbstractFacilityIdentificationTypeStateEvent implements FacilityIdentificationTypeEvent.FacilityIdentificationTypeStateCreated
    {
        public AbstractFacilityIdentificationTypeStateCreated() {
            this(new FacilityIdentificationTypeEventId());
        }

        public AbstractFacilityIdentificationTypeStateCreated(FacilityIdentificationTypeEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractFacilityIdentificationTypeStateMergePatched extends AbstractFacilityIdentificationTypeStateEvent implements FacilityIdentificationTypeEvent.FacilityIdentificationTypeStateMergePatched
    {
        public AbstractFacilityIdentificationTypeStateMergePatched() {
            this(new FacilityIdentificationTypeEventId());
        }

        public AbstractFacilityIdentificationTypeStateMergePatched(FacilityIdentificationTypeEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyDescriptionRemoved;

        public Boolean getIsPropertyDescriptionRemoved() {
            return this.isPropertyDescriptionRemoved;
        }

        public void setIsPropertyDescriptionRemoved(Boolean removed) {
            this.isPropertyDescriptionRemoved = removed;
        }


    }


    public static abstract class AbstractFacilityIdentificationTypeStateDeleted extends AbstractFacilityIdentificationTypeStateEvent implements FacilityIdentificationTypeEvent.FacilityIdentificationTypeStateDeleted
    {
        public AbstractFacilityIdentificationTypeStateDeleted() {
            this(new FacilityIdentificationTypeEventId());
        }

        public AbstractFacilityIdentificationTypeStateDeleted(FacilityIdentificationTypeEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.DELETED;
        }

    }

    public static class SimpleFacilityIdentificationTypeStateCreated extends AbstractFacilityIdentificationTypeStateCreated
    {
        public SimpleFacilityIdentificationTypeStateCreated() {
        }

        public SimpleFacilityIdentificationTypeStateCreated(FacilityIdentificationTypeEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleFacilityIdentificationTypeStateMergePatched extends AbstractFacilityIdentificationTypeStateMergePatched
    {
        public SimpleFacilityIdentificationTypeStateMergePatched() {
        }

        public SimpleFacilityIdentificationTypeStateMergePatched(FacilityIdentificationTypeEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleFacilityIdentificationTypeStateDeleted extends AbstractFacilityIdentificationTypeStateDeleted
    {
        public SimpleFacilityIdentificationTypeStateDeleted() {
        }

        public SimpleFacilityIdentificationTypeStateDeleted(FacilityIdentificationTypeEventId eventId) {
            super(eventId);
        }
    }

}

