// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.bffnotification;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import org.dddml.ffvtraceability.domain.AbstractEvent;

public abstract class AbstractBffNotificationEvent extends AbstractEvent implements BffNotificationEvent.SqlBffNotificationEvent {
    private BffNotificationEventId bffNotificationEventId = new BffNotificationEventId();

    public BffNotificationEventId getBffNotificationEventId() {
        return this.bffNotificationEventId;
    }

    public void setBffNotificationEventId(BffNotificationEventId eventId) {
        this.bffNotificationEventId = eventId;
    }
    
    public String getBffNotificationId() {
        return getBffNotificationEventId().getBffNotificationId();
    }

    public void setBffNotificationId(String bffNotificationId) {
        getBffNotificationEventId().setBffNotificationId(bffNotificationId);
    }

    private boolean eventReadOnly;

    public boolean getEventReadOnly() { return this.eventReadOnly; }

    public void setEventReadOnly(boolean readOnly) { this.eventReadOnly = readOnly; }

    public Long getVersion() {
        return getBffNotificationEventId().getVersion();
    }
    
    public void setVersion(Long version) {
        getBffNotificationEventId().setVersion(version);
    }

    private String tenantId;

    public String getTenantId() {
        return this.tenantId;
    }

    public void setTenantId(String tenantId) {
        this.tenantId = tenantId;
    }

    private String createdBy;

    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    private OffsetDateTime createdAt;

    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }


    private String commandId;

    public String getCommandId() {
        return commandId;
    }

    public void setCommandId(String commandId) {
        this.commandId = commandId;
    }

    private String commandType;

    public String getCommandType() {
        return commandType;
    }

    public void setCommandType(String commandType) {
        this.commandType = commandType;
    }

    protected AbstractBffNotificationEvent() {
    }

    protected AbstractBffNotificationEvent(BffNotificationEventId eventId) {
        this.bffNotificationEventId = eventId;
    }


    public abstract String getEventType();

    public static class BffNotificationLobEvent extends AbstractBffNotificationEvent {

        public Map<String, Object> getDynamicProperties() {
            return dynamicProperties;
        }

        public void setDynamicProperties(Map<String, Object> dynamicProperties) {
            if (dynamicProperties == null) {
                throw new IllegalArgumentException("dynamicProperties is null.");
            }
            this.dynamicProperties = dynamicProperties;
        }

        private Map<String, Object> dynamicProperties = new HashMap<>();

        @Override
        public String getEventType() {
            return "BffNotificationLobEvent";
        }

    }


    public static abstract class AbstractBffNotificationStateEvent extends AbstractBffNotificationEvent implements BffNotificationEvent.BffNotificationStateEvent {
        private String notificationTypeId;

        public String getNotificationTypeId()
        {
            return this.notificationTypeId;
        }

        public void setNotificationTypeId(String notificationTypeId)
        {
            this.notificationTypeId = notificationTypeId;
        }

        private String referenceDocumentTypeId;

        public String getReferenceDocumentTypeId()
        {
            return this.referenceDocumentTypeId;
        }

        public void setReferenceDocumentTypeId(String referenceDocumentTypeId)
        {
            this.referenceDocumentTypeId = referenceDocumentTypeId;
        }

        private String referenceDocumentId;

        public String getReferenceDocumentId()
        {
            return this.referenceDocumentId;
        }

        public void setReferenceDocumentId(String referenceDocumentId)
        {
            this.referenceDocumentId = referenceDocumentId;
        }

        private String referenceDocumentNumber;

        public String getReferenceDocumentNumber()
        {
            return this.referenceDocumentNumber;
        }

        public void setReferenceDocumentNumber(String referenceDocumentNumber)
        {
            this.referenceDocumentNumber = referenceDocumentNumber;
        }

        private String notificationContent;

        public String getNotificationContent()
        {
            return this.notificationContent;
        }

        public void setNotificationContent(String notificationContent)
        {
            this.notificationContent = notificationContent;
        }

        private String statusId;

        public String getStatusId()
        {
            return this.statusId;
        }

        public void setStatusId(String statusId)
        {
            this.statusId = statusId;
        }

        private Long priority;

        public Long getPriority()
        {
            return this.priority;
        }

        public void setPriority(Long priority)
        {
            this.priority = priority;
        }

        private String recipientId;

        public String getRecipientId()
        {
            return this.recipientId;
        }

        public void setRecipientId(String recipientId)
        {
            this.recipientId = recipientId;
        }

        protected AbstractBffNotificationStateEvent(BffNotificationEventId eventId) {
            super(eventId);
        }
    }

    public static abstract class AbstractBffNotificationStateCreated extends AbstractBffNotificationStateEvent implements BffNotificationEvent.BffNotificationStateCreated
    {
        public AbstractBffNotificationStateCreated() {
            this(new BffNotificationEventId());
        }

        public AbstractBffNotificationStateCreated(BffNotificationEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.CREATED;
        }

    }


    public static abstract class AbstractBffNotificationStateMergePatched extends AbstractBffNotificationStateEvent implements BffNotificationEvent.BffNotificationStateMergePatched
    {
        public AbstractBffNotificationStateMergePatched() {
            this(new BffNotificationEventId());
        }

        public AbstractBffNotificationStateMergePatched(BffNotificationEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.MERGE_PATCHED;
        }

        private Boolean isPropertyNotificationTypeIdRemoved;

        public Boolean getIsPropertyNotificationTypeIdRemoved() {
            return this.isPropertyNotificationTypeIdRemoved;
        }

        public void setIsPropertyNotificationTypeIdRemoved(Boolean removed) {
            this.isPropertyNotificationTypeIdRemoved = removed;
        }

        private Boolean isPropertyReferenceDocumentTypeIdRemoved;

        public Boolean getIsPropertyReferenceDocumentTypeIdRemoved() {
            return this.isPropertyReferenceDocumentTypeIdRemoved;
        }

        public void setIsPropertyReferenceDocumentTypeIdRemoved(Boolean removed) {
            this.isPropertyReferenceDocumentTypeIdRemoved = removed;
        }

        private Boolean isPropertyReferenceDocumentIdRemoved;

        public Boolean getIsPropertyReferenceDocumentIdRemoved() {
            return this.isPropertyReferenceDocumentIdRemoved;
        }

        public void setIsPropertyReferenceDocumentIdRemoved(Boolean removed) {
            this.isPropertyReferenceDocumentIdRemoved = removed;
        }

        private Boolean isPropertyReferenceDocumentNumberRemoved;

        public Boolean getIsPropertyReferenceDocumentNumberRemoved() {
            return this.isPropertyReferenceDocumentNumberRemoved;
        }

        public void setIsPropertyReferenceDocumentNumberRemoved(Boolean removed) {
            this.isPropertyReferenceDocumentNumberRemoved = removed;
        }

        private Boolean isPropertyNotificationContentRemoved;

        public Boolean getIsPropertyNotificationContentRemoved() {
            return this.isPropertyNotificationContentRemoved;
        }

        public void setIsPropertyNotificationContentRemoved(Boolean removed) {
            this.isPropertyNotificationContentRemoved = removed;
        }

        private Boolean isPropertyStatusIdRemoved;

        public Boolean getIsPropertyStatusIdRemoved() {
            return this.isPropertyStatusIdRemoved;
        }

        public void setIsPropertyStatusIdRemoved(Boolean removed) {
            this.isPropertyStatusIdRemoved = removed;
        }

        private Boolean isPropertyPriorityRemoved;

        public Boolean getIsPropertyPriorityRemoved() {
            return this.isPropertyPriorityRemoved;
        }

        public void setIsPropertyPriorityRemoved(Boolean removed) {
            this.isPropertyPriorityRemoved = removed;
        }

        private Boolean isPropertyRecipientIdRemoved;

        public Boolean getIsPropertyRecipientIdRemoved() {
            return this.isPropertyRecipientIdRemoved;
        }

        public void setIsPropertyRecipientIdRemoved(Boolean removed) {
            this.isPropertyRecipientIdRemoved = removed;
        }


    }


    public static abstract class AbstractBffNotificationStateDeleted extends AbstractBffNotificationStateEvent implements BffNotificationEvent.BffNotificationStateDeleted
    {
        public AbstractBffNotificationStateDeleted() {
            this(new BffNotificationEventId());
        }

        public AbstractBffNotificationStateDeleted(BffNotificationEventId eventId) {
            super(eventId);
        }

        public String getEventType() {
            return StateEventType.DELETED;
        }

    }

    public static class SimpleBffNotificationStateCreated extends AbstractBffNotificationStateCreated
    {
        public SimpleBffNotificationStateCreated() {
        }

        public SimpleBffNotificationStateCreated(BffNotificationEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleBffNotificationStateMergePatched extends AbstractBffNotificationStateMergePatched
    {
        public SimpleBffNotificationStateMergePatched() {
        }

        public SimpleBffNotificationStateMergePatched(BffNotificationEventId eventId) {
            super(eventId);
        }
    }

    public static class SimpleBffNotificationStateDeleted extends AbstractBffNotificationStateDeleted
    {
        public SimpleBffNotificationStateDeleted() {
        }

        public SimpleBffNotificationStateDeleted(BffNotificationEventId eventId) {
            super(eventId);
        }
    }

}

