// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.domain.producttype;

import java.util.*;
import java.time.OffsetDateTime;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.domain.AbstractCommand;

public abstract class AbstractProductTypeCommand extends AbstractCommand implements ProductTypeCommand {

    private String productTypeId;

    public String getProductTypeId()
    {
        return this.productTypeId;
    }

    public void setProductTypeId(String productTypeId)
    {
        this.productTypeId = productTypeId;
    }

    private Long version;

    public Long getVersion()
    {
        return this.version;
    }

    public void setVersion(Long version)
    {
        this.version = version;
    }


    public static abstract class AbstractCreateOrMergePatchProductType extends AbstractProductTypeCommand implements CreateOrMergePatchProductType
    {
        private String parentTypeId;

        public String getParentTypeId()
        {
            return this.parentTypeId;
        }

        public void setParentTypeId(String parentTypeId)
        {
            this.parentTypeId = parentTypeId;
        }

        private String isPhysical;

        public String getIsPhysical()
        {
            return this.isPhysical;
        }

        public void setIsPhysical(String isPhysical)
        {
            this.isPhysical = isPhysical;
        }

        private String isDigital;

        public String getIsDigital()
        {
            return this.isDigital;
        }

        public void setIsDigital(String isDigital)
        {
            this.isDigital = isDigital;
        }

        private String hasTable;

        public String getHasTable()
        {
            return this.hasTable;
        }

        public void setHasTable(String hasTable)
        {
            this.hasTable = hasTable;
        }

        private String description;

        public String getDescription()
        {
            return this.description;
        }

        public void setDescription(String description)
        {
            this.description = description;
        }

    }

    public static abstract class AbstractCreateProductType extends AbstractCreateOrMergePatchProductType implements CreateProductType
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_CREATE;
        }

    }

    public static abstract class AbstractMergePatchProductType extends AbstractCreateOrMergePatchProductType implements MergePatchProductType
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_MERGE_PATCH;
        }

        private Boolean isPropertyParentTypeIdRemoved;

        public Boolean getIsPropertyParentTypeIdRemoved()
        {
            return this.isPropertyParentTypeIdRemoved;
        }

        public void setIsPropertyParentTypeIdRemoved(Boolean removed)
        {
            this.isPropertyParentTypeIdRemoved = removed;
        }

        private Boolean isPropertyIsPhysicalRemoved;

        public Boolean getIsPropertyIsPhysicalRemoved()
        {
            return this.isPropertyIsPhysicalRemoved;
        }

        public void setIsPropertyIsPhysicalRemoved(Boolean removed)
        {
            this.isPropertyIsPhysicalRemoved = removed;
        }

        private Boolean isPropertyIsDigitalRemoved;

        public Boolean getIsPropertyIsDigitalRemoved()
        {
            return this.isPropertyIsDigitalRemoved;
        }

        public void setIsPropertyIsDigitalRemoved(Boolean removed)
        {
            this.isPropertyIsDigitalRemoved = removed;
        }

        private Boolean isPropertyHasTableRemoved;

        public Boolean getIsPropertyHasTableRemoved()
        {
            return this.isPropertyHasTableRemoved;
        }

        public void setIsPropertyHasTableRemoved(Boolean removed)
        {
            this.isPropertyHasTableRemoved = removed;
        }

        private Boolean isPropertyDescriptionRemoved;

        public Boolean getIsPropertyDescriptionRemoved()
        {
            return this.isPropertyDescriptionRemoved;
        }

        public void setIsPropertyDescriptionRemoved(Boolean removed)
        {
            this.isPropertyDescriptionRemoved = removed;
        }


    }

    public static class SimpleCreateProductType extends AbstractCreateProductType
    {
    }

    
    public static class SimpleMergePatchProductType extends AbstractMergePatchProductType
    {
    }

    
    public static class SimpleDeleteProductType extends AbstractProductTypeCommand implements DeleteProductType
    {
        @Override
        public String getCommandType() {
            return COMMAND_TYPE_DELETE;
        }
    }

    

}

