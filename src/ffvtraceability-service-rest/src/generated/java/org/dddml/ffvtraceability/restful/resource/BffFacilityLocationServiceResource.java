// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.restful.resource;

import java.util.*;
import jakarta.servlet.http.*;
import jakarta.validation.*;
import jakarta.validation.constraints.*;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import org.dddml.support.criterion.*;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import static org.dddml.ffvtraceability.domain.meta.M.*;
import org.dddml.ffvtraceability.domain.service.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.*;

@RequestMapping(path = "BffFacilityLocations", produces = MediaType.APPLICATION_JSON_VALUE)
@RestController
public class BffFacilityLocationServiceResource {
    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private BffFacilityLocationApplicationService bffFacilityLocationApplicationService;

    @GetMapping
    public Page<BffFacilityLocationDto> getFacilityLocations(
        @RequestParam(value = "page", defaultValue = "0") Integer page,
        @RequestParam(value = "size", defaultValue = "20") Integer size,
        @RequestParam(value = "active", required = false) String active,
        @RequestParam(value = "ownerPartyId", required = false) String ownerPartyId,
        @RequestParam(value = "facilityId", required = false) String facilityId
    ) {
        BffFacilityLocationServiceCommands.GetFacilityLocations getFacilityLocations = new BffFacilityLocationServiceCommands.GetFacilityLocations();
        getFacilityLocations.setPage(page);
        getFacilityLocations.setSize(size);
        getFacilityLocations.setActive(active);
        getFacilityLocations.setOwnerPartyId(ownerPartyId);
        getFacilityLocations.setFacilityId(facilityId);
        
        getFacilityLocations.setRequesterId(SecurityContextUtil.getRequesterId());
        return bffFacilityLocationApplicationService.when(getFacilityLocations);
        
    }

}

