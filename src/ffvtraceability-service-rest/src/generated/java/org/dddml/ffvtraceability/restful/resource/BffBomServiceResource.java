// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.restful.resource;

import java.util.*;
import jakarta.servlet.http.*;
import jakarta.validation.*;
import jakarta.validation.constraints.*;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import org.dddml.support.criterion.*;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import static org.dddml.ffvtraceability.domain.meta.M.*;
import org.dddml.ffvtraceability.domain.service.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.*;

@RequestMapping(path = "BffBoms", produces = MediaType.APPLICATION_JSON_VALUE)
@RestController
public class BffBomServiceResource {
    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private BffBomApplicationService bffBomApplicationService;

    @GetMapping
    public Page<BffProductAssociationDto> getBoms(
        @RequestParam(value = "page", defaultValue = "0") Integer page,
        @RequestParam(value = "size", defaultValue = "20") Integer size,
        @RequestParam(value = "productTypeId", required = false) String productTypeId,
        @RequestParam(value = "productId", required = false) String productId,
        @RequestParam(value = "internalId", required = false) String internalId
    ) {
        BffBomServiceCommands.GetBoms getBoms = new BffBomServiceCommands.GetBoms();
        getBoms.setPage(page);
        getBoms.setSize(size);
        getBoms.setProductTypeId(productTypeId);
        getBoms.setProductId(productId);
        getBoms.setInternalId(internalId);
        
        getBoms.setRequesterId(SecurityContextUtil.getRequesterId());
        return bffBomApplicationService.when(getBoms);
        
    }

    @GetMapping("{productId}")
    public BffProductAssociationDto getBOM(
        @PathVariable("productId") String productId
    ) {
        BffBomServiceCommands.GetBOM getBOM = new BffBomServiceCommands.GetBOM();
        getBOM.setProductId(productId);
        
        getBOM.setRequesterId(SecurityContextUtil.getRequesterId());
        return bffBomApplicationService.when(getBOM);
        
    }

    @PostMapping
    public void createBom(
        @RequestBody CreateBomVo bom
    ) {
        BffBomServiceCommands.CreateBom createBom = new BffBomServiceCommands.CreateBom();
        createBom.setBom(bom);
        
        createBom.setRequesterId(SecurityContextUtil.getRequesterId());
        bffBomApplicationService.when(createBom);
        
    }

}

