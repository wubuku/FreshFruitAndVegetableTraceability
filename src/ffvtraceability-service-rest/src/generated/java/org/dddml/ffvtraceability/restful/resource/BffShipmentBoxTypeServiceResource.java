// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.restful.resource;

import java.util.*;
import jakarta.servlet.http.*;
import jakarta.validation.*;
import jakarta.validation.constraints.*;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import org.dddml.support.criterion.*;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import static org.dddml.ffvtraceability.domain.meta.M.*;
import org.dddml.ffvtraceability.domain.service.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.*;

@RequestMapping(path = "BffShipmentBoxTypes", produces = MediaType.APPLICATION_JSON_VALUE)
@RestController
public class BffShipmentBoxTypeServiceResource {
    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private BffShipmentBoxTypeApplicationService bffShipmentBoxTypeApplicationService;

    @GetMapping
    public Page<BffShipmentBoxTypeDto> getShipmentBoxTypes(
        @RequestParam(value = "page", defaultValue = "0") Integer page,
        @RequestParam(value = "size", defaultValue = "20") Integer size,
        @RequestParam(value = "active", required = false) String active,
        @RequestParam(value = "shipmentBoxTypeId", required = false) String shipmentBoxTypeId
    ) {
        BffShipmentBoxTypeServiceCommands.GetShipmentBoxTypes getShipmentBoxTypes = new BffShipmentBoxTypeServiceCommands.GetShipmentBoxTypes();
        getShipmentBoxTypes.setPage(page);
        getShipmentBoxTypes.setSize(size);
        getShipmentBoxTypes.setActive(active);
        getShipmentBoxTypes.setShipmentBoxTypeId(shipmentBoxTypeId);
        
        getShipmentBoxTypes.setRequesterId(SecurityContextUtil.getRequesterId());
        return bffShipmentBoxTypeApplicationService.when(getShipmentBoxTypes);
        
    }

    @GetMapping("{shipmentBoxTypeId}")
    public BffShipmentBoxTypeDto getShipmentBoxType(
        @PathVariable("shipmentBoxTypeId") String shipmentBoxTypeId
    ) {
        BffShipmentBoxTypeServiceCommands.GetShipmentBoxType getShipmentBoxType = new BffShipmentBoxTypeServiceCommands.GetShipmentBoxType();
        getShipmentBoxType.setShipmentBoxTypeId(shipmentBoxTypeId);
        
        getShipmentBoxType.setRequesterId(SecurityContextUtil.getRequesterId());
        return bffShipmentBoxTypeApplicationService.when(getShipmentBoxType);
        
    }

    @PostMapping
    public String createShipmentBoxType(
        @RequestBody BffShipmentBoxTypeDto shipmentBoxType
    ) {
        BffShipmentBoxTypeServiceCommands.CreateShipmentBoxType createShipmentBoxType = new BffShipmentBoxTypeServiceCommands.CreateShipmentBoxType();
        createShipmentBoxType.setShipmentBoxType(shipmentBoxType);
        
        createShipmentBoxType.setRequesterId(SecurityContextUtil.getRequesterId());
        return bffShipmentBoxTypeApplicationService.when(createShipmentBoxType);
        
    }

    @PutMapping("{shipmentBoxTypeId}")
    public void updateShipmentBoxType(
        @PathVariable("shipmentBoxTypeId") String shipmentBoxTypeId,
        @RequestBody BffShipmentBoxTypeDto shipmentBoxType
    ) {
        BffShipmentBoxTypeServiceCommands.UpdateShipmentBoxType updateShipmentBoxType = new BffShipmentBoxTypeServiceCommands.UpdateShipmentBoxType();
        updateShipmentBoxType.setShipmentBoxTypeId(shipmentBoxTypeId);
        updateShipmentBoxType.setShipmentBoxType(shipmentBoxType);
        
        updateShipmentBoxType.setRequesterId(SecurityContextUtil.getRequesterId());
        bffShipmentBoxTypeApplicationService.when(updateShipmentBoxType);
        
    }

    @PutMapping("{shipmentBoxTypeId}/active")
    public void activateShipmentBoxType(
        @PathVariable("shipmentBoxTypeId") String shipmentBoxTypeId,
        @RequestBody Boolean active
    ) {
        BffShipmentBoxTypeServiceCommands.ActivateShipmentBoxType activateShipmentBoxType = new BffShipmentBoxTypeServiceCommands.ActivateShipmentBoxType();
        activateShipmentBoxType.setShipmentBoxTypeId(shipmentBoxTypeId);
        activateShipmentBoxType.setActive(active);
        
        activateShipmentBoxType.setRequesterId(SecurityContextUtil.getRequesterId());
        bffShipmentBoxTypeApplicationService.when(activateShipmentBoxType);
        
    }

    @PostMapping("batchAddShipmentBoxTypes")
    public void batchAddShipmentBoxTypes(
        @RequestBody BffShipmentBoxTypeDto[] shipmentBoxTypes
    ) {
        BffShipmentBoxTypeServiceCommands.BatchAddShipmentBoxTypes batchAddShipmentBoxTypes = new BffShipmentBoxTypeServiceCommands.BatchAddShipmentBoxTypes();
        batchAddShipmentBoxTypes.setShipmentBoxTypes(shipmentBoxTypes);
        
        batchAddShipmentBoxTypes.setRequesterId(SecurityContextUtil.getRequesterId());
        bffShipmentBoxTypeApplicationService.when(batchAddShipmentBoxTypes);
        
    }

}

