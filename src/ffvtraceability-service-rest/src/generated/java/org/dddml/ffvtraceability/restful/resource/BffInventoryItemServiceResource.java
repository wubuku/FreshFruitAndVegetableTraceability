// <autogenerated>
//   This file was generated by dddappp code generator.
//   Any changes made to this file manually will be lost next time the file is regenerated.
// </autogenerated>

package org.dddml.ffvtraceability.restful.resource;

import java.util.*;
import jakarta.servlet.http.*;
import jakarta.validation.*;
import jakarta.validation.constraints.*;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;

import org.dddml.support.criterion.*;
import org.dddml.ffvtraceability.domain.*;
import org.dddml.ffvtraceability.specialization.*;
import static org.dddml.ffvtraceability.domain.meta.M.*;
import org.dddml.ffvtraceability.domain.service.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.*;

@RequestMapping(path = "BffInventoryItems", produces = MediaType.APPLICATION_JSON_VALUE)
@RestController
public class BffInventoryItemServiceResource {
    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Autowired
    private BffInventoryItemApplicationService bffInventoryItemApplicationService;

    @GetMapping("RawItems")
    public Page<BffRawItemInventoryGroupDto> getInventoryItems(
        @RequestParam(value = "page", defaultValue = "0") Integer page,
        @RequestParam(value = "size", defaultValue = "20") Integer size,
        @RequestParam(value = "productName", required = false) String productName,
        @RequestParam(value = "supplierId", required = false) String supplierId,
        @RequestParam(value = "productId", required = false) String productId,
        @RequestParam(value = "facilityId", required = false) String facilityId
    ) {
        BffInventoryItemServiceCommands.GetInventoryItems getInventoryItems = new BffInventoryItemServiceCommands.GetInventoryItems();
        getInventoryItems.setPage(page);
        getInventoryItems.setSize(size);
        getInventoryItems.setProductName(productName);
        getInventoryItems.setSupplierId(supplierId);
        getInventoryItems.setProductId(productId);
        getInventoryItems.setFacilityId(facilityId);
        
        getInventoryItems.setRequesterId(SecurityContextUtil.getRequesterId());
        return bffInventoryItemApplicationService.when(getInventoryItems);
        
    }

}

